

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 01 15:20:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	callstack 0
    86  000600  00                 	db	0
    87  000601                     _valor@ssd$F459:
    88                           	callstack 0
    89  000601  3F                 	db	63
    90  000602  06                 	db	6
    91  000603  5B                 	db	91
    92  000604  4F                 	db	79
    93  000605  66                 	db	102
    94  000606  6D                 	db	109
    95  000607  7D                 	db	125
    96  000608  07                 	db	7
    97  000609  7F                 	db	127
    98  00060A  6F                 	db	111
    99  00060B  77                 	db	119
   100  00060C  7C                 	db	124
   101  00060D  39                 	db	57
   102  00060E  5E                 	db	94
   103  00060F  79                 	db	121
   104  000610  71                 	db	113
   105  000611                     __end_of_valor@ssd$F459:
   106                           	callstack 0
   107  0000                     _SPBRG	set	4015
   108  0000                     _SPBRGH	set	4016
   109  0000                     _BAUDCON	set	4024
   110  0000                     _TXSTA	set	4012
   111  0000                     _RCREG	set	4014
   112  0000                     _RCSTA	set	4011
   113  0000                     _TXREG	set	4013
   114  0000                     _PIR1	set	3998
   115  0000                     _INTCON2	set	4081
   116  0000                     _T2CON	set	4042
   117  0000                     _CCP2CON	set	4026
   118  0000                     _CCPR2L	set	4027
   119  0000                     _CCP1CON	set	4029
   120  0000                     _CCPR1L	set	4030
   121  0000                     _PR2	set	4043
   122  0000                     _TRISE	set	3990
   123  0000                     _TRISD	set	3989
   124  0000                     _TRISC	set	3988
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISA	set	3986
   127  0000                     _PORTE	set	3972
   128  0000                     _PORTD	set	3971
   129  0000                     _PORTC	set	3970
   130  0000                     _PORTB	set	3969
   131  0000                     _PORTA	set	3968
   132  0000                     _ADRESL	set	4035
   133  0000                     _ADRESH	set	4036
   134  0000                     _ADCON2	set	4032
   135  0000                     _ADCON0	set	4034
   136  000611                     STR_3:
   137  000611  54                 	db	84	;'T'
   138  000612  65                 	db	101	;'e'
   139  000613  6D                 	db	109	;'m'
   140  000614  70                 	db	112	;'p'
   141  000615  6F                 	db	111	;'o'
   142  000616  20                 	db	32
   143  000617  44                 	db	68	;'D'
   144  000618  65                 	db	101	;'e'
   145  000619  73                 	db	115	;'s'
   146  00061A  65                 	db	101	;'e'
   147  00061B  6A                 	db	106	;'j'
   148  00061C  61                 	db	97	;'a'
   149  00061D  64                 	db	100	;'d'
   150  00061E  6F                 	db	111	;'o'
   151  00061F  3A                 	db	58	;':'
   152  000620  20                 	db	32
   153  000621  00                 	db	0
   154  000622                     STR_4:
   155  000622  0A                 	db	10
   156  000623  2E                 	db	46
   157  000624  2E                 	db	46
   158  000625  2E                 	db	46
   159  000626  2E                 	db	46
   160  000627  20                 	db	32
   161  000628  4D                 	db	77	;'M'
   162  000629  4D                 	db	77	;'M'
   163  00062A  3A                 	db	58	;':'
   164  00062B  53                 	db	83	;'S'
   165  00062C  53                 	db	83	;'S'
   166  00062D  20                 	db	32
   167  00062E  2E                 	db	46
   168  00062F  2E                 	db	46
   169  000630  2E                 	db	46
   170  000631  2E                 	db	46
   171  000632  00                 	db	0
   172  000633                     STR_5:
   173  000633  42                 	db	66	;'B'
   174  000634  65                 	db	101	;'e'
   175  000635  6D                 	db	109	;'m'
   176  000636  20                 	db	32
   177  000637  56                 	db	86	;'V'
   178  000638  69                 	db	105	;'i'
   179  000639  6E                 	db	110	;'n'
   180  00063A  64                 	db	100	;'d'
   181  00063B  6F                 	db	111	;'o'
   182  00063C  28                 	db	40
   183  00063D  61                 	db	97	;'a'
   184  00063E  29                 	db	41
   185  00063F  20                 	db	32
   186  000640  20                 	db	32
   187  000641  20                 	db	32
   188  000642  00                 	db	0
   189  000643                     STR_6:
   190  000643  31                 	db	49	;'1'
   191  000644  2D                 	db	45
   192  000645  4C                 	db	76	;'L'
   193  000646  69                 	db	105	;'i'
   194  000647  76                 	db	118	;'v'
   195  000648  72                 	db	114	;'r'
   196  000649  65                 	db	101	;'e'
   197  00064A  20                 	db	32
   198  00064B  20                 	db	32
   199  00064C  32                 	db	50	;'2'
   200  00064D  2D                 	db	45
   201  00064E  41                 	db	65	;'A'
   202  00064F  75                 	db	117	;'u'
   203  000650  74                 	db	116	;'t'
   204  000651  6F                 	db	111	;'o'
   205  000652  00                 	db	0
   206  000653                     STR_2:
   207  000653  0A                 	db	10
   208  000654  20                 	db	32
   209  000655  56                 	db	86	;'V'
   210  000656  6F                 	db	111	;'o'
   211  000657  6C                 	db	108	;'l'
   212  000658  74                 	db	116	;'t'
   213  000659  61                 	db	97	;'a'
   214  00065A  72                 	db	114	;'r'
   215  00065B  3F                 	db	63	;'?'
   216  00065C  20                 	db	32
   217  00065D  50                 	db	80	;'P'
   218  00065E  6F                 	db	111	;'o'
   219  00065F  74                 	db	116	;'t'
   220  000660  3D                 	db	61	;'='
   221  000661  30                 	db	48	;'0'
   222  000662  00                 	db	0
   223  000663                     STR_1:
   224  000663  0A                 	db	10
   225  000664  56                 	db	86	;'V'
   226  000665  6F                 	db	111	;'o'
   227  000666  6C                 	db	108	;'l'
   228  000667  74                 	db	116	;'t'
   229  000668  61                 	db	97	;'a'
   230  000669  72                 	db	114	;'r'
   231  00066A  3F                 	db	63	;'?'
   232  00066B  20                 	db	32
   233  00066C  2A                 	db	42
   234  00066D  2D                 	db	45
   235  00066E  53                 	db	83	;'S'
   236  00066F  69                 	db	105	;'i'
   237  000670  6D                 	db	109	;'m'
   238  000671  00                 	db	0
   239  000672  00                 	db	0	; dummy byte at the end
   240  0000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244  001F8A                     __pcinit:
   245                           	callstack 0
   246  001F8A                     start_initialization:
   247                           	callstack 0
   248  001F8A                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Clear objects allocated to COMRAM (33 bytes)
   252  001F8A  EE00  F02C         	lfsr	0,__pbssCOMRAM
   253  001F8E  0E21               	movlw	33
   254  001F90                     clear_0:
   255  001F90  6AEE               	clrf	postinc0,c
   256  001F92  06E8               	decf	wreg,f,c
   257  001F94  E1FD               	bnz	clear_0
   258  001F96                     end_of_initialization:
   259                           	callstack 0
   260  001F96                     __end_of__initialization:
   261                           	callstack 0
   262  001F96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   263  001F98  6EF8               	movwf	tblptru,c
   264  001F9A  0100               	movlb	0
   265  001F9C  EFDA  F00F         	goto	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMRAM
   268  00002C                     __pbssCOMRAM:
   269                           	callstack 0
   270  00002C                     _tempo:
   271                           	callstack 0
   272  00002C                     	ds	8
   273  000034                     _cont:
   274                           	callstack 0
   275  000034                     	ds	4
   276  000038                     _tmp:
   277                           	callstack 0
   278  000038                     	ds	4
   279  00003C                     	ds	2
   280  00003E                     kpDebounce@valorAntigo:
   281                           	callstack 0
   282  00003E                     	ds	2
   283  000040                     kpDebounce@valorNovo:
   284                           	callstack 0
   285  000040                     	ds	2
   286  000042                     _valor:
   287                           	callstack 0
   288  000042                     	ds	2
   289  000044                     _tecla:
   290                           	callstack 0
   291  000044                     	ds	1
   292  000045                     _v3:
   293                           	callstack 0
   294  000045                     	ds	1
   295  000046                     _v2:
   296                           	callstack 0
   297  000046                     	ds	1
   298  000047                     _v1:
   299                           	callstack 0
   300  000047                     	ds	1
   301  000048                     _v0:
   302                           	callstack 0
   303  000048                     	ds	1
   304  000049                     _display@ssd$F460:
   305                           	callstack 0
   306  000049                     	ds	1
   307  00004A                     _started:
   308                           	callstack 0
   309  00004A                     	ds	1
   310  00004B                     _de:
   311                           	callstack 0
   312  00004B                     	ds	1
   313  00004C                     kpDebounce@tempo:
   314                           	callstack 0
   315  00004C                     	ds	1
   316                           
   317                           	psect	cstackCOMRAM
   318  000001                     __pcstackCOMRAM:
   319                           	callstack 0
   320  000001                     ??_kpDebounce:
   321  000001                     ?_adcRead:
   322                           	callstack 0
   323  000001                     ?_kpRead:
   324                           	callstack 0
   325  000001                     ?___wmul:
   326                           	callstack 0
   327  000001                     ?___awdiv:
   328                           	callstack 0
   329  000001                     ?___lwdiv:
   330                           	callstack 0
   331  000001                     ?___lldiv:
   332                           	callstack 0
   333  000001                     ?___aldiv:
   334                           	callstack 0
   335  000001                     Delay40us@i:
   336                           	callstack 0
   337  000001                     adcRead@channel:
   338                           	callstack 0
   339  000001                     digitalWrite@pin:
   340                           	callstack 0
   341  000001                     pinMode@pin:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     ___awdiv@dividend:
   346                           	callstack 0
   347  000001                     ___lwdiv@dividend:
   348                           	callstack 0
   349  000001                     ___lldiv@dividend:
   350                           	callstack 0
   351  000001                     ___aldiv@dividend:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x0
   355  000001                     	ds	1
   356  000002                     Delay2ms@i:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x1
   360  000002                     	ds	1
   361  000003                     adcRead@ADvalor:
   362                           	callstack 0
   363  000003                     digitalWrite@value:
   364                           	callstack 0
   365  000003                     pinMode@type:
   366                           	callstack 0
   367  000003                     ___wmul@multiplicand:
   368                           	callstack 0
   369  000003                     ___awdiv@divisor:
   370                           	callstack 0
   371  000003                     ___lwdiv@divisor:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2
   375  000003                     	ds	2
   376  000005                     ??_pinMode:
   377  000005                     ??_digitalWrite:
   378  000005                     ___awdiv@counter:
   379                           	callstack 0
   380  000005                     ___wmul@product:
   381                           	callstack 0
   382  000005                     ___lwdiv@quotient:
   383                           	callstack 0
   384  000005                     ___lldiv@divisor:
   385                           	callstack 0
   386  000005                     ___aldiv@divisor:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x4
   390  000005                     	ds	1
   391  000006                     kpDebounce@old_D:
   392                           	callstack 0
   393  000006                     ___awdiv@sign:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x5
   397  000006                     	ds	1
   398  000007                     ??_ssdUpdate:
   399  000007                     lcdCommand@old_D:
   400                           	callstack 0
   401  000007                     lcdData@valor:
   402                           	callstack 0
   403  000007                     ___lwdiv@counter:
   404                           	callstack 0
   405  000007                     kpDebounce@k:
   406                           	callstack 0
   407  000007                     ___awdiv@quotient:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x6
   411  000007                     	ds	1
   412  000008                     ??_pwmSet1:
   413  000008                     lcdCommand@cmd:
   414                           	callstack 0
   415  000008                     lcdData@old_D:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x7
   419  000008                     	ds	1
   420  000009                     ?___awmod:
   421                           	callstack 0
   422  000009                     kpDebounce@j:
   423                           	callstack 0
   424  000009                     ___aldiv@counter:
   425                           	callstack 0
   426  000009                     printf@c:
   427                           	callstack 0
   428  000009                     display@coluna:
   429                           	callstack 0
   430  000009                     ___awmod@dividend:
   431                           	callstack 0
   432  000009                     ___lldiv@quotient:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x8
   436  000009                     	ds	1
   437  00000A                     kpDebounce@i:
   438                           	callstack 0
   439  00000A                     pwmSet1@porcento:
   440                           	callstack 0
   441  00000A                     ___aldiv@sign:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x9
   445  00000A                     	ds	1
   446  00000B                     ??_printf:
   447  00000B                     ??_display:
   448  00000B                     pwmSet1@val:
   449                           	callstack 0
   450  00000B                     ___awmod@divisor:
   451                           	callstack 0
   452  00000B                     ___aldiv@quotient:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xA
   456  00000B                     	ds	2
   457  00000D                     ___lldiv@counter:
   458                           	callstack 0
   459  00000D                     ___awmod@counter:
   460                           	callstack 0
   461  00000D                     printf@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xC
   465  00000D                     	ds	1
   466  00000E                     ?___llmod:
   467                           	callstack 0
   468  00000E                     ___awmod@sign:
   469                           	callstack 0
   470  00000E                     ___llmod@dividend:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0xD
   474  00000E                     	ds	1
   475  00000F                     ??_temporizador:
   476  00000F                     pwmFrequency@freq:
   477                           	callstack 0
   478  00000F                     start@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xE
   482  00000F                     	ds	2
   483  000011                     ??_livreVentilador:
   484  000011                     temporizador@aux:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  000011                     	ds	1
   489  000012                     ___llmod@divisor:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     livreVentilador@on:
   495                           	callstack 0
   496  000013                     temporizador@i:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500  000013                     	ds	2
   501  000015                     livreVentilador@valor:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x14
   505  000015                     	ds	1
   506  000016                     ___llmod@counter:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x15
   510  000016                     	ds	1
   511  000017                     ssdDigit@pos:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x16
   515  000017                     	ds	1
   516  000018                     ssdDigit@val:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x17
   520  000018                     	ds	1
   521  000019                     contador@cont:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x18
   525  000019                     	ds	4
   526  00001D                     contador@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  00001D                     	ds	2
   531  00001F                     contador@j:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1E
   535  00001F                     	ds	2
   536  000021                     autoVentilador@on:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x20
   540  000021                     	ds	2
   541  000023                     autoVentilador@x:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x22
   545  000023                     	ds	2
   546  000025                     autoVentilador@x_522:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x24
   550  000025                     	ds	2
   551  000027                     autoVentilador@valor:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x26
   555  000027                     	ds	2
   556  000029                     ??_func:
   557                           
   558                           ; 1 bytes @ 0x28
   559  000029                     	ds	2
   560  00002B                     func@tecla:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x2A
   564  00002B                     	ds	1
   565  00002C                     
   566                           ; 1 bytes @ 0x2B
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 13 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  tmp             2    0        int 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels required when called: 7
   592 ;; This function calls:
   593 ;;		_func
   594 ;;		_start
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text0
   601  001FB4                     __ptext0:
   602                           	callstack 0
   603  001FB4                     _main:
   604                           	callstack 24
   605  001FB4                     
   606                           ;main.c: 17:     start();
   607  001FB4  EC54  F00C         	call	_start	;wreg free
   608  001FB8                     l3527:
   609                           
   610                           ;main.c: 20:         func();
   611  001FB8  ECF1  F00E         	call	_func	;wreg free
   612  001FBC  EFDC  F00F         	goto	l3527
   613  001FC0  EF00  F000         	goto	start
   614  001FC4                     __end_of_main:
   615                           	callstack 0
   616                           
   617 ;; *************** function _func *****************
   618 ;; Defined at:
   619 ;;		line 40 in file "menu.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  tecla           1   42[COMRAM] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   633 ;;      Params:         0       0       0       0       0       0       0
   634 ;;      Locals:         1       0       0       0       0       0       0
   635 ;;      Temps:          2       0       0       0       0       0       0
   636 ;;      Totals:         3       0       0       0       0       0       0
   637 ;;Total ram usage:        3 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 6
   640 ;; This function calls:
   641 ;;		_autoVentilador
   642 ;;		_kpDebounce
   643 ;;		_kpRead
   644 ;;		_livreVentilador
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text1
   651  001DE2                     __ptext1:
   652                           	callstack 0
   653  001DE2                     _func:
   654                           	callstack 24
   655  001DE2                     
   656                           ;menu.c: 42:     unsigned char tecla;;menu.c: 44:     kpDebounce();
   657  001DE2  ECB1  F009         	call	_kpDebounce	;wreg free
   658  001DE6                     
   659                           ;menu.c: 46:     if (kpRead() != tecla) {
   660  001DE6  502B               	movf	func@tecla^0,w,c
   661  001DE8  6E29               	movwf	??_func^0,c
   662  001DEA  6A2A               	clrf	(??_func+1)^0,c
   663  001DEC  ECE2  F00F         	call	_kpRead	;wreg free
   664  001DF0  5029               	movf	??_func^0,w,c
   665  001DF2  1801               	xorwf	?_kpRead^0,w,c
   666  001DF4  E109               	bnz	u2710
   667  001DF6  502A               	movf	(??_func+1)^0,w,c
   668  001DF8  1802               	xorwf	(?_kpRead+1)^0,w,c
   669  001DFA  B4D8               	btfsc	status,2,c
   670  001DFC  EF02  F00F         	goto	u2711
   671  001E00  EF04  F00F         	goto	u2710
   672  001E04                     u2711:
   673  001E04  EF1A  F00F         	goto	l633
   674  001E08                     u2710:
   675  001E08                     
   676                           ;menu.c: 47:         tecla = kpRead();
   677  001E08  ECE2  F00F         	call	_kpRead	;wreg free
   678  001E0C  5001               	movf	?_kpRead^0,w,c
   679  001E0E  6E2B               	movwf	func@tecla^0,c
   680  001E10                     
   681                           ;menu.c: 48:         if (((tecla) & (1<<(3)))) {
   682  001E10  A62B               	btfss	func@tecla^0,3,c
   683  001E12  EF0D  F00F         	goto	u2721
   684  001E16  EF0F  F00F         	goto	u2720
   685  001E1A                     u2721:
   686  001E1A  EF11  F00F         	goto	l3473
   687  001E1E                     u2720:
   688  001E1E                     
   689                           ;menu.c: 49:             livreVentilador();
   690  001E1E  ECF2  F008         	call	_livreVentilador	;wreg free
   691  001E22                     l3473:
   692                           
   693                           ;menu.c: 51:         if (((tecla) & (1<<(7)))) {
   694  001E22  AE2B               	btfss	func@tecla^0,7,c
   695  001E24  EF16  F00F         	goto	u2731
   696  001E28  EF18  F00F         	goto	u2730
   697  001E2C                     u2731:
   698  001E2C  EF1A  F00F         	goto	l633
   699  001E30                     u2730:
   700  001E30                     
   701                           ;menu.c: 52:             autoVentilador();
   702  001E30  EC44  F007         	call	_autoVentilador	;wreg free
   703  001E34                     l633:
   704  001E34  0012               	return		;funcret
   705  001E36                     __end_of_func:
   706                           	callstack 0
   707                           
   708 ;; *************** function _livreVentilador *****************
   709 ;; Defined at:
   710 ;;		line 22 in file "ventilador.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  valor           2   20[COMRAM] int 
   715 ;;  on              2   18[COMRAM] int 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   725 ;;      Params:         0       0       0       0       0       0       0
   726 ;;      Locals:         4       0       0       0       0       0       0
   727 ;;      Temps:          2       0       0       0       0       0       0
   728 ;;      Totals:         6       0       0       0       0       0       0
   729 ;;Total ram usage:        6 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; Hardware stack levels required when called: 5
   732 ;; This function calls:
   733 ;;		___awdiv
   734 ;;		___awmod
   735 ;;		_adcInit
   736 ;;		_adcRead
   737 ;;		_kpDebounce
   738 ;;		_kpInit
   739 ;;		_kpRead
   740 ;;		_lcdCommand
   741 ;;		_lcdData
   742 ;;		_printf
   743 ;;		_pwmFrequency
   744 ;;		_pwmInit
   745 ;;		_pwmSet1
   746 ;;		_start
   747 ;; This function is called by:
   748 ;;		_func
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text2
   753  0011E4                     __ptext2:
   754                           	callstack 0
   755  0011E4                     _livreVentilador:
   756                           	callstack 24
   757  0011E4                     
   758                           ;ventilador.c: 23:     adcInit();
   759  0011E4  EC6D  F00F         	call	_adcInit	;wreg free
   760                           
   761                           ;ventilador.c: 24:     pwmInit();
   762  0011E8  ECD0  F00F         	call	_pwmInit	;wreg free
   763                           
   764                           ;ventilador.c: 25:     kpInit();
   765  0011EC  ECE7  F00F         	call	_kpInit	;wreg free
   766                           
   767                           ;ventilador.c: 26:     pwmFrequency(2000);
   768  0011F0  0E07               	movlw	7
   769  0011F2  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   770  0011F4  0ED0               	movlw	208
   771  0011F6  6E0F               	movwf	pwmFrequency@freq^0,c
   772  0011F8  EC98  F00F         	call	_pwmFrequency	;wreg free
   773  0011FC                     
   774                           ;ventilador.c: 27:     pwmSet1(50);
   775  0011FC  0E32               	movlw	50
   776  0011FE  EC2F  F00E         	call	_pwmSet1
   777  001202                     
   778                           ;ventilador.c: 28:     int valor, on = 1;
   779  001202  0E00               	movlw	0
   780  001204  6E14               	movwf	(livreVentilador@on+1)^0,c
   781  001206  0E01               	movlw	1
   782  001208  6E13               	movwf	livreVentilador@on^0,c
   783                           
   784                           ;ventilador.c: 29:     while (on) {
   785  00120A  EFA5  F009         	goto	l3395
   786  00120E                     l3353:
   787                           
   788                           ;ventilador.c: 30:         lcdCommand(0x80);
   789  00120E  0E80               	movlw	128
   790  001210  EC3E  F00D         	call	_lcdCommand
   791                           
   792                           ;ventilador.c: 31:         valor = adcRead(0);
   793  001214  0E00               	movlw	0
   794  001216  6E02               	movwf	(adcRead@channel+1)^0,c
   795  001218  0E00               	movlw	0
   796  00121A  6E01               	movwf	adcRead@channel^0,c
   797  00121C  EC45  F00F         	call	_adcRead	;wreg free
   798  001220  C001  F015         	movff	?_adcRead,livreVentilador@valor
   799  001224  C002  F016         	movff	?_adcRead+1,livreVentilador@valor+1
   800  001228                     
   801                           ;ventilador.c: 32:         pwmSet1(valor / 10);
   802  001228  C015  F001         	movff	livreVentilador@valor,___awdiv@dividend
   803  00122C  C016  F002         	movff	livreVentilador@valor+1,___awdiv@dividend+1
   804  001230  0E00               	movlw	0
   805  001232  6E04               	movwf	(___awdiv@divisor+1)^0,c
   806  001234  0E0A               	movlw	10
   807  001236  6E03               	movwf	___awdiv@divisor^0,c
   808  001238  EC9A  F00B         	call	___awdiv	;wreg free
   809  00123C  5001               	movf	?___awdiv^0,w,c
   810  00123E  EC2F  F00E         	call	_pwmSet1
   811  001242                     
   812                           ;ventilador.c: 33:         lcdData(' ');
   813  001242  0E20               	movlw	32
   814  001244  EC1B  F00F         	call	_lcdData
   815  001248                     
   816                           ;ventilador.c: 34:         lcdData(' ');
   817  001248  0E20               	movlw	32
   818  00124A  EC1B  F00F         	call	_lcdData
   819  00124E                     
   820                           ;ventilador.c: 35:         lcdData(' ');
   821  00124E  0E20               	movlw	32
   822  001250  EC1B  F00F         	call	_lcdData
   823  001254                     
   824                           ;ventilador.c: 36:         lcdData(' ');
   825  001254  0E20               	movlw	32
   826  001256  EC1B  F00F         	call	_lcdData
   827  00125A                     
   828                           ;ventilador.c: 37:         lcdData(' ');
   829  00125A  0E20               	movlw	32
   830  00125C  EC1B  F00F         	call	_lcdData
   831  001260                     
   832                           ;ventilador.c: 38:         lcdData('P');
   833  001260  0E50               	movlw	80
   834  001262  EC1B  F00F         	call	_lcdData
   835  001266                     
   836                           ;ventilador.c: 39:         lcdData('o');
   837  001266  0E6F               	movlw	111
   838  001268  EC1B  F00F         	call	_lcdData
   839  00126C                     
   840                           ;ventilador.c: 40:         lcdData('t');
   841  00126C  0E74               	movlw	116
   842  00126E  EC1B  F00F         	call	_lcdData
   843  001272                     
   844                           ;ventilador.c: 41:         lcdData('=');
   845  001272  0E3D               	movlw	61
   846  001274  EC1B  F00F         	call	_lcdData
   847  001278                     
   848                           ;ventilador.c: 42:         lcdData((valor / 100) % 10 + '0');
   849  001278  0E00               	movlw	0
   850  00127A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   851  00127C  0E64               	movlw	100
   852  00127E  6E03               	movwf	___awdiv@divisor^0,c
   853  001280  C015  F001         	movff	livreVentilador@valor,___awdiv@dividend
   854  001284  C016  F002         	movff	livreVentilador@valor+1,___awdiv@dividend+1
   855  001288  EC9A  F00B         	call	___awdiv	;wreg free
   856  00128C  C001  F009         	movff	?___awdiv,___awmod@dividend
   857  001290  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   858  001294  0E00               	movlw	0
   859  001296  6E0C               	movwf	(___awmod@divisor+1)^0,c
   860  001298  0E0A               	movlw	10
   861  00129A  6E0B               	movwf	___awmod@divisor^0,c
   862  00129C  ECFC  F00B         	call	___awmod	;wreg free
   863  0012A0  5009               	movf	?___awmod^0,w,c
   864  0012A2  0F30               	addlw	48
   865  0012A4  EC1B  F00F         	call	_lcdData
   866  0012A8                     
   867                           ;ventilador.c: 43:         lcdData((valor / 10) % 10 + '0');
   868  0012A8  0E00               	movlw	0
   869  0012AA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   870  0012AC  0E0A               	movlw	10
   871  0012AE  6E03               	movwf	___awdiv@divisor^0,c
   872  0012B0  C015  F001         	movff	livreVentilador@valor,___awdiv@dividend
   873  0012B4  C016  F002         	movff	livreVentilador@valor+1,___awdiv@dividend+1
   874  0012B8  EC9A  F00B         	call	___awdiv	;wreg free
   875  0012BC  C001  F009         	movff	?___awdiv,___awmod@dividend
   876  0012C0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   877  0012C4  0E00               	movlw	0
   878  0012C6  6E0C               	movwf	(___awmod@divisor+1)^0,c
   879  0012C8  0E0A               	movlw	10
   880  0012CA  6E0B               	movwf	___awmod@divisor^0,c
   881  0012CC  ECFC  F00B         	call	___awmod	;wreg free
   882  0012D0  5009               	movf	?___awmod^0,w,c
   883  0012D2  0F30               	addlw	48
   884  0012D4  EC1B  F00F         	call	_lcdData
   885  0012D8                     
   886                           ;ventilador.c: 44:         lcdData((valor / 1) % 10 + '0');
   887  0012D8  C015  F009         	movff	livreVentilador@valor,___awmod@dividend
   888  0012DC  C016  F00A         	movff	livreVentilador@valor+1,___awmod@dividend+1
   889  0012E0  0E00               	movlw	0
   890  0012E2  6E0C               	movwf	(___awmod@divisor+1)^0,c
   891  0012E4  0E0A               	movlw	10
   892  0012E6  6E0B               	movwf	___awmod@divisor^0,c
   893  0012E8  ECFC  F00B         	call	___awmod	;wreg free
   894  0012EC  5009               	movf	?___awmod^0,w,c
   895  0012EE  0F30               	addlw	48
   896  0012F0  EC1B  F00F         	call	_lcdData
   897  0012F4                     
   898                           ;ventilador.c: 45:         printf("\nVoltar? *-Sim");
   899  0012F4  0E63               	movlw	low STR_1
   900  0012F6  6E09               	movwf	printf@c^0,c
   901  0012F8  0E06               	movlw	high STR_1
   902  0012FA  6E0A               	movwf	(printf@c+1)^0,c
   903  0012FC  EC7D  F00D         	call	_printf	;wreg free
   904  001300                     
   905                           ;ventilador.c: 46:         kpDebounce();
   906  001300  ECB1  F009         	call	_kpDebounce	;wreg free
   907  001304                     
   908                           ;ventilador.c: 47:         if (kpRead() != tecla) {
   909  001304  5044               	movf	_tecla^0,w,c
   910  001306  6E11               	movwf	??_livreVentilador^0,c
   911  001308  6A12               	clrf	(??_livreVentilador+1)^0,c
   912  00130A  ECE2  F00F         	call	_kpRead	;wreg free
   913  00130E  5011               	movf	??_livreVentilador^0,w,c
   914  001310  1801               	xorwf	?_kpRead^0,w,c
   915  001312  E109               	bnz	u2630
   916  001314  5012               	movf	(??_livreVentilador+1)^0,w,c
   917  001316  1802               	xorwf	(?_kpRead+1)^0,w,c
   918  001318  B4D8               	btfsc	status,2,c
   919  00131A  EF91  F009         	goto	u2631
   920  00131E  EF93  F009         	goto	u2630
   921  001322                     u2631:
   922  001322  EFA5  F009         	goto	l3395
   923  001326                     u2630:
   924  001326                     
   925                           ;ventilador.c: 48:             tecla = kpRead();
   926  001326  ECE2  F00F         	call	_kpRead	;wreg free
   927  00132A  5001               	movf	?_kpRead^0,w,c
   928  00132C  6E44               	movwf	_tecla^0,c
   929  00132E                     
   930                           ;ventilador.c: 49:             if (((tecla) & (1<<(0)))) {
   931  00132E  A044               	btfss	_tecla^0,0,c
   932  001330  EF9C  F009         	goto	u2641
   933  001334  EF9E  F009         	goto	u2640
   934  001338                     u2641:
   935  001338  EFA5  F009         	goto	l3395
   936  00133C                     u2640:
   937  00133C                     
   938                           ;ventilador.c: 50:                 pwmSet1(0);
   939  00133C  0E00               	movlw	0
   940  00133E  EC2F  F00E         	call	_pwmSet1
   941  001342                     
   942                           ;ventilador.c: 51:                 on = 0;
   943  001342  0E00               	movlw	0
   944  001344  6E14               	movwf	(livreVentilador@on+1)^0,c
   945  001346  0E00               	movlw	0
   946  001348  6E13               	movwf	livreVentilador@on^0,c
   947  00134A                     l3395:
   948                           
   949                           ;ventilador.c: 29:     while (on) {
   950  00134A  5013               	movf	livreVentilador@on^0,w,c
   951  00134C  1014               	iorwf	(livreVentilador@on+1)^0,w,c
   952  00134E  A4D8               	btfss	status,2,c
   953  001350  EFAC  F009         	goto	u2651
   954  001354  EFAE  F009         	goto	u2650
   955  001358                     u2651:
   956  001358  EF07  F009         	goto	l3353
   957  00135C                     u2650:
   958  00135C                     
   959                           ;ventilador.c: 55:     start();
   960  00135C  EC54  F00C         	call	_start	;wreg free
   961  001360  0012               	return		;funcret
   962  001362                     __end_of_livreVentilador:
   963                           	callstack 0
   964                           
   965 ;; *************** function _autoVentilador *****************
   966 ;; Defined at:
   967 ;;		line 58 in file "ventilador.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  x               2   36[COMRAM] int 
   972 ;;  x               2   34[COMRAM] int 
   973 ;;  valor           2   38[COMRAM] int 
   974 ;;  on              2   32[COMRAM] int 
   975 ;;  aux             2    0        int 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         0       0       0       0       0       0       0
   986 ;;      Locals:         8       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0
   988 ;;      Totals:         8       0       0       0       0       0       0
   989 ;;Total ram usage:        8 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 5
   992 ;; This function calls:
   993 ;;		___awdiv
   994 ;;		___awmod
   995 ;;		_adcInit
   996 ;;		_adcRead
   997 ;;		_contador
   998 ;;		_lcdCommand
   999 ;;		_lcdData
  1000 ;;		_printf
  1001 ;;		_pwmFrequency
  1002 ;;		_pwmInit
  1003 ;;		_pwmSet1
  1004 ;;		_start
  1005 ;;		_temporizador
  1006 ;; This function is called by:
  1007 ;;		_func
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text3
  1012  000E88                     __ptext3:
  1013                           	callstack 0
  1014  000E88                     _autoVentilador:
  1015                           	callstack 24
  1016  000E88                     
  1017                           ;ventilador.c: 59:     adcInit();
  1018  000E88  EC6D  F00F         	call	_adcInit	;wreg free
  1019                           
  1020                           ;ventilador.c: 60:     pwmInit();
  1021  000E8C  ECD0  F00F         	call	_pwmInit	;wreg free
  1022  000E90                     
  1023                           ;ventilador.c: 62:     int valor, on = 1, aux = 1;
  1024  000E90  0E00               	movlw	0
  1025  000E92  6E22               	movwf	(autoVentilador@on+1)^0,c
  1026  000E94  0E01               	movlw	1
  1027  000E96  6E21               	movwf	autoVentilador@on^0,c
  1028  000E98                     
  1029                           ;ventilador.c: 63:     temporizador();
  1030  000E98  EC3A  F003         	call	_temporizador	;wreg free
  1031  000E9C                     
  1032                           ;ventilador.c: 64:     pwmFrequency(2000);
  1033  000E9C  0E07               	movlw	7
  1034  000E9E  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1035  000EA0  0ED0               	movlw	208
  1036  000EA2  6E0F               	movwf	pwmFrequency@freq^0,c
  1037  000EA4  EC98  F00F         	call	_pwmFrequency	;wreg free
  1038  000EA8                     
  1039                           ;ventilador.c: 65:     pwmSet1(50);
  1040  000EA8  0E32               	movlw	50
  1041  000EAA  EC2F  F00E         	call	_pwmSet1
  1042                           
  1043                           ;ventilador.c: 67:     while (on) {
  1044  000EAE  EF21  F008         	goto	l3457
  1045  000EB2                     l3411:
  1046                           
  1047                           ;ventilador.c: 68:         contador(cont);
  1048  000EB2  C034  F019         	movff	_cont,contador@cont
  1049  000EB6  C035  F01A         	movff	_cont+1,contador@cont+1
  1050  000EBA  C036  F01B         	movff	_cont+2,contador@cont+2
  1051  000EBE  C037  F01C         	movff	_cont+3,contador@cont+3
  1052  000EC2  EC30  F008         	call	_contador	;wreg free
  1053  000EC6                     
  1054                           ;ventilador.c: 69:         cont--;
  1055  000EC6  0634               	decf	_cont^0,f,c
  1056  000EC8  0E00               	movlw	0
  1057  000ECA  5A35               	subwfb	(_cont+1)^0,f,c
  1058  000ECC  5A36               	subwfb	(_cont+2)^0,f,c
  1059  000ECE  5A37               	subwfb	(_cont+3)^0,f,c
  1060  000ED0                     
  1061                           ;ventilador.c: 70:         lcdCommand(0x80);
  1062  000ED0  0E80               	movlw	128
  1063  000ED2  EC3E  F00D         	call	_lcdCommand
  1064  000ED6                     
  1065                           ;ventilador.c: 71:         valor = adcRead(0);
  1066  000ED6  0E00               	movlw	0
  1067  000ED8  6E02               	movwf	(adcRead@channel+1)^0,c
  1068  000EDA  0E00               	movlw	0
  1069  000EDC  6E01               	movwf	adcRead@channel^0,c
  1070  000EDE  EC45  F00F         	call	_adcRead	;wreg free
  1071  000EE2  C001  F027         	movff	?_adcRead,autoVentilador@valor
  1072  000EE6  C002  F028         	movff	?_adcRead+1,autoVentilador@valor+1
  1073  000EEA                     
  1074                           ;ventilador.c: 72:         pwmSet1(valor / 10);
  1075  000EEA  C027  F001         	movff	autoVentilador@valor,___awdiv@dividend
  1076  000EEE  C028  F002         	movff	autoVentilador@valor+1,___awdiv@dividend+1
  1077  000EF2  0E00               	movlw	0
  1078  000EF4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1079  000EF6  0E0A               	movlw	10
  1080  000EF8  6E03               	movwf	___awdiv@divisor^0,c
  1081  000EFA  EC9A  F00B         	call	___awdiv	;wreg free
  1082  000EFE  5001               	movf	?___awdiv^0,w,c
  1083  000F00  EC2F  F00E         	call	_pwmSet1
  1084  000F04                     
  1085                           ;ventilador.c: 73:         for (int x = 0; x < 5; x++)
  1086  000F04  0E00               	movlw	0
  1087  000F06  6E24               	movwf	(autoVentilador@x+1)^0,c
  1088  000F08  0E00               	movlw	0
  1089  000F0A  6E23               	movwf	autoVentilador@x^0,c
  1090  000F0C                     l3427:
  1091                           
  1092                           ;ventilador.c: 74:             lcdData(' ');
  1093  000F0C  0E20               	movlw	32
  1094  000F0E  EC1B  F00F         	call	_lcdData
  1095  000F12  4A23               	infsnz	autoVentilador@x^0,f,c
  1096  000F14  2A24               	incf	(autoVentilador@x+1)^0,f,c
  1097  000F16  BE24               	btfsc	(autoVentilador@x+1)^0,7,c
  1098  000F18  EF97  F007         	goto	u2661
  1099  000F1C  5024               	movf	(autoVentilador@x+1)^0,w,c
  1100  000F1E  E109               	bnz	u2660
  1101  000F20  0E05               	movlw	5
  1102  000F22  5C23               	subwf	autoVentilador@x^0,w,c
  1103  000F24  A0D8               	btfss	status,0,c
  1104  000F26  EF97  F007         	goto	u2661
  1105  000F2A  EF99  F007         	goto	u2660
  1106  000F2E                     u2661:
  1107  000F2E  EF86  F007         	goto	l3427
  1108  000F32                     u2660:
  1109  000F32                     
  1110                           ;ventilador.c: 75:         lcdData('P');
  1111  000F32  0E50               	movlw	80
  1112  000F34  EC1B  F00F         	call	_lcdData
  1113                           
  1114                           ;ventilador.c: 76:         lcdData('o');
  1115  000F38  0E6F               	movlw	111
  1116  000F3A  EC1B  F00F         	call	_lcdData
  1117                           
  1118                           ;ventilador.c: 77:         lcdData('t');
  1119  000F3E  0E74               	movlw	116
  1120  000F40  EC1B  F00F         	call	_lcdData
  1121                           
  1122                           ;ventilador.c: 78:         lcdData('=');
  1123  000F44  0E3D               	movlw	61
  1124  000F46  EC1B  F00F         	call	_lcdData
  1125                           
  1126                           ;ventilador.c: 79:         lcdData((valor / 100) % 10 + '0');
  1127  000F4A  0E00               	movlw	0
  1128  000F4C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1129  000F4E  0E64               	movlw	100
  1130  000F50  6E03               	movwf	___awdiv@divisor^0,c
  1131  000F52  C027  F001         	movff	autoVentilador@valor,___awdiv@dividend
  1132  000F56  C028  F002         	movff	autoVentilador@valor+1,___awdiv@dividend+1
  1133  000F5A  EC9A  F00B         	call	___awdiv	;wreg free
  1134  000F5E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1135  000F62  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1136  000F66  0E00               	movlw	0
  1137  000F68  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1138  000F6A  0E0A               	movlw	10
  1139  000F6C  6E0B               	movwf	___awmod@divisor^0,c
  1140  000F6E  ECFC  F00B         	call	___awmod	;wreg free
  1141  000F72  5009               	movf	?___awmod^0,w,c
  1142  000F74  0F30               	addlw	48
  1143  000F76  EC1B  F00F         	call	_lcdData
  1144                           
  1145                           ;ventilador.c: 80:         lcdData((valor / 10) % 10 + '0');
  1146  000F7A  0E00               	movlw	0
  1147  000F7C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1148  000F7E  0E0A               	movlw	10
  1149  000F80  6E03               	movwf	___awdiv@divisor^0,c
  1150  000F82  C027  F001         	movff	autoVentilador@valor,___awdiv@dividend
  1151  000F86  C028  F002         	movff	autoVentilador@valor+1,___awdiv@dividend+1
  1152  000F8A  EC9A  F00B         	call	___awdiv	;wreg free
  1153  000F8E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1154  000F92  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1155  000F96  0E00               	movlw	0
  1156  000F98  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1157  000F9A  0E0A               	movlw	10
  1158  000F9C  6E0B               	movwf	___awmod@divisor^0,c
  1159  000F9E  ECFC  F00B         	call	___awmod	;wreg free
  1160  000FA2  5009               	movf	?___awmod^0,w,c
  1161  000FA4  0F30               	addlw	48
  1162  000FA6  EC1B  F00F         	call	_lcdData
  1163                           
  1164                           ;ventilador.c: 81:         lcdData((valor / 1) % 10 + '0');
  1165  000FAA  C027  F009         	movff	autoVentilador@valor,___awmod@dividend
  1166  000FAE  C028  F00A         	movff	autoVentilador@valor+1,___awmod@dividend+1
  1167  000FB2  0E00               	movlw	0
  1168  000FB4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1169  000FB6  0E0A               	movlw	10
  1170  000FB8  6E0B               	movwf	___awmod@divisor^0,c
  1171  000FBA  ECFC  F00B         	call	___awmod	;wreg free
  1172  000FBE  5009               	movf	?___awmod^0,w,c
  1173  000FC0  0F30               	addlw	48
  1174  000FC2  EC1B  F00F         	call	_lcdData
  1175  000FC6                     
  1176                           ;ventilador.c: 82:         for (int x = 0; x < 4; x++)
  1177  000FC6  0E00               	movlw	0
  1178  000FC8  6E26               	movwf	(autoVentilador@x_522+1)^0,c
  1179  000FCA  0E00               	movlw	0
  1180  000FCC  6E25               	movwf	autoVentilador@x_522^0,c
  1181  000FCE                     l3441:
  1182                           
  1183                           ;ventilador.c: 83:             lcdData(' ');
  1184  000FCE  0E20               	movlw	32
  1185  000FD0  EC1B  F00F         	call	_lcdData
  1186  000FD4  4A25               	infsnz	autoVentilador@x_522^0,f,c
  1187  000FD6  2A26               	incf	(autoVentilador@x_522+1)^0,f,c
  1188  000FD8  BE26               	btfsc	(autoVentilador@x_522+1)^0,7,c
  1189  000FDA  EFF8  F007         	goto	u2671
  1190  000FDE  5026               	movf	(autoVentilador@x_522+1)^0,w,c
  1191  000FE0  E109               	bnz	u2670
  1192  000FE2  0E04               	movlw	4
  1193  000FE4  5C25               	subwf	autoVentilador@x_522^0,w,c
  1194  000FE6  A0D8               	btfss	status,0,c
  1195  000FE8  EFF8  F007         	goto	u2671
  1196  000FEC  EFFA  F007         	goto	u2670
  1197  000FF0                     u2671:
  1198  000FF0  EFE7  F007         	goto	l3441
  1199  000FF4                     u2670:
  1200  000FF4                     
  1201                           ;ventilador.c: 84:         printf("\n Voltar? Pot=0");
  1202  000FF4  0E53               	movlw	low STR_2
  1203  000FF6  6E09               	movwf	printf@c^0,c
  1204  000FF8  0E06               	movlw	high STR_2
  1205  000FFA  6E0A               	movwf	(printf@c+1)^0,c
  1206  000FFC  EC7D  F00D         	call	_printf	;wreg free
  1207  001000                     
  1208                           ;ventilador.c: 86:         if (cont == 0)
  1209  001000  5034               	movf	_cont^0,w,c
  1210  001002  1035               	iorwf	(_cont+1)^0,w,c
  1211  001004  1036               	iorwf	(_cont+2)^0,w,c
  1212  001006  1037               	iorwf	(_cont+3)^0,w,c
  1213  001008  A4D8               	btfss	status,2,c
  1214  00100A  EF09  F008         	goto	u2681
  1215  00100E  EF0B  F008         	goto	u2680
  1216  001012                     u2681:
  1217  001012  EF0F  F008         	goto	l3453
  1218  001016                     u2680:
  1219  001016                     
  1220                           ;ventilador.c: 87:             on = 0;
  1221  001016  0E00               	movlw	0
  1222  001018  6E22               	movwf	(autoVentilador@on+1)^0,c
  1223  00101A  0E00               	movlw	0
  1224  00101C  6E21               	movwf	autoVentilador@on^0,c
  1225  00101E                     l3453:
  1226                           
  1227                           ;ventilador.c: 88:         if (valor < 10)
  1228  00101E  BE28               	btfsc	(autoVentilador@valor+1)^0,7,c
  1229  001020  EF1D  F008         	goto	u2690
  1230  001024  5028               	movf	(autoVentilador@valor+1)^0,w,c
  1231  001026  E107               	bnz	u2691
  1232  001028  0E0A               	movlw	10
  1233  00102A  5C27               	subwf	autoVentilador@valor^0,w,c
  1234  00102C  B0D8               	btfsc	status,0,c
  1235  00102E  EF1B  F008         	goto	u2691
  1236  001032  EF1D  F008         	goto	u2690
  1237  001036                     u2691:
  1238  001036  EF21  F008         	goto	l3457
  1239  00103A                     u2690:
  1240  00103A                     
  1241                           ;ventilador.c: 89:             on = 0;
  1242  00103A  0E00               	movlw	0
  1243  00103C  6E22               	movwf	(autoVentilador@on+1)^0,c
  1244  00103E  0E00               	movlw	0
  1245  001040  6E21               	movwf	autoVentilador@on^0,c
  1246  001042                     l3457:
  1247                           
  1248                           ;ventilador.c: 67:     while (on) {
  1249  001042  5021               	movf	autoVentilador@on^0,w,c
  1250  001044  1022               	iorwf	(autoVentilador@on+1)^0,w,c
  1251  001046  A4D8               	btfss	status,2,c
  1252  001048  EF28  F008         	goto	u2701
  1253  00104C  EF2A  F008         	goto	u2700
  1254  001050                     u2701:
  1255  001050  EF59  F007         	goto	l3411
  1256  001054                     u2700:
  1257  001054                     
  1258                           ;ventilador.c: 91:     pwmSet1(0);
  1259  001054  0E00               	movlw	0
  1260  001056  EC2F  F00E         	call	_pwmSet1
  1261  00105A                     
  1262                           ;ventilador.c: 92:     start();
  1263  00105A  EC54  F00C         	call	_start	;wreg free
  1264  00105E  0012               	return		;funcret
  1265  001060                     __end_of_autoVentilador:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _temporizador *****************
  1269 ;; Defined at:
  1270 ;;		line 121 in file "ventilador.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  i               2   18[COMRAM] int 
  1275 ;;  aux             2   16[COMRAM] int 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1285 ;;      Params:         0       0       0       0       0       0       0
  1286 ;;      Locals:         4       0       0       0       0       0       0
  1287 ;;      Temps:          2       0       0       0       0       0       0
  1288 ;;      Totals:         6       0       0       0       0       0       0
  1289 ;;Total ram usage:        6 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 4
  1292 ;; This function calls:
  1293 ;;		___wmul
  1294 ;;		_display
  1295 ;;		_kpDebounce
  1296 ;;		_kpInit
  1297 ;;		_kpRead
  1298 ;;		_lcdCommand
  1299 ;;		_lcdData
  1300 ;;		_printf
  1301 ;;		_ssdInit
  1302 ;; This function is called by:
  1303 ;;		_autoVentilador
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text4
  1308  000674                     __ptext4:
  1309                           	callstack 0
  1310  000674                     _temporizador:
  1311                           	callstack 24
  1312  000674                     
  1313                           ;ventilador.c: 122:     ssdInit();
  1314  000674  ECC6  F00E         	call	_ssdInit	;wreg free
  1315                           
  1316                           ;ventilador.c: 123:     kpInit();
  1317  000678  ECE7  F00F         	call	_kpInit	;wreg free
  1318  00067C                     
  1319                           ;ventilador.c: 125:     tecla = kpRead();
  1320  00067C  ECE2  F00F         	call	_kpRead	;wreg free
  1321  000680  5001               	movf	?_kpRead^0,w,c
  1322  000682  6E44               	movwf	_tecla^0,c
  1323  000684                     
  1324                           ;ventilador.c: 126:     int aux = 4;
  1325  000684  0E00               	movlw	0
  1326  000686  6E12               	movwf	(temporizador@aux+1)^0,c
  1327  000688  0E04               	movlw	4
  1328  00068A  6E11               	movwf	temporizador@aux^0,c
  1329  00068C                     
  1330                           ;ventilador.c: 127:     int i = 0;
  1331  00068C  0E00               	movlw	0
  1332  00068E  6E14               	movwf	(temporizador@i+1)^0,c
  1333  000690  0E00               	movlw	0
  1334  000692  6E13               	movwf	temporizador@i^0,c
  1335  000694                     
  1336                           ;ventilador.c: 128:     lcdCommand(0x0F);
  1337  000694  0E0F               	movlw	15
  1338  000696  EC3E  F00D         	call	_lcdCommand
  1339  00069A                     
  1340                           ;ventilador.c: 129:     lcdCommand(0x80);
  1341  00069A  0E80               	movlw	128
  1342  00069C  EC3E  F00D         	call	_lcdCommand
  1343  0006A0                     
  1344                           ;ventilador.c: 130:     printf("Tempo Desejado: ");
  1345  0006A0  0E11               	movlw	low STR_3
  1346  0006A2  6E09               	movwf	printf@c^0,c
  1347  0006A4  0E06               	movlw	high STR_3
  1348  0006A6  6E0A               	movwf	(printf@c+1)^0,c
  1349  0006A8  EC7D  F00D         	call	_printf	;wreg free
  1350  0006AC                     
  1351                           ;ventilador.c: 131:     printf("\n.... MM:SS ....");
  1352  0006AC  0E22               	movlw	low STR_4
  1353  0006AE  6E09               	movwf	printf@c^0,c
  1354  0006B0  0E06               	movlw	high STR_4
  1355  0006B2  6E0A               	movwf	(printf@c+1)^0,c
  1356  0006B4  EC7D  F00D         	call	_printf	;wreg free
  1357  0006B8                     
  1358                           ;ventilador.c: 132:     display(0);
  1359  0006B8  0E00               	movlw	0
  1360  0006BA  6E0A               	movwf	(display@coluna+1)^0,c
  1361  0006BC  0E00               	movlw	0
  1362  0006BE  6E09               	movwf	display@coluna^0,c
  1363  0006C0  EC65  F00E         	call	_display	;wreg free
  1364                           
  1365                           ;ventilador.c: 133:     while (aux) {
  1366  0006C4  EF69  F004         	goto	l3203
  1367  0006C8                     l3091:
  1368                           
  1369                           ;ventilador.c: 134:         kpDebounce();
  1370  0006C8  ECB1  F009         	call	_kpDebounce	;wreg free
  1371  0006CC                     
  1372                           ;ventilador.c: 135:         if (kpRead() != tecla) {
  1373  0006CC  5044               	movf	_tecla^0,w,c
  1374  0006CE  6E0F               	movwf	??_temporizador^0,c
  1375  0006D0  6A10               	clrf	(??_temporizador+1)^0,c
  1376  0006D2  ECE2  F00F         	call	_kpRead	;wreg free
  1377  0006D6  500F               	movf	??_temporizador^0,w,c
  1378  0006D8  1801               	xorwf	?_kpRead^0,w,c
  1379  0006DA  E109               	bnz	u2310
  1380  0006DC  5010               	movf	(??_temporizador+1)^0,w,c
  1381  0006DE  1802               	xorwf	(?_kpRead+1)^0,w,c
  1382  0006E0  B4D8               	btfsc	status,2,c
  1383  0006E2  EF75  F003         	goto	u2311
  1384  0006E6  EF77  F003         	goto	u2310
  1385  0006EA                     u2311:
  1386  0006EA  EF69  F004         	goto	l3203
  1387  0006EE                     u2310:
  1388  0006EE                     
  1389                           ;ventilador.c: 136:             tecla = kpRead();
  1390  0006EE  ECE2  F00F         	call	_kpRead	;wreg free
  1391  0006F2  5001               	movf	?_kpRead^0,w,c
  1392  0006F4  6E44               	movwf	_tecla^0,c
  1393  0006F6                     
  1394                           ;ventilador.c: 137:             display(i);
  1395  0006F6  C013  F009         	movff	temporizador@i,display@coluna
  1396  0006FA  C014  F00A         	movff	temporizador@i+1,display@coluna+1
  1397  0006FE  EC65  F00E         	call	_display	;wreg free
  1398  000702                     
  1399                           ;ventilador.c: 138:             if (((tecla) & (1<<(3)))) {
  1400  000702  A644               	btfss	_tecla^0,3,c
  1401  000704  EF86  F003         	goto	u2321
  1402  000708  EF88  F003         	goto	u2320
  1403  00070C                     u2321:
  1404  00070C  EF9D  F003         	goto	l3109
  1405  000710                     u2320:
  1406  000710                     
  1407                           ;ventilador.c: 139:                 tempo[i] = 1;
  1408  000710  90D8               	bcf	status,0,c
  1409  000712  3413               	rlcf	temporizador@i^0,w,c
  1410  000714  6ED9               	movwf	fsr2l,c
  1411  000716  3414               	rlcf	(temporizador@i+1)^0,w,c
  1412  000718  6EDA               	movwf	fsr2h,c
  1413  00071A  0E2C               	movlw	low _tempo
  1414  00071C  26D9               	addwf	fsr2l,f,c
  1415  00071E  0E00               	movlw	high _tempo
  1416  000720  22DA               	addwfc	fsr2h,f,c
  1417  000722  0E01               	movlw	1
  1418  000724  6EDE               	movwf	postinc2,c
  1419  000726  0E00               	movlw	0
  1420  000728  6EDD               	movwf	postdec2,c
  1421  00072A                     
  1422                           ;ventilador.c: 140:                 lcdData('1');
  1423  00072A  0E31               	movlw	49
  1424  00072C  EC1B  F00F         	call	_lcdData
  1425  000730                     
  1426                           ;ventilador.c: 141:                 i++;
  1427  000730  4A13               	infsnz	temporizador@i^0,f,c
  1428  000732  2A14               	incf	(temporizador@i+1)^0,f,c
  1429  000734                     
  1430                           ;ventilador.c: 142:                 aux--;
  1431  000734  0611               	decf	temporizador@aux^0,f,c
  1432  000736  A0D8               	btfss	status,0,c
  1433  000738  0612               	decf	(temporizador@aux+1)^0,f,c
  1434  00073A                     l3109:
  1435                           
  1436                           ;ventilador.c: 144:             if (((tecla) & (1<<(7)))) {
  1437  00073A  AE44               	btfss	_tecla^0,7,c
  1438  00073C  EFA2  F003         	goto	u2331
  1439  000740  EFA4  F003         	goto	u2330
  1440  000744                     u2331:
  1441  000744  EFB9  F003         	goto	l3127
  1442  000748                     u2330:
  1443  000748                     
  1444                           ;ventilador.c: 145:                 tempo[i] = 2;
  1445  000748  90D8               	bcf	status,0,c
  1446  00074A  3413               	rlcf	temporizador@i^0,w,c
  1447  00074C  6ED9               	movwf	fsr2l,c
  1448  00074E  3414               	rlcf	(temporizador@i+1)^0,w,c
  1449  000750  6EDA               	movwf	fsr2h,c
  1450  000752  0E2C               	movlw	low _tempo
  1451  000754  26D9               	addwf	fsr2l,f,c
  1452  000756  0E00               	movlw	high _tempo
  1453  000758  22DA               	addwfc	fsr2h,f,c
  1454  00075A  0E02               	movlw	2
  1455  00075C  6EDE               	movwf	postinc2,c
  1456  00075E  0E00               	movlw	0
  1457  000760  6EDD               	movwf	postdec2,c
  1458  000762                     
  1459                           ;ventilador.c: 146:                 lcdData('2');
  1460  000762  0E32               	movlw	50
  1461  000764  EC1B  F00F         	call	_lcdData
  1462  000768                     
  1463                           ;ventilador.c: 147:                 i++;
  1464  000768  4A13               	infsnz	temporizador@i^0,f,c
  1465  00076A  2A14               	incf	(temporizador@i+1)^0,f,c
  1466  00076C                     
  1467                           ;ventilador.c: 148:                 aux--;
  1468  00076C  0611               	decf	temporizador@aux^0,f,c
  1469  00076E  A0D8               	btfss	status,0,c
  1470  000770  0612               	decf	(temporizador@aux+1)^0,f,c
  1471  000772                     l3127:
  1472                           
  1473                           ;ventilador.c: 156:             if (((tecla) & (1<<(2)))) {
  1474  000772  A444               	btfss	_tecla^0,2,c
  1475  000774  EFBE  F003         	goto	u2341
  1476  000778  EFC0  F003         	goto	u2340
  1477  00077C                     u2341:
  1478  00077C  EFD5  F003         	goto	l3137
  1479  000780                     u2340:
  1480  000780                     
  1481                           ;ventilador.c: 157:                 tempo[i] = 4;
  1482  000780  90D8               	bcf	status,0,c
  1483  000782  3413               	rlcf	temporizador@i^0,w,c
  1484  000784  6ED9               	movwf	fsr2l,c
  1485  000786  3414               	rlcf	(temporizador@i+1)^0,w,c
  1486  000788  6EDA               	movwf	fsr2h,c
  1487  00078A  0E2C               	movlw	low _tempo
  1488  00078C  26D9               	addwf	fsr2l,f,c
  1489  00078E  0E00               	movlw	high _tempo
  1490  000790  22DA               	addwfc	fsr2h,f,c
  1491  000792  0E04               	movlw	4
  1492  000794  6EDE               	movwf	postinc2,c
  1493  000796  0E00               	movlw	0
  1494  000798  6EDD               	movwf	postdec2,c
  1495  00079A                     
  1496                           ;ventilador.c: 158:                 lcdData('4');
  1497  00079A  0E34               	movlw	52
  1498  00079C  EC1B  F00F         	call	_lcdData
  1499  0007A0                     
  1500                           ;ventilador.c: 159:                 i++;
  1501  0007A0  4A13               	infsnz	temporizador@i^0,f,c
  1502  0007A2  2A14               	incf	(temporizador@i+1)^0,f,c
  1503  0007A4                     
  1504                           ;ventilador.c: 160:                 aux--;
  1505  0007A4  0611               	decf	temporizador@aux^0,f,c
  1506  0007A6  A0D8               	btfss	status,0,c
  1507  0007A8  0612               	decf	(temporizador@aux+1)^0,f,c
  1508  0007AA                     l3137:
  1509                           
  1510                           ;ventilador.c: 162:             if (((tecla) & (1<<(6)))) {
  1511  0007AA  AC44               	btfss	_tecla^0,6,c
  1512  0007AC  EFDA  F003         	goto	u2351
  1513  0007B0  EFDC  F003         	goto	u2350
  1514  0007B4                     u2351:
  1515  0007B4  EFF1  F003         	goto	l3155
  1516  0007B8                     u2350:
  1517  0007B8                     
  1518                           ;ventilador.c: 163:                 tempo[i] = 5;
  1519  0007B8  90D8               	bcf	status,0,c
  1520  0007BA  3413               	rlcf	temporizador@i^0,w,c
  1521  0007BC  6ED9               	movwf	fsr2l,c
  1522  0007BE  3414               	rlcf	(temporizador@i+1)^0,w,c
  1523  0007C0  6EDA               	movwf	fsr2h,c
  1524  0007C2  0E2C               	movlw	low _tempo
  1525  0007C4  26D9               	addwf	fsr2l,f,c
  1526  0007C6  0E00               	movlw	high _tempo
  1527  0007C8  22DA               	addwfc	fsr2h,f,c
  1528  0007CA  0E05               	movlw	5
  1529  0007CC  6EDE               	movwf	postinc2,c
  1530  0007CE  0E00               	movlw	0
  1531  0007D0  6EDD               	movwf	postdec2,c
  1532  0007D2                     
  1533                           ;ventilador.c: 164:                 lcdData('5');
  1534  0007D2  0E35               	movlw	53
  1535  0007D4  EC1B  F00F         	call	_lcdData
  1536  0007D8                     
  1537                           ;ventilador.c: 165:                 i++;
  1538  0007D8  4A13               	infsnz	temporizador@i^0,f,c
  1539  0007DA  2A14               	incf	(temporizador@i+1)^0,f,c
  1540  0007DC                     
  1541                           ;ventilador.c: 166:                 aux--;
  1542  0007DC  0611               	decf	temporizador@aux^0,f,c
  1543  0007DE  A0D8               	btfss	status,0,c
  1544  0007E0  0612               	decf	(temporizador@aux+1)^0,f,c
  1545  0007E2                     l3155:
  1546                           
  1547                           ;ventilador.c: 174:             if (((tecla) & (1<<(1)))) {
  1548  0007E2  A244               	btfss	_tecla^0,1,c
  1549  0007E4  EFF6  F003         	goto	u2361
  1550  0007E8  EFF8  F003         	goto	u2360
  1551  0007EC                     u2361:
  1552  0007EC  EF0D  F004         	goto	l3165
  1553  0007F0                     u2360:
  1554  0007F0                     
  1555                           ;ventilador.c: 175:                 tempo[i] = 7;
  1556  0007F0  90D8               	bcf	status,0,c
  1557  0007F2  3413               	rlcf	temporizador@i^0,w,c
  1558  0007F4  6ED9               	movwf	fsr2l,c
  1559  0007F6  3414               	rlcf	(temporizador@i+1)^0,w,c
  1560  0007F8  6EDA               	movwf	fsr2h,c
  1561  0007FA  0E2C               	movlw	low _tempo
  1562  0007FC  26D9               	addwf	fsr2l,f,c
  1563  0007FE  0E00               	movlw	high _tempo
  1564  000800  22DA               	addwfc	fsr2h,f,c
  1565  000802  0E07               	movlw	7
  1566  000804  6EDE               	movwf	postinc2,c
  1567  000806  0E00               	movlw	0
  1568  000808  6EDD               	movwf	postdec2,c
  1569  00080A                     
  1570                           ;ventilador.c: 176:                 lcdData('7');
  1571  00080A  0E37               	movlw	55
  1572  00080C  EC1B  F00F         	call	_lcdData
  1573  000810                     
  1574                           ;ventilador.c: 177:                 i++;
  1575  000810  4A13               	infsnz	temporizador@i^0,f,c
  1576  000812  2A14               	incf	(temporizador@i+1)^0,f,c
  1577  000814                     
  1578                           ;ventilador.c: 178:                 aux--;
  1579  000814  0611               	decf	temporizador@aux^0,f,c
  1580  000816  A0D8               	btfss	status,0,c
  1581  000818  0612               	decf	(temporizador@aux+1)^0,f,c
  1582  00081A                     l3165:
  1583                           
  1584                           ;ventilador.c: 180:             if (((tecla) & (1<<(5)))) {
  1585  00081A  AA44               	btfss	_tecla^0,5,c
  1586  00081C  EF12  F004         	goto	u2371
  1587  000820  EF14  F004         	goto	u2370
  1588  000824                     u2371:
  1589  000824  EF29  F004         	goto	l3183
  1590  000828                     u2370:
  1591  000828                     
  1592                           ;ventilador.c: 181:                 tempo[i] = 8;
  1593  000828  90D8               	bcf	status,0,c
  1594  00082A  3413               	rlcf	temporizador@i^0,w,c
  1595  00082C  6ED9               	movwf	fsr2l,c
  1596  00082E  3414               	rlcf	(temporizador@i+1)^0,w,c
  1597  000830  6EDA               	movwf	fsr2h,c
  1598  000832  0E2C               	movlw	low _tempo
  1599  000834  26D9               	addwf	fsr2l,f,c
  1600  000836  0E00               	movlw	high _tempo
  1601  000838  22DA               	addwfc	fsr2h,f,c
  1602  00083A  0E08               	movlw	8
  1603  00083C  6EDE               	movwf	postinc2,c
  1604  00083E  0E00               	movlw	0
  1605  000840  6EDD               	movwf	postdec2,c
  1606  000842                     
  1607                           ;ventilador.c: 182:                 lcdData('8');
  1608  000842  0E38               	movlw	56
  1609  000844  EC1B  F00F         	call	_lcdData
  1610  000848                     
  1611                           ;ventilador.c: 183:                 i++;
  1612  000848  4A13               	infsnz	temporizador@i^0,f,c
  1613  00084A  2A14               	incf	(temporizador@i+1)^0,f,c
  1614  00084C                     
  1615                           ;ventilador.c: 184:                 aux--;
  1616  00084C  0611               	decf	temporizador@aux^0,f,c
  1617  00084E  A0D8               	btfss	status,0,c
  1618  000850  0612               	decf	(temporizador@aux+1)^0,f,c
  1619  000852                     l3183:
  1620                           
  1621                           ;ventilador.c: 192:             if (((tecla) & (1<<(4)))) {
  1622  000852  A844               	btfss	_tecla^0,4,c
  1623  000854  EF2E  F004         	goto	u2381
  1624  000858  EF30  F004         	goto	u2380
  1625  00085C                     u2381:
  1626  00085C  EF45  F004         	goto	l3193
  1627  000860                     u2380:
  1628  000860                     
  1629                           ;ventilador.c: 193:                 tempo[i] = 0;
  1630  000860  90D8               	bcf	status,0,c
  1631  000862  3413               	rlcf	temporizador@i^0,w,c
  1632  000864  6ED9               	movwf	fsr2l,c
  1633  000866  3414               	rlcf	(temporizador@i+1)^0,w,c
  1634  000868  6EDA               	movwf	fsr2h,c
  1635  00086A  0E2C               	movlw	low _tempo
  1636  00086C  26D9               	addwf	fsr2l,f,c
  1637  00086E  0E00               	movlw	high _tempo
  1638  000870  22DA               	addwfc	fsr2h,f,c
  1639  000872  0E00               	movlw	0
  1640  000874  6EDE               	movwf	postinc2,c
  1641  000876  0E00               	movlw	0
  1642  000878  6EDD               	movwf	postdec2,c
  1643  00087A                     
  1644                           ;ventilador.c: 194:                 lcdData('0');
  1645  00087A  0E30               	movlw	48
  1646  00087C  EC1B  F00F         	call	_lcdData
  1647  000880                     
  1648                           ;ventilador.c: 195:                 i++;
  1649  000880  4A13               	infsnz	temporizador@i^0,f,c
  1650  000882  2A14               	incf	(temporizador@i+1)^0,f,c
  1651  000884                     
  1652                           ;ventilador.c: 196:                 aux--;
  1653  000884  0611               	decf	temporizador@aux^0,f,c
  1654  000886  A0D8               	btfss	status,0,c
  1655  000888  0612               	decf	(temporizador@aux+1)^0,f,c
  1656  00088A                     l3193:
  1657                           
  1658                           ;ventilador.c: 198:             if (((tecla) & (1<<(0)))) {
  1659  00088A  A044               	btfss	_tecla^0,0,c
  1660  00088C  EF4A  F004         	goto	u2391
  1661  000890  EF4C  F004         	goto	u2390
  1662  000894                     u2391:
  1663  000894  EF69  F004         	goto	l3203
  1664  000898                     u2390:
  1665  000898                     
  1666                           ;ventilador.c: 199:                 if (i != 0) {
  1667  000898  5013               	movf	temporizador@i^0,w,c
  1668  00089A  1014               	iorwf	(temporizador@i+1)^0,w,c
  1669  00089C  B4D8               	btfsc	status,2,c
  1670  00089E  EF53  F004         	goto	u2401
  1671  0008A2  EF55  F004         	goto	u2400
  1672  0008A6                     u2401:
  1673  0008A6  EF69  F004         	goto	l572
  1674  0008AA                     u2400:
  1675  0008AA                     
  1676                           ;ventilador.c: 200:                     i--;
  1677  0008AA  0613               	decf	temporizador@i^0,f,c
  1678  0008AC  A0D8               	btfss	status,0,c
  1679  0008AE  0614               	decf	(temporizador@i+1)^0,f,c
  1680  0008B0                     
  1681                           ;ventilador.c: 201:                     tempo[i] = 99;
  1682  0008B0  90D8               	bcf	status,0,c
  1683  0008B2  3413               	rlcf	temporizador@i^0,w,c
  1684  0008B4  6ED9               	movwf	fsr2l,c
  1685  0008B6  3414               	rlcf	(temporizador@i+1)^0,w,c
  1686  0008B8  6EDA               	movwf	fsr2h,c
  1687  0008BA  0E2C               	movlw	low _tempo
  1688  0008BC  26D9               	addwf	fsr2l,f,c
  1689  0008BE  0E00               	movlw	high _tempo
  1690  0008C0  22DA               	addwfc	fsr2h,f,c
  1691  0008C2  0E63               	movlw	99
  1692  0008C4  6EDE               	movwf	postinc2,c
  1693  0008C6  0E00               	movlw	0
  1694  0008C8  6EDD               	movwf	postdec2,c
  1695  0008CA                     
  1696                           ;ventilador.c: 202:                     aux++;
  1697  0008CA  4A11               	infsnz	temporizador@aux^0,f,c
  1698  0008CC  2A12               	incf	(temporizador@aux+1)^0,f,c
  1699  0008CE  EF69  F004         	goto	l3203
  1700  0008D2                     l572:
  1701  0008D2                     l3203:
  1702                           
  1703                           ;ventilador.c: 133:     while (aux) {
  1704  0008D2  5011               	movf	temporizador@aux^0,w,c
  1705  0008D4  1012               	iorwf	(temporizador@aux+1)^0,w,c
  1706  0008D6  A4D8               	btfss	status,2,c
  1707  0008D8  EF70  F004         	goto	u2411
  1708  0008DC  EF72  F004         	goto	u2410
  1709  0008E0                     u2411:
  1710  0008E0  EF64  F003         	goto	l3091
  1711  0008E4                     u2410:
  1712  0008E4  EF79  F004         	goto	l3207
  1713  0008E8                     l3205:
  1714                           
  1715                           ;ventilador.c: 208:         tempo[1]++;
  1716  0008E8  4A2E               	infsnz	(_tempo+2)^0,f,c
  1717  0008EA  2A2F               	incf	(_tempo+3)^0,f,c
  1718                           
  1719                           ;ventilador.c: 209:         tempo[2]--;
  1720  0008EC  0630               	decf	(_tempo+4)^0,f,c
  1721  0008EE  A0D8               	btfss	status,0,c
  1722  0008F0  0631               	decf	(_tempo+5)^0,f,c
  1723  0008F2                     l3207:
  1724                           
  1725                           ;ventilador.c: 207:     while (tempo[2] > 5) {
  1726  0008F2  BE31               	btfsc	(_tempo+5)^0,7,c
  1727  0008F4  EF87  F004         	goto	u2420
  1728  0008F8  5031               	movf	(_tempo+5)^0,w,c
  1729  0008FA  E107               	bnz	u2421
  1730  0008FC  0E06               	movlw	6
  1731  0008FE  5C30               	subwf	(_tempo+4)^0,w,c
  1732  000900  B0D8               	btfsc	status,0,c
  1733  000902  EF85  F004         	goto	u2421
  1734  000906  EF87  F004         	goto	u2420
  1735  00090A                     u2421:
  1736  00090A  EF74  F004         	goto	l3205
  1737  00090E                     u2420:
  1738  00090E  EF8E  F004         	goto	l3211
  1739  000912                     l3209:
  1740                           
  1741                           ;ventilador.c: 212:         tempo[1]--;
  1742  000912  062E               	decf	(_tempo+2)^0,f,c
  1743  000914  A0D8               	btfss	status,0,c
  1744  000916  062F               	decf	(_tempo+3)^0,f,c
  1745                           
  1746                           ;ventilador.c: 213:         tempo[0]++;
  1747  000918  4A2C               	infsnz	_tempo^0,f,c
  1748  00091A  2A2D               	incf	(_tempo+1)^0,f,c
  1749  00091C                     l3211:
  1750                           
  1751                           ;ventilador.c: 211:     while (tempo[1] > 9) {
  1752  00091C  BE2F               	btfsc	(_tempo+3)^0,7,c
  1753  00091E  EF9C  F004         	goto	u2430
  1754  000922  502F               	movf	(_tempo+3)^0,w,c
  1755  000924  E107               	bnz	u2431
  1756  000926  0E0A               	movlw	10
  1757  000928  5C2E               	subwf	(_tempo+2)^0,w,c
  1758  00092A  B0D8               	btfsc	status,0,c
  1759  00092C  EF9A  F004         	goto	u2431
  1760  000930  EF9C  F004         	goto	u2430
  1761  000934                     u2431:
  1762  000934  EF89  F004         	goto	l3209
  1763  000938                     u2430:
  1764  000938                     
  1765                           ;ventilador.c: 215:     if (tempo[0] <= 9) {
  1766  000938  BE2D               	btfsc	(_tempo+1)^0,7,c
  1767  00093A  EFAA  F004         	goto	u2440
  1768  00093E  502D               	movf	(_tempo+1)^0,w,c
  1769  000940  E107               	bnz	u2441
  1770  000942  0E0A               	movlw	10
  1771  000944  5C2C               	subwf	_tempo^0,w,c
  1772  000946  B0D8               	btfsc	status,0,c
  1773  000948  EFA8  F004         	goto	u2441
  1774  00094C  EFAA  F004         	goto	u2440
  1775  000950                     u2441:
  1776  000950  EFE3  F004         	goto	l3217
  1777  000954                     u2440:
  1778  000954                     l3215:
  1779                           
  1780                           ;ventilador.c: 216:         cont = (tempo[0]*600) + (tempo[1]*60) + (tempo[2]*10) + (tem
      +                          po[3]*1);
  1781  000954  C02C  F001         	movff	_tempo,___wmul@multiplier
  1782  000958  C02D  F002         	movff	_tempo+1,___wmul@multiplier+1
  1783  00095C  0E02               	movlw	2
  1784  00095E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1785  000960  0E58               	movlw	88
  1786  000962  6E03               	movwf	___wmul@multiplicand^0,c
  1787  000964  EC85  F00F         	call	___wmul	;wreg free
  1788  000968  C001  F00F         	movff	?___wmul,??_temporizador
  1789  00096C  C002  F010         	movff	?___wmul+1,??_temporizador+1
  1790  000970  C02E  F001         	movff	_tempo+2,___wmul@multiplier
  1791  000974  C02F  F002         	movff	_tempo+3,___wmul@multiplier+1
  1792  000978  0E00               	movlw	0
  1793  00097A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1794  00097C  0E3C               	movlw	60
  1795  00097E  6E03               	movwf	___wmul@multiplicand^0,c
  1796  000980  EC85  F00F         	call	___wmul	;wreg free
  1797  000984  5001               	movf	?___wmul^0,w,c
  1798  000986  260F               	addwf	??_temporizador^0,f,c
  1799  000988  5002               	movf	(?___wmul+1)^0,w,c
  1800  00098A  2210               	addwfc	(??_temporizador+1)^0,f,c
  1801  00098C  C030  F001         	movff	_tempo+4,___wmul@multiplier
  1802  000990  C031  F002         	movff	_tempo+5,___wmul@multiplier+1
  1803  000994  0E00               	movlw	0
  1804  000996  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1805  000998  0E0A               	movlw	10
  1806  00099A  6E03               	movwf	___wmul@multiplicand^0,c
  1807  00099C  EC85  F00F         	call	___wmul	;wreg free
  1808  0009A0  5001               	movf	?___wmul^0,w,c
  1809  0009A2  260F               	addwf	??_temporizador^0,f,c
  1810  0009A4  5002               	movf	(?___wmul+1)^0,w,c
  1811  0009A6  2210               	addwfc	(??_temporizador+1)^0,f,c
  1812  0009A8  5032               	movf	(_tempo+6)^0,w,c
  1813  0009AA  260F               	addwf	??_temporizador^0,f,c
  1814  0009AC  5033               	movf	(_tempo+7)^0,w,c
  1815  0009AE  2210               	addwfc	(??_temporizador+1)^0,f,c
  1816  0009B0  C00F  F034         	movff	??_temporizador,_cont
  1817  0009B4  C010  F035         	movff	??_temporizador+1,_cont+1
  1818  0009B8  0E00               	movlw	0
  1819  0009BA  BE35               	btfsc	(_cont+1)^0,7,c
  1820  0009BC  0EFF               	movlw	-1
  1821  0009BE  6E36               	movwf	(_cont+2)^0,c
  1822  0009C0  6E37               	movwf	(_cont+3)^0,c
  1823                           
  1824                           ;ventilador.c: 217:     } else {
  1825  0009C2  EFE9  F004         	goto	l3221
  1826  0009C6                     l3217:
  1827                           
  1828                           ;ventilador.c: 218:         tempo[0] = 9;
  1829  0009C6  0E00               	movlw	0
  1830  0009C8  6E2D               	movwf	(_tempo+1)^0,c
  1831  0009CA  0E09               	movlw	9
  1832  0009CC  6E2C               	movwf	_tempo^0,c
  1833  0009CE  EFAA  F004         	goto	l3215
  1834  0009D2                     l3221:
  1835                           
  1836                           ;ventilador.c: 221:     tmp = cont + 12;
  1837  0009D2  0E0C               	movlw	12
  1838  0009D4  2434               	addwf	_cont^0,w,c
  1839  0009D6  6E38               	movwf	_tmp^0,c
  1840  0009D8  0E00               	movlw	0
  1841  0009DA  2035               	addwfc	(_cont+1)^0,w,c
  1842  0009DC  6E39               	movwf	(_tmp+1)^0,c
  1843  0009DE  0E00               	movlw	0
  1844  0009E0  2036               	addwfc	(_cont+2)^0,w,c
  1845  0009E2  6E3A               	movwf	(_tmp+2)^0,c
  1846  0009E4  0E00               	movlw	0
  1847  0009E6  2037               	addwfc	(_cont+3)^0,w,c
  1848  0009E8  6E3B               	movwf	(_tmp+3)^0,c
  1849  0009EA  0012               	return		;funcret
  1850  0009EC                     __end_of_temporizador:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _kpRead *****************
  1854 ;; Defined at:
  1855 ;;		line 35 in file "keypad.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    0[COMRAM] unsigned int 
  1862 ;; Registers used:
  1863 ;;		None
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         2       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_livreVentilador
  1879 ;;		_temporizador
  1880 ;;		_func
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text5
  1885  001FC4                     __ptext5:
  1886                           	callstack 0
  1887  001FC4                     _kpRead:
  1888                           	callstack 28
  1889  001FC4                     
  1890                           ;keypad.c: 36:     return valor;
  1891  001FC4  C042  F001         	movff	_valor,?_kpRead
  1892  001FC8  C043  F002         	movff	_valor+1,?_kpRead+1
  1893  001FCC  0012               	return		;funcret
  1894  001FCE                     __end_of_kpRead:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _kpDebounce *****************
  1898 ;; Defined at:
  1899 ;;		line 39 in file "keypad.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  k               2    6[COMRAM] int 
  1904 ;;  i               1    9[COMRAM] unsigned char 
  1905 ;;  j               1    8[COMRAM] unsigned char 
  1906 ;;  old_D           1    5[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, prodl, prodh
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         5       0       0       0       0       0       0
  1918 ;;      Temps:          5       0       0       0       0       0       0
  1919 ;;      Totals:        10       0       0       0       0       0       0
  1920 ;;Total ram usage:       10 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_livreVentilador
  1926 ;;		_temporizador
  1927 ;;		_func
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text6
  1932  001362                     __ptext6:
  1933                           	callstack 0
  1934  001362                     _kpDebounce:
  1935                           	callstack 28
  1936  001362                     
  1937                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  1938  001362  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  1939  001366                     
  1940                           ;keypad.c: 51:     TRISD |= 0x0f;
  1941  001366  0E0F               	movlw	15
  1942  001368  1295               	iorwf	149,f,c	;volatile
  1943  00136A                     
  1944                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  1945  00136A  0E00               	movlw	0
  1946  00136C  6E0A               	movwf	kpDebounce@i^0,c
  1947  00136E                     l1461:
  1948                           
  1949                           ;keypad.c: 55:         TRISB &= 0xF8;
  1950  00136E  0EF8               	movlw	248
  1951  001370  1693               	andwf	147,f,c	;volatile
  1952                           
  1953                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  1954  001372  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1955  001376  0E01               	movlw	1
  1956  001378  6E02               	movwf	(??_kpDebounce+1)^0,c
  1957  00137A  2A01               	incf	??_kpDebounce^0,f,c
  1958  00137C  EFC2  F009         	goto	u454
  1959  001380                     u455:
  1960  001380  90D8               	bcf	status,0,c
  1961  001382  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1962  001384                     u454:
  1963  001384  2E01               	decfsz	??_kpDebounce^0,f,c
  1964  001386  EFC0  F009         	goto	u455
  1965  00138A  5002               	movf	(??_kpDebounce+1)^0,w,c
  1966  00138C  1293               	iorwf	147,f,c	;volatile
  1967                           
  1968                           ;keypad.c: 59:         PORTB |= 0x07;
  1969  00138E  0E07               	movlw	7
  1970  001390  1281               	iorwf	129,f,c	;volatile
  1971                           
  1972                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  1973  001392  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1974  001396  0E01               	movlw	1
  1975  001398  6E02               	movwf	(??_kpDebounce+1)^0,c
  1976  00139A  2A01               	incf	??_kpDebounce^0,f,c
  1977  00139C  EFD2  F009         	goto	u464
  1978  0013A0                     u465:
  1979  0013A0  90D8               	bcf	status,0,c
  1980  0013A2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1981  0013A4                     u464:
  1982  0013A4  2E01               	decfsz	??_kpDebounce^0,f,c
  1983  0013A6  EFD0  F009         	goto	u465
  1984  0013AA  5002               	movf	(??_kpDebounce+1)^0,w,c
  1985  0013AC  0AFF               	xorlw	255
  1986  0013AE  1681               	andwf	129,f,c	;volatile
  1987  0013B0                     
  1988                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  1989  0013B0  0E00               	movlw	0
  1990  0013B2  6E08               	movwf	(kpDebounce@k+1)^0,c
  1991  0013B4  0E00               	movlw	0
  1992  0013B6  6E07               	movwf	kpDebounce@k^0,c
  1993  0013B8                     l1469:
  1994  0013B8  4A07               	infsnz	kpDebounce@k^0,f,c
  1995  0013BA  2A08               	incf	(kpDebounce@k+1)^0,f,c
  1996  0013BC  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  1997  0013BE  EFEA  F009         	goto	u471
  1998  0013C2  5008               	movf	(kpDebounce@k+1)^0,w,c
  1999  0013C4  E109               	bnz	u470
  2000  0013C6  0E0A               	movlw	10
  2001  0013C8  5C07               	subwf	kpDebounce@k^0,w,c
  2002  0013CA  A0D8               	btfss	status,0,c
  2003  0013CC  EFEA  F009         	goto	u471
  2004  0013D0  EFEC  F009         	goto	u470
  2005  0013D4                     u471:
  2006  0013D4  EFDC  F009         	goto	l1469
  2007  0013D8                     u470:
  2008  0013D8                     
  2009                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  2010  0013D8  0E00               	movlw	0
  2011  0013DA  6E09               	movwf	kpDebounce@j^0,c
  2012  0013DC                     l1479:
  2013                           
  2014                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  2015  0013DC  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  2016  0013E0  0E01               	movlw	1
  2017  0013E2  6E02               	movwf	(??_kpDebounce+1)^0,c
  2018  0013E4  2A01               	incf	??_kpDebounce^0,f,c
  2019  0013E6  EFF7  F009         	goto	u484
  2020  0013EA                     u485:
  2021  0013EA  90D8               	bcf	status,0,c
  2022  0013EC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2023  0013EE                     u484:
  2024  0013EE  2E01               	decfsz	??_kpDebounce^0,f,c
  2025  0013F0  EFF5  F009         	goto	u485
  2026  0013F4  5002               	movf	(??_kpDebounce+1)^0,w,c
  2027  0013F6  1483               	andwf	131,w,c	;volatile
  2028  0013F8  0900               	iorlw	0
  2029  0013FA  A4D8               	btfss	status,2,c
  2030  0013FC  EF02  F00A         	goto	u491
  2031  001400  EF04  F00A         	goto	u490
  2032  001404                     u491:
  2033  001404  EF1C  F00A         	goto	l1483
  2034  001408                     u490:
  2035  001408                     
  2036                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  2037  001408  500A               	movf	kpDebounce@i^0,w,c
  2038  00140A  0D04               	mullw	4
  2039  00140C  50F3               	movf	243,w,c
  2040  00140E  2409               	addwf	kpDebounce@j^0,w,c
  2041  001410  6E01               	movwf	??_kpDebounce^0,c
  2042  001412  0E01               	movlw	1
  2043  001414  6E02               	movwf	(??_kpDebounce+1)^0,c
  2044  001416  0E00               	movlw	0
  2045  001418  6E03               	movwf	(??_kpDebounce+2)^0,c
  2046  00141A  2A01               	incf	??_kpDebounce^0,f,c
  2047  00141C  EF13  F00A         	goto	u504
  2048  001420                     u505:
  2049  001420  90D8               	bcf	status,0,c
  2050  001422  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2051  001424  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2052  001426                     u504:
  2053  001426  2E01               	decfsz	??_kpDebounce^0,f,c
  2054  001428  EF10  F00A         	goto	u505
  2055  00142C  5002               	movf	(??_kpDebounce+1)^0,w,c
  2056  00142E  1240               	iorwf	kpDebounce@valorNovo^0,f,c
  2057  001430  5003               	movf	(??_kpDebounce+2)^0,w,c
  2058  001432  1241               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  2059                           
  2060                           ;keypad.c: 69:             } else {
  2061  001434  EF36  F00A         	goto	l1485
  2062  001438                     l1483:
  2063                           
  2064                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  2065  001438  500A               	movf	kpDebounce@i^0,w,c
  2066  00143A  0D04               	mullw	4
  2067  00143C  50F3               	movf	243,w,c
  2068  00143E  2409               	addwf	kpDebounce@j^0,w,c
  2069  001440  6E01               	movwf	??_kpDebounce^0,c
  2070  001442  0E01               	movlw	1
  2071  001444  6E02               	movwf	(??_kpDebounce+1)^0,c
  2072  001446  0E00               	movlw	0
  2073  001448  6E03               	movwf	(??_kpDebounce+2)^0,c
  2074  00144A  2A01               	incf	??_kpDebounce^0,f,c
  2075  00144C  EF2B  F00A         	goto	u514
  2076  001450                     u515:
  2077  001450  90D8               	bcf	status,0,c
  2078  001452  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2079  001454  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2080  001456                     u514:
  2081  001456  2E01               	decfsz	??_kpDebounce^0,f,c
  2082  001458  EF28  F00A         	goto	u515
  2083  00145C  1C02               	comf	(??_kpDebounce+1)^0,w,c
  2084  00145E  6E04               	movwf	(??_kpDebounce+3)^0,c
  2085  001460  1C03               	comf	(??_kpDebounce+2)^0,w,c
  2086  001462  6E05               	movwf	(??_kpDebounce+4)^0,c
  2087  001464  5004               	movf	(??_kpDebounce+3)^0,w,c
  2088  001466  1640               	andwf	kpDebounce@valorNovo^0,f,c
  2089  001468  5005               	movf	(??_kpDebounce+4)^0,w,c
  2090  00146A  1641               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  2091  00146C                     l1485:
  2092                           
  2093                           ;keypad.c: 72:         }
  2094  00146C  2A09               	incf	kpDebounce@j^0,f,c
  2095  00146E  0E03               	movlw	3
  2096  001470  6409               	cpfsgt	kpDebounce@j^0,c
  2097  001472  EF3D  F00A         	goto	u521
  2098  001476  EF3F  F00A         	goto	u520
  2099  00147A                     u521:
  2100  00147A  EFEE  F009         	goto	l1479
  2101  00147E                     u520:
  2102  00147E                     
  2103                           ;keypad.c: 73:     }
  2104  00147E  2A0A               	incf	kpDebounce@i^0,f,c
  2105  001480  0E02               	movlw	2
  2106  001482  640A               	cpfsgt	kpDebounce@i^0,c
  2107  001484  EF46  F00A         	goto	u531
  2108  001488  EF48  F00A         	goto	u530
  2109  00148C                     u531:
  2110  00148C  EFB7  F009         	goto	l1461
  2111  001490                     u530:
  2112  001490                     
  2113                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  2114  001490  5040               	movf	kpDebounce@valorNovo^0,w,c
  2115  001492  183E               	xorwf	kpDebounce@valorAntigo^0,w,c
  2116  001494  E107               	bnz	u541
  2117  001496  5041               	movf	(kpDebounce@valorNovo+1)^0,w,c
  2118  001498  183F               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  2119  00149A  A4D8               	btfss	status,2,c
  2120  00149C  EF52  F00A         	goto	u541
  2121  0014A0  EF54  F00A         	goto	u540
  2122  0014A4                     u541:
  2123  0014A4  EF57  F00A         	goto	l1497
  2124  0014A8                     u540:
  2125  0014A8                     
  2126                           ;keypad.c: 75:         tempo--;
  2127  0014A8  064C               	decf	kpDebounce@tempo^0,f,c
  2128                           
  2129                           ;keypad.c: 76:     } else {
  2130  0014AA  EF5D  F00A         	goto	l167
  2131  0014AE                     l1497:
  2132                           
  2133                           ;keypad.c: 77:         tempo = 10;
  2134  0014AE  0E0A               	movlw	10
  2135  0014B0  6E4C               	movwf	kpDebounce@tempo^0,c
  2136  0014B2                     
  2137                           ;keypad.c: 78:         valorAntigo = valorNovo;
  2138  0014B2  C040  F03E         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  2139  0014B6  C041  F03F         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  2140  0014BA                     l167:
  2141                           
  2142                           ;keypad.c: 80:     if (tempo == 0) {
  2143  0014BA  504C               	movf	kpDebounce@tempo^0,w,c
  2144  0014BC  A4D8               	btfss	status,2,c
  2145  0014BE  EF63  F00A         	goto	u551
  2146  0014C2  EF65  F00A         	goto	u550
  2147  0014C6                     u551:
  2148  0014C6  EF69  F00A         	goto	l168
  2149  0014CA                     u550:
  2150  0014CA                     
  2151                           ;keypad.c: 81:         valor = valorAntigo;
  2152  0014CA  C03E  F042         	movff	kpDebounce@valorAntigo,_valor
  2153  0014CE  C03F  F043         	movff	kpDebounce@valorAntigo+1,_valor+1
  2154  0014D2                     l168:
  2155                           
  2156                           ;keypad.c: 83:     PORTD = old_D;
  2157  0014D2  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  2158  0014D6                     
  2159                           ;keypad.c: 84:     TRISD = 0x00;
  2160  0014D6  0E00               	movlw	0
  2161  0014D8  6E95               	movwf	149,c	;volatile
  2162  0014DA  0012               	return		;funcret
  2163  0014DC                     __end_of_kpDebounce:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _display *****************
  2167 ;; Defined at:
  2168 ;;		line 95 in file "ventilador.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  coluna          2    8[COMRAM] int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  1    wreg      void 
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2182 ;;      Params:         2       0       0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0
  2184 ;;      Temps:          2       0       0       0       0       0       0
  2185 ;;      Totals:         4       0       0       0       0       0       0
  2186 ;;Total ram usage:        4 bytes
  2187 ;; Hardware stack levels used: 1
  2188 ;; Hardware stack levels required when called: 3
  2189 ;; This function calls:
  2190 ;;		_lcdCommand
  2191 ;; This function is called by:
  2192 ;;		_temporizador
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text7
  2197  001CCA                     __ptext7:
  2198                           	callstack 0
  2199  001CCA                     _display:
  2200                           	callstack 24
  2201  001CCA                     
  2202                           ;ventilador.c: 96:     switch (coluna) {
  2203  001CCA  EF7B  F00E         	goto	l2881
  2204  001CCE                     l2871:
  2205  001CCE  0EC5               	movlw	197
  2206  001CD0  EC3E  F00D         	call	_lcdCommand
  2207                           
  2208                           ;ventilador.c: 98:             break;
  2209  001CD4  EF99  F00E         	goto	l560
  2210  001CD8                     l2873:
  2211  001CD8  0EC6               	movlw	198
  2212  001CDA  EC3E  F00D         	call	_lcdCommand
  2213                           
  2214                           ;ventilador.c: 100:             break;
  2215  001CDE  EF99  F00E         	goto	l560
  2216  001CE2                     l2875:
  2217  001CE2  0EC8               	movlw	200
  2218  001CE4  EC3E  F00D         	call	_lcdCommand
  2219                           
  2220                           ;ventilador.c: 102:             break;
  2221  001CE8  EF99  F00E         	goto	l560
  2222  001CEC                     l2877:
  2223  001CEC  0EC9               	movlw	201
  2224  001CEE  EC3E  F00D         	call	_lcdCommand
  2225                           
  2226                           ;ventilador.c: 104:             break;
  2227  001CF2  EF99  F00E         	goto	l560
  2228  001CF6                     l2881:
  2229  001CF6  C009  F00B         	movff	display@coluna,??_display
  2230  001CFA  C00A  F00C         	movff	display@coluna+1,??_display+1
  2231                           
  2232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2233                           ; Switch size 1, requested type "simple"
  2234                           ; Number of cases is 1, Range of values is 0 to 0
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ;	Chosen strategy is simple_byte
  2239  001CFE  500C               	movf	(??_display+1)^0,w,c
  2240  001D00  0A00               	xorlw	0	; case 0
  2241  001D02  B4D8               	btfsc	status,2,c
  2242  001D04  EF86  F00E         	goto	l3633
  2243  001D08  EF99  F00E         	goto	l560
  2244  001D0C                     l3633:
  2245                           
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 4, Range of values is 0 to 3
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte           13     7 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  001D0C  500B               	movf	??_display^0,w,c
  2253  001D0E  0A00               	xorlw	0	; case 0
  2254  001D10  B4D8               	btfsc	status,2,c
  2255  001D12  EF67  F00E         	goto	l2871
  2256  001D16  0A01               	xorlw	1	; case 1
  2257  001D18  B4D8               	btfsc	status,2,c
  2258  001D1A  EF6C  F00E         	goto	l2873
  2259  001D1E  0A03               	xorlw	3	; case 2
  2260  001D20  B4D8               	btfsc	status,2,c
  2261  001D22  EF71  F00E         	goto	l2875
  2262  001D26  0A01               	xorlw	1	; case 3
  2263  001D28  B4D8               	btfsc	status,2,c
  2264  001D2A  EF76  F00E         	goto	l2877
  2265  001D2E  EF99  F00E         	goto	l560
  2266  001D32                     l560:
  2267  001D32  0012               	return		;funcret
  2268  001D34                     __end_of_display:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _start *****************
  2272 ;; Defined at:
  2273 ;;		line 19 in file "menu.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  i               2   14[COMRAM] int 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2287 ;;      Params:         0       0       0       0       0       0       0
  2288 ;;      Locals:         2       0       0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0
  2290 ;;      Totals:         2       0       0       0       0       0       0
  2291 ;;Total ram usage:        2 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 4
  2294 ;; This function calls:
  2295 ;;		_kpInit
  2296 ;;		_lcdCommand
  2297 ;;		_lcdData
  2298 ;;		_lcdInit
  2299 ;;		_printf
  2300 ;;		_pwmInit
  2301 ;;		_ssdInit
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;;		_livreVentilador
  2305 ;;		_autoVentilador
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text8
  2310  0018A8                     __ptext8:
  2311                           	callstack 0
  2312  0018A8                     _start:
  2313                           	callstack 26
  2314  0018A8                     
  2315                           ;menu.c: 20:     PORTD = 0x0f;
  2316  0018A8  0E0F               	movlw	15
  2317  0018AA  6E83               	movwf	131,c	;volatile
  2318  0018AC                     
  2319                           ;menu.c: 21:     lcdInit();
  2320  0018AC  ECB9  F00D         	call	_lcdInit	;wreg free
  2321  0018B0                     
  2322                           ;menu.c: 22:     pwmInit();
  2323  0018B0  ECD0  F00F         	call	_pwmInit	;wreg free
  2324  0018B4                     
  2325                           ;menu.c: 23:     ssdInit();
  2326  0018B4  ECC6  F00E         	call	_ssdInit	;wreg free
  2327  0018B8                     
  2328                           ;menu.c: 24:     kpInit();
  2329  0018B8  ECE7  F00F         	call	_kpInit	;wreg free
  2330  0018BC                     
  2331                           ;menu.c: 26:     lcdCommand(0x01);
  2332  0018BC  0E01               	movlw	1
  2333  0018BE  EC3E  F00D         	call	_lcdCommand
  2334  0018C2                     
  2335                           ;menu.c: 27:     lcdCommand(0x80);
  2336  0018C2  0E80               	movlw	128
  2337  0018C4  EC3E  F00D         	call	_lcdCommand
  2338                           
  2339                           ;menu.c: 28:     int i;;menu.c: 29:     for(i = 0; i< 16; i++)
  2340  0018C8  0E00               	movlw	0
  2341  0018CA  6E10               	movwf	(start@i+1)^0,c
  2342  0018CC  0E00               	movlw	0
  2343  0018CE  6E0F               	movwf	start@i^0,c
  2344  0018D0                     l3015:
  2345                           
  2346                           ;menu.c: 30:         lcdData('.');
  2347  0018D0  0E2E               	movlw	46
  2348  0018D2  EC1B  F00F         	call	_lcdData
  2349  0018D6  4A0F               	infsnz	start@i^0,f,c
  2350  0018D8  2A10               	incf	(start@i+1)^0,f,c
  2351  0018DA  BE10               	btfsc	(start@i+1)^0,7,c
  2352  0018DC  EF79  F00C         	goto	u2271
  2353  0018E0  5010               	movf	(start@i+1)^0,w,c
  2354  0018E2  E109               	bnz	u2270
  2355  0018E4  0E10               	movlw	16
  2356  0018E6  5C0F               	subwf	start@i^0,w,c
  2357  0018E8  A0D8               	btfss	status,0,c
  2358  0018EA  EF79  F00C         	goto	u2271
  2359  0018EE  EF7B  F00C         	goto	u2270
  2360  0018F2                     u2271:
  2361  0018F2  EF68  F00C         	goto	l3015
  2362  0018F6                     u2270:
  2363  0018F6                     
  2364                           ;menu.c: 31:     lcdCommand(0xC0);
  2365  0018F6  0EC0               	movlw	192
  2366  0018F8  EC3E  F00D         	call	_lcdCommand
  2367  0018FC                     
  2368                           ;menu.c: 32:     for(i = 0; i< 16; i++)
  2369  0018FC  0E00               	movlw	0
  2370  0018FE  6E10               	movwf	(start@i+1)^0,c
  2371  001900  0E00               	movlw	0
  2372  001902  6E0F               	movwf	start@i^0,c
  2373  001904                     l3029:
  2374                           
  2375                           ;menu.c: 33:         lcdData('.');
  2376  001904  0E2E               	movlw	46
  2377  001906  EC1B  F00F         	call	_lcdData
  2378  00190A  4A0F               	infsnz	start@i^0,f,c
  2379  00190C  2A10               	incf	(start@i+1)^0,f,c
  2380  00190E  BE10               	btfsc	(start@i+1)^0,7,c
  2381  001910  EF93  F00C         	goto	u2281
  2382  001914  5010               	movf	(start@i+1)^0,w,c
  2383  001916  E109               	bnz	u2280
  2384  001918  0E10               	movlw	16
  2385  00191A  5C0F               	subwf	start@i^0,w,c
  2386  00191C  A0D8               	btfss	status,0,c
  2387  00191E  EF93  F00C         	goto	u2281
  2388  001922  EF95  F00C         	goto	u2280
  2389  001926                     u2281:
  2390  001926  EF82  F00C         	goto	l3029
  2391  00192A                     u2280:
  2392  00192A                     
  2393                           ;menu.c: 34:     lcdCommand(0x80);
  2394  00192A  0E80               	movlw	128
  2395  00192C  EC3E  F00D         	call	_lcdCommand
  2396  001930                     
  2397                           ;menu.c: 35:     printf("Bem Vindo(a)   ");
  2398  001930  0E33               	movlw	low STR_5
  2399  001932  6E09               	movwf	printf@c^0,c
  2400  001934  0E06               	movlw	high STR_5
  2401  001936  6E0A               	movwf	(printf@c+1)^0,c
  2402  001938  EC7D  F00D         	call	_printf	;wreg free
  2403  00193C                     
  2404                           ;menu.c: 36:     lcdCommand(0xC0);
  2405  00193C  0EC0               	movlw	192
  2406  00193E  EC3E  F00D         	call	_lcdCommand
  2407                           
  2408                           ;menu.c: 37:     printf("1-Livre  2-Auto");
  2409  001942  0E43               	movlw	low STR_6
  2410  001944  6E09               	movwf	printf@c^0,c
  2411  001946  0E06               	movlw	high STR_6
  2412  001948  6E0A               	movwf	(printf@c+1)^0,c
  2413  00194A  EC7D  F00D         	call	_printf	;wreg free
  2414  00194E  0012               	return		;funcret
  2415  001950                     __end_of_start:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _ssdInit *****************
  2419 ;; Defined at:
  2420 ;;		line 101 in file "ssd.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2434 ;;      Params:         0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		_pinMode
  2443 ;; This function is called by:
  2444 ;;		_temporizador
  2445 ;;		_start
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text9
  2450  001D8C                     __ptext9:
  2451                           	callstack 0
  2452  001D8C                     _ssdInit:
  2453                           	callstack 28
  2454  001D8C                     
  2455                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  2456  001D8C  0E00               	movlw	0
  2457  001D8E  6E02               	movwf	(pinMode@pin+1)^0,c
  2458  001D90  0E02               	movlw	2
  2459  001D92  6E01               	movwf	pinMode@pin^0,c
  2460  001D94  0E00               	movlw	0
  2461  001D96  6E04               	movwf	(pinMode@type+1)^0,c
  2462  001D98  0E00               	movlw	0
  2463  001D9A  6E03               	movwf	pinMode@type^0,c
  2464  001D9C  EC1D  F006         	call	_pinMode	;wreg free
  2465                           
  2466                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  2467  001DA0  0E00               	movlw	0
  2468  001DA2  6E02               	movwf	(pinMode@pin+1)^0,c
  2469  001DA4  0E03               	movlw	3
  2470  001DA6  6E01               	movwf	pinMode@pin^0,c
  2471  001DA8  0E00               	movlw	0
  2472  001DAA  6E04               	movwf	(pinMode@type+1)^0,c
  2473  001DAC  0E00               	movlw	0
  2474  001DAE  6E03               	movwf	pinMode@type^0,c
  2475  001DB0  EC1D  F006         	call	_pinMode	;wreg free
  2476                           
  2477                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  2478  001DB4  0E00               	movlw	0
  2479  001DB6  6E02               	movwf	(pinMode@pin+1)^0,c
  2480  001DB8  0E04               	movlw	4
  2481  001DBA  6E01               	movwf	pinMode@pin^0,c
  2482  001DBC  0E00               	movlw	0
  2483  001DBE  6E04               	movwf	(pinMode@type+1)^0,c
  2484  001DC0  0E00               	movlw	0
  2485  001DC2  6E03               	movwf	pinMode@type^0,c
  2486  001DC4  EC1D  F006         	call	_pinMode	;wreg free
  2487                           
  2488                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  2489  001DC8  0E00               	movlw	0
  2490  001DCA  6E02               	movwf	(pinMode@pin+1)^0,c
  2491  001DCC  0E05               	movlw	5
  2492  001DCE  6E01               	movwf	pinMode@pin^0,c
  2493  001DD0  0E00               	movlw	0
  2494  001DD2  6E04               	movwf	(pinMode@type+1)^0,c
  2495  001DD4  0E00               	movlw	0
  2496  001DD6  6E03               	movwf	pinMode@type^0,c
  2497  001DD8  EC1D  F006         	call	_pinMode	;wreg free
  2498  001DDC                     
  2499                           ;ssd.c: 109:     TRISD = 0x00;
  2500  001DDC  0E00               	movlw	0
  2501  001DDE  6E95               	movwf	149,c	;volatile
  2502  001DE0  0012               	return		;funcret
  2503  001DE2                     __end_of_ssdInit:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _pwmInit *****************
  2507 ;; Defined at:
  2508 ;;		line 60 in file "pwm.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_livreVentilador
  2532 ;;		_autoVentilador
  2533 ;;		_start
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text10
  2538  001FA0                     __ptext10:
  2539                           	callstack 0
  2540  001FA0                     _pwmInit:
  2541                           	callstack 29
  2542  001FA0                     
  2543                           ;pwm.c: 62:  ((TRISC) &= ~(1<<(1)));
  2544  001FA0  9294               	bcf	148,1,c	;volatile
  2545                           
  2546                           ;pwm.c: 63:  ((TRISC) &= ~(1<<(2)));
  2547  001FA2  9494               	bcf	148,2,c	;volatile
  2548  001FA4                     
  2549                           ;pwm.c: 65:  T2CON |= 0b00000011;
  2550  001FA4  0E03               	movlw	3
  2551  001FA6  12CA               	iorwf	202,f,c	;volatile
  2552  001FA8                     
  2553                           ;pwm.c: 66:  ((T2CON) |= (1<<(2)));
  2554  001FA8  84CA               	bsf	202,2,c	;volatile
  2555                           
  2556                           ;pwm.c: 69:  CCP1CON |= 0b00001100;
  2557  001FAA  0E0C               	movlw	12
  2558  001FAC  12BD               	iorwf	189,f,c	;volatile
  2559                           
  2560                           ;pwm.c: 70:  CCP2CON |= 0b00001100;
  2561  001FAE  0E0C               	movlw	12
  2562  001FB0  12BA               	iorwf	186,f,c	;volatile
  2563  001FB2  0012               	return		;funcret
  2564  001FB4                     __end_of_pwmInit:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _printf *****************
  2568 ;; Defined at:
  2569 ;;		line 4 in file "stdio.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  c               2    8[COMRAM] PTR unsigned char 
  2572 ;;		 -> STR_6(16), STR_5(16), STR_4(17), STR_3(17), 
  2573 ;;		 -> STR_2(16), STR_1(15), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  i               2   12[COMRAM] int 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         2       0       0       0       0       0       0
  2586 ;;      Locals:         2       0       0       0       0       0       0
  2587 ;;      Temps:          2       0       0       0       0       0       0
  2588 ;;      Totals:         6       0       0       0       0       0       0
  2589 ;;Total ram usage:        6 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 3
  2592 ;; This function calls:
  2593 ;;		_lcdCommand
  2594 ;;		_lcdData
  2595 ;; This function is called by:
  2596 ;;		_livreVentilador
  2597 ;;		_autoVentilador
  2598 ;;		_temporizador
  2599 ;;		_start
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text11
  2604  001AFA                     __ptext11:
  2605                           	callstack 0
  2606  001AFA                     _printf:
  2607                           	callstack 26
  2608  001AFA                     
  2609                           ;stdio.c: 5:     int i;;stdio.c: 6:     for (i = 0; i < 16; i++) {
  2610  001AFA  0E00               	movlw	0
  2611  001AFC  6E0E               	movwf	(printf@i+1)^0,c
  2612  001AFE  0E00               	movlw	0
  2613  001B00  6E0D               	movwf	printf@i^0,c
  2614  001B02                     l2859:
  2615                           
  2616                           ;stdio.c: 7:         if(c[i] == '\n')
  2617  001B02  500D               	movf	printf@i^0,w,c
  2618  001B04  2409               	addwf	printf@c^0,w,c
  2619  001B06  6E0B               	movwf	??_printf^0,c
  2620  001B08  500E               	movf	(printf@i+1)^0,w,c
  2621  001B0A  200A               	addwfc	(printf@c+1)^0,w,c
  2622  001B0C  6E0C               	movwf	(??_printf+1)^0,c
  2623  001B0E  C00B  FFF6         	movff	??_printf,tblptrl
  2624  001B12  C00C  FFF7         	movff	??_printf+1,tblptrh
  2625  001B16                     	if	0	;tblptru may be non-zero
  2626  001B16                     	endif
  2627  001B16                     	if	0	;tblptru may be non-zero
  2628  001B16                     	endif
  2629  001B16  0008               	tblrd		*
  2630  001B18  50F5               	movf	tablat,w,c
  2631  001B1A  0A0A               	xorlw	10
  2632  001B1C  A4D8               	btfss	status,2,c
  2633  001B1E  EF93  F00D         	goto	u2101
  2634  001B22  EF95  F00D         	goto	u2100
  2635  001B26                     u2101:
  2636  001B26  EF9A  F00D         	goto	l2863
  2637  001B2A                     u2100:
  2638  001B2A                     
  2639                           ;stdio.c: 8:             lcdCommand(0xC0);
  2640  001B2A  0EC0               	movlw	192
  2641  001B2C  EC3E  F00D         	call	_lcdCommand
  2642  001B30  EFA8  F00D         	goto	l2865
  2643  001B34                     l2863:
  2644                           
  2645                           ;stdio.c: 10:             lcdData(c[i]);
  2646  001B34  500D               	movf	printf@i^0,w,c
  2647  001B36  2409               	addwf	printf@c^0,w,c
  2648  001B38  6E0B               	movwf	??_printf^0,c
  2649  001B3A  500E               	movf	(printf@i+1)^0,w,c
  2650  001B3C  200A               	addwfc	(printf@c+1)^0,w,c
  2651  001B3E  6E0C               	movwf	(??_printf+1)^0,c
  2652  001B40  C00B  FFF6         	movff	??_printf,tblptrl
  2653  001B44  C00C  FFF7         	movff	??_printf+1,tblptrh
  2654  001B48                     	if	0	;tblptru may be non-zero
  2655  001B48                     	endif
  2656  001B48                     	if	0	;tblptru may be non-zero
  2657  001B48                     	endif
  2658  001B48  0008               	tblrd		*
  2659  001B4A  50F5               	movf	tablat,w,c
  2660  001B4C  EC1B  F00F         	call	_lcdData
  2661  001B50                     l2865:
  2662                           
  2663                           ;stdio.c: 11:     }
  2664  001B50  4A0D               	infsnz	printf@i^0,f,c
  2665  001B52  2A0E               	incf	(printf@i+1)^0,f,c
  2666  001B54  BE0E               	btfsc	(printf@i+1)^0,7,c
  2667  001B56  EFB6  F00D         	goto	u2111
  2668  001B5A  500E               	movf	(printf@i+1)^0,w,c
  2669  001B5C  E109               	bnz	u2110
  2670  001B5E  0E10               	movlw	16
  2671  001B60  5C0D               	subwf	printf@i^0,w,c
  2672  001B62  A0D8               	btfss	status,0,c
  2673  001B64  EFB6  F00D         	goto	u2111
  2674  001B68  EFB8  F00D         	goto	u2110
  2675  001B6C                     u2111:
  2676  001B6C  EF81  F00D         	goto	l2859
  2677  001B70                     u2110:
  2678  001B70  0012               	return		;funcret
  2679  001B72                     __end_of_printf:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _lcdData *****************
  2683 ;; Defined at:
  2684 ;;		line 74 in file "lcd.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  valor           1    wreg     unsigned char 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  valor           1    6[COMRAM] unsigned char 
  2689 ;;  old_D           1    7[COMRAM] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       0       0       0       0       0       0
  2700 ;;      Locals:         2       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0
  2702 ;;      Totals:         2       0       0       0       0       0       0
  2703 ;;Total ram usage:        2 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 1
  2706 ;; This function calls:
  2707 ;;		_Delay40us
  2708 ;;		_digitalWrite
  2709 ;; This function is called by:
  2710 ;;		_printf
  2711 ;;		_livreVentilador
  2712 ;;		_autoVentilador
  2713 ;;		_temporizador
  2714 ;;		_start
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text12
  2719  001E36                     __ptext12:
  2720                           	callstack 0
  2721  001E36                     _lcdData:
  2722                           	callstack 27
  2723                           
  2724                           ;incstack = 0
  2725                           ;lcdData@valor stored from wreg
  2726  001E36  6E07               	movwf	lcdData@valor^0,c
  2727  001E38                     
  2728                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2729  001E38  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2730  001E3C                     
  2731                           ;lcd.c: 80:     TRISD = 0x00;
  2732  001E3C  0E00               	movlw	0
  2733  001E3E  6E95               	movwf	149,c	;volatile
  2734  001E40                     
  2735                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2736  001E40  0E00               	movlw	0
  2737  001E42  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2738  001E44  0E22               	movlw	34
  2739  001E46  6E01               	movwf	digitalWrite@pin^0,c
  2740  001E48  0E00               	movlw	0
  2741  001E4A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2742  001E4C  0E01               	movlw	1
  2743  001E4E  6E03               	movwf	digitalWrite@value^0,c
  2744  001E50  ECF6  F004         	call	_digitalWrite	;wreg free
  2745  001E54                     
  2746                           ;lcd.c: 83:  PORTD = valor;
  2747  001E54  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2748  001E58                     
  2749                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2750  001E58  0E00               	movlw	0
  2751  001E5A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2752  001E5C  0E21               	movlw	33
  2753  001E5E  6E01               	movwf	digitalWrite@pin^0,c
  2754  001E60  0E00               	movlw	0
  2755  001E62  6E04               	movwf	(digitalWrite@value+1)^0,c
  2756  001E64  0E01               	movlw	1
  2757  001E66  6E03               	movwf	digitalWrite@value^0,c
  2758  001E68  ECF6  F004         	call	_digitalWrite	;wreg free
  2759  001E6C                     
  2760                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2761  001E6C  0E00               	movlw	0
  2762  001E6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2763  001E70  0E21               	movlw	33
  2764  001E72  6E01               	movwf	digitalWrite@pin^0,c
  2765  001E74  0E00               	movlw	0
  2766  001E76  6E04               	movwf	(digitalWrite@value+1)^0,c
  2767  001E78  0E00               	movlw	0
  2768  001E7A  6E03               	movwf	digitalWrite@value^0,c
  2769  001E7C  ECF6  F004         	call	_digitalWrite	;wreg free
  2770  001E80                     
  2771                           ;lcd.c: 88:     PORTD= old_D;
  2772  001E80  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2773  001E84                     
  2774                           ;lcd.c: 90:  Delay40us();
  2775  001E84  ECB9  F00F         	call	_Delay40us	;wreg free
  2776  001E88  0012               	return		;funcret
  2777  001E8A                     __end_of_lcdData:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _lcdInit *****************
  2781 ;; Defined at:
  2782 ;;		line 95 in file "lcd.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2796 ;;      Params:         0       0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 3
  2803 ;; This function calls:
  2804 ;;		_Delay2ms
  2805 ;;		_lcdCommand
  2806 ;;		_pinMode
  2807 ;; This function is called by:
  2808 ;;		_start
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text13
  2813  001B72                     __ptext13:
  2814                           	callstack 0
  2815  001B72                     _lcdInit:
  2816                           	callstack 26
  2817  001B72                     
  2818                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2819  001B72  0E00               	movlw	0
  2820  001B74  6E02               	movwf	(pinMode@pin+1)^0,c
  2821  001B76  0E22               	movlw	34
  2822  001B78  6E01               	movwf	pinMode@pin^0,c
  2823  001B7A  0E00               	movlw	0
  2824  001B7C  6E04               	movwf	(pinMode@type+1)^0,c
  2825  001B7E  0E00               	movlw	0
  2826  001B80  6E03               	movwf	pinMode@type^0,c
  2827  001B82  EC1D  F006         	call	_pinMode	;wreg free
  2828                           
  2829                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2830  001B86  0E00               	movlw	0
  2831  001B88  6E02               	movwf	(pinMode@pin+1)^0,c
  2832  001B8A  0E21               	movlw	33
  2833  001B8C  6E01               	movwf	pinMode@pin^0,c
  2834  001B8E  0E00               	movlw	0
  2835  001B90  6E04               	movwf	(pinMode@type+1)^0,c
  2836  001B92  0E00               	movlw	0
  2837  001B94  6E03               	movwf	pinMode@type^0,c
  2838  001B96  EC1D  F006         	call	_pinMode	;wreg free
  2839  001B9A                     
  2840                           ;lcd.c: 99:  TRISD = 0x00;
  2841  001B9A  0E00               	movlw	0
  2842  001B9C  6E95               	movwf	149,c	;volatile
  2843  001B9E                     
  2844                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2845  001B9E  ECAB  F00F         	call	_Delay2ms	;wreg free
  2846  001BA2  ECAB  F00F         	call	_Delay2ms	;wreg free
  2847  001BA6  ECAB  F00F         	call	_Delay2ms	;wreg free
  2848  001BAA  ECAB  F00F         	call	_Delay2ms	;wreg free
  2849  001BAE  ECAB  F00F         	call	_Delay2ms	;wreg free
  2850  001BB2                     
  2851                           ;lcd.c: 104:     lcdCommand(0x38);
  2852  001BB2  0E38               	movlw	56
  2853  001BB4  EC3E  F00D         	call	_lcdCommand
  2854  001BB8                     
  2855                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2856  001BB8  ECAB  F00F         	call	_Delay2ms	;wreg free
  2857  001BBC  ECAB  F00F         	call	_Delay2ms	;wreg free
  2858  001BC0                     
  2859                           ;lcd.c: 106:     lcdCommand(0x38);
  2860  001BC0  0E38               	movlw	56
  2861  001BC2  EC3E  F00D         	call	_lcdCommand
  2862  001BC6                     
  2863                           ;lcd.c: 107:     Delay2ms();
  2864  001BC6  ECAB  F00F         	call	_Delay2ms	;wreg free
  2865  001BCA                     
  2866                           ;lcd.c: 108:     lcdCommand(0x38);
  2867  001BCA  0E38               	movlw	56
  2868  001BCC  EC3E  F00D         	call	_lcdCommand
  2869  001BD0                     
  2870                           ;lcd.c: 110:     lcdCommand(0x38);
  2871  001BD0  0E38               	movlw	56
  2872  001BD2  EC3E  F00D         	call	_lcdCommand
  2873  001BD6                     
  2874                           ;lcd.c: 111:     lcdCommand(0x06);
  2875  001BD6  0E06               	movlw	6
  2876  001BD8  EC3E  F00D         	call	_lcdCommand
  2877  001BDC                     
  2878                           ;lcd.c: 114:     lcdCommand(0x0C);
  2879  001BDC  0E0C               	movlw	12
  2880  001BDE  EC3E  F00D         	call	_lcdCommand
  2881  001BE2                     
  2882                           ;lcd.c: 115:     lcdCommand(0x01);
  2883  001BE2  0E01               	movlw	1
  2884  001BE4  EC3E  F00D         	call	_lcdCommand
  2885  001BE8  0012               	return		;funcret
  2886  001BEA                     __end_of_lcdInit:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _lcdCommand *****************
  2890 ;; Defined at:
  2891 ;;		line 48 in file "lcd.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  cmd             1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  cmd             1    7[COMRAM] unsigned char 
  2896 ;;  old_D           1    6[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2906 ;;      Params:         0       0       0       0       0       0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0
  2909 ;;      Totals:         2       0       0       0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		_Delay2ms
  2915 ;;		_Delay40us
  2916 ;;		_digitalWrite
  2917 ;; This function is called by:
  2918 ;;		_lcdInit
  2919 ;;		_printf
  2920 ;;		_livreVentilador
  2921 ;;		_autoVentilador
  2922 ;;		_display
  2923 ;;		_temporizador
  2924 ;;		_start
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text14
  2929  001A7C                     __ptext14:
  2930                           	callstack 0
  2931  001A7C                     _lcdCommand:
  2932                           	callstack 26
  2933                           
  2934                           ;incstack = 0
  2935                           ;lcdCommand@cmd stored from wreg
  2936  001A7C  6E08               	movwf	lcdCommand@cmd^0,c
  2937  001A7E                     
  2938                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  2939  001A7E  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  2940  001A82                     
  2941                           ;lcd.c: 54:     TRISD = 0x00;
  2942  001A82  0E00               	movlw	0
  2943  001A84  6E95               	movwf	149,c	;volatile
  2944  001A86                     
  2945                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  2946  001A86  0E00               	movlw	0
  2947  001A88  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2948  001A8A  0E22               	movlw	34
  2949  001A8C  6E01               	movwf	digitalWrite@pin^0,c
  2950  001A8E  0E00               	movlw	0
  2951  001A90  6E04               	movwf	(digitalWrite@value+1)^0,c
  2952  001A92  0E00               	movlw	0
  2953  001A94  6E03               	movwf	digitalWrite@value^0,c
  2954  001A96  ECF6  F004         	call	_digitalWrite	;wreg free
  2955  001A9A                     
  2956                           ;lcd.c: 57:  PORTD = cmd;
  2957  001A9A  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2958  001A9E                     
  2959                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  2960  001A9E  0E00               	movlw	0
  2961  001AA0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2962  001AA2  0E21               	movlw	33
  2963  001AA4  6E01               	movwf	digitalWrite@pin^0,c
  2964  001AA6  0E00               	movlw	0
  2965  001AA8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2966  001AAA  0E01               	movlw	1
  2967  001AAC  6E03               	movwf	digitalWrite@value^0,c
  2968  001AAE  ECF6  F004         	call	_digitalWrite	;wreg free
  2969  001AB2                     
  2970                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  2971  001AB2  0E00               	movlw	0
  2972  001AB4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2973  001AB6  0E21               	movlw	33
  2974  001AB8  6E01               	movwf	digitalWrite@pin^0,c
  2975  001ABA  0E00               	movlw	0
  2976  001ABC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2977  001ABE  0E00               	movlw	0
  2978  001AC0  6E03               	movwf	digitalWrite@value^0,c
  2979  001AC2  ECF6  F004         	call	_digitalWrite	;wreg free
  2980  001AC6                     
  2981                           ;lcd.c: 63:     PORTD= old_D;
  2982  001AC6  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2983  001ACA                     
  2984                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  2985  001ACA  0E02               	movlw	2
  2986  001ACC  1808               	xorwf	lcdCommand@cmd^0,w,c
  2987  001ACE  B4D8               	btfsc	status,2,c
  2988  001AD0  EF6C  F00D         	goto	u2041
  2989  001AD4  EF6E  F00D         	goto	u2040
  2990  001AD8                     u2041:
  2991  001AD8  EF76  F00D         	goto	l2739
  2992  001ADC                     u2040:
  2993  001ADC  0408               	decf	lcdCommand@cmd^0,w,c
  2994  001ADE  A4D8               	btfss	status,2,c
  2995  001AE0  EF74  F00D         	goto	u2051
  2996  001AE4  EF76  F00D         	goto	u2050
  2997  001AE8                     u2051:
  2998  001AE8  EF7A  F00D         	goto	l2741
  2999  001AEC                     u2050:
  3000  001AEC                     l2739:
  3001                           
  3002                           ;lcd.c: 66:        Delay2ms();
  3003  001AEC  ECAB  F00F         	call	_Delay2ms	;wreg free
  3004                           
  3005                           ;lcd.c: 67:     }else{
  3006  001AF0  EF7C  F00D         	goto	l197
  3007  001AF4                     l2741:
  3008                           
  3009                           ;lcd.c: 68:     Delay40us();
  3010  001AF4  ECB9  F00F         	call	_Delay40us	;wreg free
  3011  001AF8                     l197:
  3012  001AF8  0012               	return		;funcret
  3013  001AFA                     __end_of_lcdCommand:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _Delay2ms *****************
  3017 ;; Defined at:
  3018 ;;		line 37 in file "lcd.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  i               1    1[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3032 ;;      Params:         0       0       0       0       0       0       0
  3033 ;;      Locals:         1       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0
  3035 ;;      Totals:         1       0       0       0       0       0       0
  3036 ;;Total ram usage:        1 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 1
  3039 ;; This function calls:
  3040 ;;		_Delay40us
  3041 ;; This function is called by:
  3042 ;;		_lcdCommand
  3043 ;;		_lcdInit
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text15
  3048  001F56                     __ptext15:
  3049                           	callstack 0
  3050  001F56                     _Delay2ms:
  3051                           	callstack 26
  3052  001F56                     
  3053                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  3054  001F56  0E00               	movlw	0
  3055  001F58  6E02               	movwf	Delay2ms@i^0,c
  3056  001F5A                     l1365:
  3057                           
  3058                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  3059  001F5A  ECB9  F00F         	call	_Delay40us	;wreg free
  3060  001F5E                     
  3061                           ;lcd.c: 43:  }
  3062  001F5E  2A02               	incf	Delay2ms@i^0,f,c
  3063  001F60  0E31               	movlw	49
  3064  001F62  6402               	cpfsgt	Delay2ms@i^0,c
  3065  001F64  EFB6  F00F         	goto	u221
  3066  001F68  EFB8  F00F         	goto	u220
  3067  001F6C                     u221:
  3068  001F6C  EFAD  F00F         	goto	l1365
  3069  001F70                     u220:
  3070  001F70  0012               	return		;funcret
  3071  001F72                     __end_of_Delay2ms:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _Delay40us *****************
  3075 ;; Defined at:
  3076 ;;		line 31 in file "lcd.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  i               1    0[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3090 ;;      Params:         0       0       0       0       0       0       0
  3091 ;;      Locals:         1       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_Delay2ms
  3100 ;;		_lcdCommand
  3101 ;;		_lcdData
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text16
  3106  001F72                     __ptext16:
  3107                           	callstack 0
  3108  001F72                     _Delay40us:
  3109                           	callstack 27
  3110  001F72                     
  3111                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  3112  001F72  0E00               	movlw	0
  3113  001F74  6E01               	movwf	Delay40us@i^0,c
  3114  001F76                     l1315:
  3115  001F76  2A01               	incf	Delay40us@i^0,f,c
  3116  001F78  0E18               	movlw	24
  3117  001F7A  6401               	cpfsgt	Delay40us@i^0,c
  3118  001F7C  EFC2  F00F         	goto	u11
  3119  001F80  EFC4  F00F         	goto	u10
  3120  001F84                     u11:
  3121  001F84  EFBB  F00F         	goto	l1315
  3122  001F88                     u10:
  3123  001F88  0012               	return		;funcret
  3124  001F8A                     __end_of_Delay40us:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _kpInit *****************
  3128 ;; Defined at:
  3129 ;;		line 87 in file "keypad.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         0       0       0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_livreVentilador
  3153 ;;		_temporizador
  3154 ;;		_start
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text17
  3159  001FCE                     __ptext17:
  3160                           	callstack 0
  3161  001FCE                     _kpInit:
  3162                           	callstack 29
  3163  001FCE                     
  3164                           ;keypad.c: 89:     TRISB &= 0x07;
  3165  001FCE  0E07               	movlw	7
  3166  001FD0  1693               	andwf	147,f,c	;volatile
  3167                           
  3168                           ;keypad.c: 91:     TRISD |= 0x0f;
  3169  001FD2  0E0F               	movlw	15
  3170  001FD4  1295               	iorwf	149,f,c	;volatile
  3171  001FD6  0012               	return		;funcret
  3172  001FD8                     __end_of_kpInit:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _pwmSet1 *****************
  3176 ;; Defined at:
  3177 ;;		line 24 in file "pwm.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  porcento        1    wreg     unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  porcento        1    9[COMRAM] unsigned char 
  3182 ;;  val             2   10[COMRAM] unsigned int 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3192 ;;      Params:         0       0       0       0       0       0       0
  3193 ;;      Locals:         3       0       0       0       0       0       0
  3194 ;;      Temps:          2       0       0       0       0       0       0
  3195 ;;      Totals:         5       0       0       0       0       0       0
  3196 ;;Total ram usage:        5 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 1
  3199 ;; This function calls:
  3200 ;;		___lwdiv
  3201 ;;		___wmul
  3202 ;; This function is called by:
  3203 ;;		_livreVentilador
  3204 ;;		_autoVentilador
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text18
  3209  001C5E                     __ptext18:
  3210                           	callstack 0
  3211  001C5E                     _pwmSet1:
  3212                           	callstack 27
  3213                           
  3214                           ;incstack = 0
  3215                           ;pwmSet1@porcento stored from wreg
  3216  001C5E  6E0A               	movwf	pwmSet1@porcento^0,c
  3217  001C60                     
  3218                           ;pwm.c: 24: void pwmSet1(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int v
      +                          al = ((unsigned int)porcento) *(PR2+1);
  3219  001C60  0E01               	movlw	1
  3220  001C62  24CB               	addwf	203,w,c	;volatile
  3221  001C64  6E01               	movwf	___wmul@multiplier^0,c
  3222  001C66  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3223  001C68  0E00               	movlw	0
  3224  001C6A  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  3225  001C6C  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  3226  001C70  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  3227  001C72  EC85  F00F         	call	___wmul	;wreg free
  3228  001C76  C001  F00B         	movff	?___wmul,pwmSet1@val
  3229  001C7A  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  3230  001C7E                     
  3231                           ;pwm.c: 32:  val = val / 25;
  3232  001C7E  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  3233  001C82  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  3234  001C86  0E00               	movlw	0
  3235  001C88  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3236  001C8A  0E19               	movlw	25
  3237  001C8C  6E03               	movwf	___lwdiv@divisor^0,c
  3238  001C8E  ECF5  F00D         	call	___lwdiv	;wreg free
  3239  001C92  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  3240  001C96  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  3241  001C9A                     
  3242                           ;pwm.c: 34:  val &= 0x03ff;
  3243  001C9A  0EFF               	movlw	255
  3244  001C9C  160B               	andwf	pwmSet1@val^0,f,c
  3245  001C9E  0E03               	movlw	3
  3246  001CA0  160C               	andwf	(pwmSet1@val+1)^0,f,c
  3247  001CA2                     
  3248                           ;pwm.c: 36:  CCPR1L = val >> 2;
  3249  001CA2  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  3250  001CA6  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  3251  001CAA  90D8               	bcf	status,0,c
  3252  001CAC  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  3253  001CAE  3208               	rrcf	??_pwmSet1^0,f,c
  3254  001CB0  90D8               	bcf	status,0,c
  3255  001CB2  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  3256  001CB4  3208               	rrcf	??_pwmSet1^0,f,c
  3257  001CB6  5008               	movf	??_pwmSet1^0,w,c
  3258  001CB8  6EBE               	movwf	190,c	;volatile
  3259  001CBA                     
  3260                           ;pwm.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  3261  001CBA  C00B  F008         	movff	pwmSet1@val,??_pwmSet1	;volatile
  3262  001CBE  0E03               	movlw	3
  3263  001CC0  1608               	andwf	??_pwmSet1^0,f,c
  3264  001CC2  3808               	swapf	??_pwmSet1^0,w,c
  3265  001CC4  0BF0               	andlw	240
  3266  001CC6  12BD               	iorwf	189,f,c	;volatile
  3267  001CC8  0012               	return		;funcret
  3268  001CCA                     __end_of_pwmSet1:
  3269                           	callstack 0
  3270                           
  3271 ;; *************** function ___wmul *****************
  3272 ;; Defined at:
  3273 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  multiplier      2    0[COMRAM] unsigned int 
  3276 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  product         2    4[COMRAM] unsigned int 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    0[COMRAM] unsigned int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0, prodl, prodh
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         4       0       0       0       0       0       0
  3289 ;;      Locals:         2       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0
  3291 ;;      Totals:         6       0       0       0       0       0       0
  3292 ;;Total ram usage:        6 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_pwmSet1
  3298 ;;		_temporizador
  3299 ;;		_dsbcd2dec
  3300 ;;		_pwmSet2
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text19
  3305  001F0A                     __ptext19:
  3306                           	callstack 0
  3307  001F0A                     ___wmul:
  3308                           	callstack 27
  3309  001F0A  5001               	movf	___wmul@multiplier^0,w,c
  3310  001F0C  0203               	mulwf	___wmul@multiplicand^0,c
  3311  001F0E  CFF3 F005          	movff	prodl,___wmul@product
  3312  001F12  CFF4 F006          	movff	prodh,___wmul@product+1
  3313  001F16  5001               	movf	___wmul@multiplier^0,w,c
  3314  001F18  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3315  001F1A  50F3               	movf	243,w,c
  3316  001F1C  2606               	addwf	(___wmul@product+1)^0,f,c
  3317  001F1E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3318  001F20  0203               	mulwf	___wmul@multiplicand^0,c
  3319  001F22  50F3               	movf	243,w,c
  3320  001F24  2606               	addwf	(___wmul@product+1)^0,f,c
  3321  001F26  C005  F001         	movff	___wmul@product,?___wmul
  3322  001F2A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3323  001F2E  0012               	return		;funcret
  3324  001F30                     __end_of___wmul:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function ___lwdiv *****************
  3328 ;; Defined at:
  3329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  dividend        2    0[COMRAM] unsigned int 
  3332 ;;  divisor         2    2[COMRAM] unsigned int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  quotient        2    4[COMRAM] unsigned int 
  3335 ;;  counter         1    6[COMRAM] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2    0[COMRAM] unsigned int 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3345 ;;      Params:         4       0       0       0       0       0       0
  3346 ;;      Locals:         3       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0
  3348 ;;      Totals:         7       0       0       0       0       0       0
  3349 ;;Total ram usage:        7 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_pwmSet1
  3355 ;;		_pwmSet2
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text20
  3360  001BEA                     __ptext20:
  3361                           	callstack 0
  3362  001BEA                     ___lwdiv:
  3363                           	callstack 27
  3364  001BEA  0E00               	movlw	0
  3365  001BEC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3366  001BEE  0E00               	movlw	0
  3367  001BF0  6E05               	movwf	___lwdiv@quotient^0,c
  3368  001BF2  5003               	movf	___lwdiv@divisor^0,w,c
  3369  001BF4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3370  001BF6  B4D8               	btfsc	status,2,c
  3371  001BF8  EF00  F00E         	goto	u2241
  3372  001BFC  EF02  F00E         	goto	u2240
  3373  001C00                     u2241:
  3374  001C00  EF2A  F00E         	goto	l1127
  3375  001C04                     u2240:
  3376  001C04  0E01               	movlw	1
  3377  001C06  6E07               	movwf	___lwdiv@counter^0,c
  3378  001C08  EF0A  F00E         	goto	l2983
  3379  001C0C                     l2981:
  3380  001C0C  90D8               	bcf	status,0,c
  3381  001C0E  3603               	rlcf	___lwdiv@divisor^0,f,c
  3382  001C10  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3383  001C12  2A07               	incf	___lwdiv@counter^0,f,c
  3384  001C14                     l2983:
  3385  001C14  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3386  001C16  EF0F  F00E         	goto	u2251
  3387  001C1A  EF11  F00E         	goto	u2250
  3388  001C1E                     u2251:
  3389  001C1E  EF06  F00E         	goto	l2981
  3390  001C22                     u2250:
  3391  001C22                     l2985:
  3392  001C22  90D8               	bcf	status,0,c
  3393  001C24  3605               	rlcf	___lwdiv@quotient^0,f,c
  3394  001C26  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3395  001C28  5003               	movf	___lwdiv@divisor^0,w,c
  3396  001C2A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3397  001C2C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3398  001C2E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3399  001C30  A0D8               	btfss	status,0,c
  3400  001C32  EF1D  F00E         	goto	u2261
  3401  001C36  EF1F  F00E         	goto	u2260
  3402  001C3A                     u2261:
  3403  001C3A  EF24  F00E         	goto	l2993
  3404  001C3E                     u2260:
  3405  001C3E  5003               	movf	___lwdiv@divisor^0,w,c
  3406  001C40  5E01               	subwf	___lwdiv@dividend^0,f,c
  3407  001C42  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3408  001C44  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3409  001C46  8005               	bsf	___lwdiv@quotient^0,0,c
  3410  001C48                     l2993:
  3411  001C48  90D8               	bcf	status,0,c
  3412  001C4A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3413  001C4C  3203               	rrcf	___lwdiv@divisor^0,f,c
  3414  001C4E  2E07               	decfsz	___lwdiv@counter^0,f,c
  3415  001C50  EF11  F00E         	goto	l2985
  3416  001C54                     l1127:
  3417  001C54  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3418  001C58  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3419  001C5C  0012               	return		;funcret
  3420  001C5E                     __end_of___lwdiv:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _pwmFrequency *****************
  3424 ;; Defined at:
  3425 ;;		line 53 in file "pwm.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  freq            2   14[COMRAM] unsigned int 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3439 ;;      Params:         2       0       0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0
  3442 ;;      Totals:         2       0       0       0       0       0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 1
  3446 ;; This function calls:
  3447 ;;		___aldiv
  3448 ;; This function is called by:
  3449 ;;		_livreVentilador
  3450 ;;		_autoVentilador
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text21
  3455  001F30                     __ptext21:
  3456                           	callstack 0
  3457  001F30                     _pwmFrequency:
  3458                           	callstack 27
  3459  001F30                     
  3460                           ;pwm.c: 53: void pwmFrequency(unsigned int freq);pwm.c: 54: {;pwm.c: 57:  PR2 = (125000/
      +                          (freq)) - 1;
  3461  001F30  0E48               	movlw	72
  3462  001F32  6E01               	movwf	___aldiv@dividend^0,c
  3463  001F34  0EE8               	movlw	232
  3464  001F36  6E02               	movwf	(___aldiv@dividend+1)^0,c
  3465  001F38  0E01               	movlw	1
  3466  001F3A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  3467  001F3C  0E00               	movlw	0
  3468  001F3E  6E04               	movwf	(___aldiv@dividend+3)^0,c
  3469  001F40  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  3470  001F44  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  3471  001F48  6A07               	clrf	(___aldiv@divisor+2)^0,c
  3472  001F4A  6A08               	clrf	(___aldiv@divisor+3)^0,c
  3473  001F4C  EC14  F00B         	call	___aldiv	;wreg free
  3474  001F50  0401               	decf	?___aldiv^0,w,c
  3475  001F52  6ECB               	movwf	203,c	;volatile
  3476  001F54  0012               	return		;funcret
  3477  001F56                     __end_of_pwmFrequency:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function ___aldiv *****************
  3481 ;; Defined at:
  3482 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  dividend        4    0[COMRAM] long 
  3485 ;;  divisor         4    4[COMRAM] long 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  quotient        4   10[COMRAM] long 
  3488 ;;  sign            1    9[COMRAM] unsigned char 
  3489 ;;  counter         1    8[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  4    0[COMRAM] long 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3499 ;;      Params:         8       0       0       0       0       0       0
  3500 ;;      Locals:         6       0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0
  3502 ;;      Totals:        14       0       0       0       0       0       0
  3503 ;;Total ram usage:       14 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_pwmFrequency
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text22
  3513  001628                     __ptext22:
  3514                           	callstack 0
  3515  001628                     ___aldiv:
  3516                           	callstack 27
  3517  001628  0E00               	movlw	0
  3518  00162A  6E0A               	movwf	___aldiv@sign^0,c
  3519  00162C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3520  00162E  EF1D  F00B         	goto	u2150
  3521  001632  EF1B  F00B         	goto	u2151
  3522  001636                     u2151:
  3523  001636  EF27  F00B         	goto	l2923
  3524  00163A                     u2150:
  3525  00163A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3526  00163C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3527  00163E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3528  001640  6C05               	negf	___aldiv@divisor^0,c
  3529  001642  0E00               	movlw	0
  3530  001644  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3531  001646  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3532  001648  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3533  00164A  0E01               	movlw	1
  3534  00164C  6E0A               	movwf	___aldiv@sign^0,c
  3535  00164E                     l2923:
  3536  00164E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3537  001650  EF2E  F00B         	goto	u2160
  3538  001654  EF2C  F00B         	goto	u2161
  3539  001658                     u2161:
  3540  001658  EF38  F00B         	goto	l2929
  3541  00165C                     u2160:
  3542  00165C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3543  00165E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3544  001660  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3545  001662  6C01               	negf	___aldiv@dividend^0,c
  3546  001664  0E00               	movlw	0
  3547  001666  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3548  001668  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3549  00166A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3550  00166C  0E01               	movlw	1
  3551  00166E  1A0A               	xorwf	___aldiv@sign^0,f,c
  3552  001670                     l2929:
  3553  001670  0E00               	movlw	0
  3554  001672  6E0B               	movwf	___aldiv@quotient^0,c
  3555  001674  0E00               	movlw	0
  3556  001676  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3557  001678  0E00               	movlw	0
  3558  00167A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3559  00167C  0E00               	movlw	0
  3560  00167E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3561  001680  5005               	movf	___aldiv@divisor^0,w,c
  3562  001682  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3563  001684  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3564  001686  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3565  001688  B4D8               	btfsc	status,2,c
  3566  00168A  EF49  F00B         	goto	u2171
  3567  00168E  EF4B  F00B         	goto	u2170
  3568  001692                     u2171:
  3569  001692  EF81  F00B         	goto	l2951
  3570  001696                     u2170:
  3571  001696  0E01               	movlw	1
  3572  001698  6E09               	movwf	___aldiv@counter^0,c
  3573  00169A  EF55  F00B         	goto	l2937
  3574  00169E                     l2935:
  3575  00169E  90D8               	bcf	status,0,c
  3576  0016A0  3605               	rlcf	___aldiv@divisor^0,f,c
  3577  0016A2  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3578  0016A4  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3579  0016A6  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3580  0016A8  2A09               	incf	___aldiv@counter^0,f,c
  3581  0016AA                     l2937:
  3582  0016AA  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3583  0016AC  EF5A  F00B         	goto	u2181
  3584  0016B0  EF5C  F00B         	goto	u2180
  3585  0016B4                     u2181:
  3586  0016B4  EF4F  F00B         	goto	l2935
  3587  0016B8                     u2180:
  3588  0016B8                     l2939:
  3589  0016B8  90D8               	bcf	status,0,c
  3590  0016BA  360B               	rlcf	___aldiv@quotient^0,f,c
  3591  0016BC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3592  0016BE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3593  0016C0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3594  0016C2  5005               	movf	___aldiv@divisor^0,w,c
  3595  0016C4  5C01               	subwf	___aldiv@dividend^0,w,c
  3596  0016C6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3597  0016C8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3598  0016CA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3599  0016CC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3600  0016CE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3601  0016D0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3602  0016D2  A0D8               	btfss	status,0,c
  3603  0016D4  EF6E  F00B         	goto	u2191
  3604  0016D8  EF70  F00B         	goto	u2190
  3605  0016DC                     u2191:
  3606  0016DC  EF79  F00B         	goto	l2947
  3607  0016E0                     u2190:
  3608  0016E0  5005               	movf	___aldiv@divisor^0,w,c
  3609  0016E2  5E01               	subwf	___aldiv@dividend^0,f,c
  3610  0016E4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3611  0016E6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3612  0016E8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3613  0016EA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3614  0016EC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3615  0016EE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3616  0016F0  800B               	bsf	___aldiv@quotient^0,0,c
  3617  0016F2                     l2947:
  3618  0016F2  90D8               	bcf	status,0,c
  3619  0016F4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3620  0016F6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3621  0016F8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3622  0016FA  3205               	rrcf	___aldiv@divisor^0,f,c
  3623  0016FC  2E09               	decfsz	___aldiv@counter^0,f,c
  3624  0016FE  EF5C  F00B         	goto	l2939
  3625  001702                     l2951:
  3626  001702  500A               	movf	___aldiv@sign^0,w,c
  3627  001704  B4D8               	btfsc	status,2,c
  3628  001706  EF87  F00B         	goto	u2201
  3629  00170A  EF89  F00B         	goto	u2200
  3630  00170E                     u2201:
  3631  00170E  EF91  F00B         	goto	l2955
  3632  001712                     u2200:
  3633  001712  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3634  001714  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3635  001716  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3636  001718  6C0B               	negf	___aldiv@quotient^0,c
  3637  00171A  0E00               	movlw	0
  3638  00171C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3639  00171E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3640  001720  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3641  001722                     l2955:
  3642  001722  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3643  001726  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3644  00172A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3645  00172E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3646  001732  0012               	return		;funcret
  3647  001734                     __end_of___aldiv:
  3648                           	callstack 0
  3649                           
  3650 ;; *************** function _contador *****************
  3651 ;; Defined at:
  3652 ;;		line 108 in file "ventilador.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  cont            4   24[COMRAM] unsigned long 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  j               2   30[COMRAM] int 
  3657 ;;  i               2   28[COMRAM] int 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3667 ;;      Params:         4       0       0       0       0       0       0
  3668 ;;      Locals:         4       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0
  3670 ;;      Totals:         8       0       0       0       0       0       0
  3671 ;;Total ram usage:        8 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 2
  3674 ;; This function calls:
  3675 ;;		___lldiv
  3676 ;;		___llmod
  3677 ;;		_ssdDigit
  3678 ;;		_ssdUpdate
  3679 ;; This function is called by:
  3680 ;;		_autoVentilador
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text23
  3685  001060                     __ptext23:
  3686                           	callstack 0
  3687  001060                     _contador:
  3688                           	callstack 26
  3689  001060                     
  3690                           ;ventilador.c: 109:     tmp--;
  3691  001060  0638               	decf	_tmp^0,f,c
  3692  001062  0E00               	movlw	0
  3693  001064  5A39               	subwfb	(_tmp+1)^0,f,c
  3694  001066  5A3A               	subwfb	(_tmp+2)^0,f,c
  3695  001068  5A3B               	subwfb	(_tmp+3)^0,f,c
  3696  00106A                     
  3697                           ;ventilador.c: 110:     ssdDigit(((cont / 1) % 10), 3);
  3698  00106A  0E03               	movlw	3
  3699  00106C  6E17               	movwf	ssdDigit@pos^0,c
  3700  00106E  C019  F00E         	movff	contador@cont,___llmod@dividend
  3701  001072  C01A  F00F         	movff	contador@cont+1,___llmod@dividend+1
  3702  001076  C01B  F010         	movff	contador@cont+2,___llmod@dividend+2
  3703  00107A  C01C  F011         	movff	contador@cont+3,___llmod@dividend+3
  3704  00107E  0E0A               	movlw	10
  3705  001080  6E12               	movwf	___llmod@divisor^0,c
  3706  001082  0E00               	movlw	0
  3707  001084  6E13               	movwf	(___llmod@divisor+1)^0,c
  3708  001086  0E00               	movlw	0
  3709  001088  6E14               	movwf	(___llmod@divisor+2)^0,c
  3710  00108A  0E00               	movlw	0
  3711  00108C  6E15               	movwf	(___llmod@divisor+3)^0,c
  3712  00108E  ECFA  F00C         	call	___llmod	;wreg free
  3713  001092  500E               	movf	?___llmod^0,w,c
  3714  001094  EC9A  F00E         	call	_ssdDigit
  3715  001098                     
  3716                           ;ventilador.c: 111:     ssdDigit(((cont / 10) % 6), 2);
  3717  001098  0E02               	movlw	2
  3718  00109A  6E17               	movwf	ssdDigit@pos^0,c
  3719  00109C  0E0A               	movlw	10
  3720  00109E  6E05               	movwf	___lldiv@divisor^0,c
  3721  0010A0  0E00               	movlw	0
  3722  0010A2  6E06               	movwf	(___lldiv@divisor+1)^0,c
  3723  0010A4  0E00               	movlw	0
  3724  0010A6  6E07               	movwf	(___lldiv@divisor+2)^0,c
  3725  0010A8  0E00               	movlw	0
  3726  0010AA  6E08               	movwf	(___lldiv@divisor+3)^0,c
  3727  0010AC  C019  F001         	movff	contador@cont,___lldiv@dividend
  3728  0010B0  C01A  F002         	movff	contador@cont+1,___lldiv@dividend+1
  3729  0010B4  C01B  F003         	movff	contador@cont+2,___lldiv@dividend+2
  3730  0010B8  C01C  F004         	movff	contador@cont+3,___lldiv@dividend+3
  3731  0010BC  ECA8  F00C         	call	___lldiv	;wreg free
  3732  0010C0  C001  F00E         	movff	?___lldiv,___llmod@dividend
  3733  0010C4  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  3734  0010C8  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  3735  0010CC  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  3736  0010D0  0E06               	movlw	6
  3737  0010D2  6E12               	movwf	___llmod@divisor^0,c
  3738  0010D4  0E00               	movlw	0
  3739  0010D6  6E13               	movwf	(___llmod@divisor+1)^0,c
  3740  0010D8  0E00               	movlw	0
  3741  0010DA  6E14               	movwf	(___llmod@divisor+2)^0,c
  3742  0010DC  0E00               	movlw	0
  3743  0010DE  6E15               	movwf	(___llmod@divisor+3)^0,c
  3744  0010E0  ECFA  F00C         	call	___llmod	;wreg free
  3745  0010E4  500E               	movf	?___llmod^0,w,c
  3746  0010E6  EC9A  F00E         	call	_ssdDigit
  3747  0010EA                     
  3748                           ;ventilador.c: 112:     ssdDigit(((cont / 60) % 10), 1);
  3749  0010EA  0E01               	movlw	1
  3750  0010EC  6E17               	movwf	ssdDigit@pos^0,c
  3751  0010EE  0E3C               	movlw	60
  3752  0010F0  6E05               	movwf	___lldiv@divisor^0,c
  3753  0010F2  0E00               	movlw	0
  3754  0010F4  6E06               	movwf	(___lldiv@divisor+1)^0,c
  3755  0010F6  0E00               	movlw	0
  3756  0010F8  6E07               	movwf	(___lldiv@divisor+2)^0,c
  3757  0010FA  0E00               	movlw	0
  3758  0010FC  6E08               	movwf	(___lldiv@divisor+3)^0,c
  3759  0010FE  C019  F001         	movff	contador@cont,___lldiv@dividend
  3760  001102  C01A  F002         	movff	contador@cont+1,___lldiv@dividend+1
  3761  001106  C01B  F003         	movff	contador@cont+2,___lldiv@dividend+2
  3762  00110A  C01C  F004         	movff	contador@cont+3,___lldiv@dividend+3
  3763  00110E  ECA8  F00C         	call	___lldiv	;wreg free
  3764  001112  C001  F00E         	movff	?___lldiv,___llmod@dividend
  3765  001116  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  3766  00111A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  3767  00111E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  3768  001122  0E0A               	movlw	10
  3769  001124  6E12               	movwf	___llmod@divisor^0,c
  3770  001126  0E00               	movlw	0
  3771  001128  6E13               	movwf	(___llmod@divisor+1)^0,c
  3772  00112A  0E00               	movlw	0
  3773  00112C  6E14               	movwf	(___llmod@divisor+2)^0,c
  3774  00112E  0E00               	movlw	0
  3775  001130  6E15               	movwf	(___llmod@divisor+3)^0,c
  3776  001132  ECFA  F00C         	call	___llmod	;wreg free
  3777  001136  500E               	movf	?___llmod^0,w,c
  3778  001138  EC9A  F00E         	call	_ssdDigit
  3779  00113C                     
  3780                           ;ventilador.c: 113:     ssdDigit(((cont / 600) % 10), 0);
  3781  00113C  0E00               	movlw	0
  3782  00113E  6E17               	movwf	ssdDigit@pos^0,c
  3783  001140  0E58               	movlw	88
  3784  001142  6E05               	movwf	___lldiv@divisor^0,c
  3785  001144  0E02               	movlw	2
  3786  001146  6E06               	movwf	(___lldiv@divisor+1)^0,c
  3787  001148  0E00               	movlw	0
  3788  00114A  6E07               	movwf	(___lldiv@divisor+2)^0,c
  3789  00114C  0E00               	movlw	0
  3790  00114E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  3791  001150  C019  F001         	movff	contador@cont,___lldiv@dividend
  3792  001154  C01A  F002         	movff	contador@cont+1,___lldiv@dividend+1
  3793  001158  C01B  F003         	movff	contador@cont+2,___lldiv@dividend+2
  3794  00115C  C01C  F004         	movff	contador@cont+3,___lldiv@dividend+3
  3795  001160  ECA8  F00C         	call	___lldiv	;wreg free
  3796  001164  C001  F00E         	movff	?___lldiv,___llmod@dividend
  3797  001168  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  3798  00116C  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  3799  001170  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  3800  001174  0E0A               	movlw	10
  3801  001176  6E12               	movwf	___llmod@divisor^0,c
  3802  001178  0E00               	movlw	0
  3803  00117A  6E13               	movwf	(___llmod@divisor+1)^0,c
  3804  00117C  0E00               	movlw	0
  3805  00117E  6E14               	movwf	(___llmod@divisor+2)^0,c
  3806  001180  0E00               	movlw	0
  3807  001182  6E15               	movwf	(___llmod@divisor+3)^0,c
  3808  001184  ECFA  F00C         	call	___llmod	;wreg free
  3809  001188  500E               	movf	?___llmod^0,w,c
  3810  00118A  EC9A  F00E         	call	_ssdDigit
  3811  00118E                     
  3812                           ;ventilador.c: 114:     int i, j;;ventilador.c: 115:     for (i = 0; i < 120; i++) {
  3813  00118E  0E00               	movlw	0
  3814  001190  6E1E               	movwf	(contador@i+1)^0,c
  3815  001192  0E00               	movlw	0
  3816  001194  6E1D               	movwf	contador@i^0,c
  3817  001196                     l3239:
  3818                           
  3819                           ;ventilador.c: 116:         ssdUpdate();
  3820  001196  EC6E  F00A         	call	_ssdUpdate	;wreg free
  3821  00119A                     
  3822                           ;ventilador.c: 117:         for (j = 0; j < 800; j++);
  3823  00119A  0E00               	movlw	0
  3824  00119C  6E20               	movwf	(contador@j+1)^0,c
  3825  00119E  0E00               	movlw	0
  3826  0011A0  6E1F               	movwf	contador@j^0,c
  3827  0011A2                     l3247:
  3828  0011A2  4A1F               	infsnz	contador@j^0,f,c
  3829  0011A4  2A20               	incf	(contador@j+1)^0,f,c
  3830  0011A6  BE20               	btfsc	(contador@j+1)^0,7,c
  3831  0011A8  EFDF  F008         	goto	u2451
  3832  0011AC  0E20               	movlw	32
  3833  0011AE  5C1F               	subwf	contador@j^0,w,c
  3834  0011B0  0E03               	movlw	3
  3835  0011B2  5820               	subwfb	(contador@j+1)^0,w,c
  3836  0011B4  A0D8               	btfss	status,0,c
  3837  0011B6  EFDF  F008         	goto	u2451
  3838  0011BA  EFE1  F008         	goto	u2450
  3839  0011BE                     u2451:
  3840  0011BE  EFD1  F008         	goto	l3247
  3841  0011C2                     u2450:
  3842  0011C2                     
  3843                           ;ventilador.c: 118:     }
  3844  0011C2  4A1D               	infsnz	contador@i^0,f,c
  3845  0011C4  2A1E               	incf	(contador@i+1)^0,f,c
  3846  0011C6  BE1E               	btfsc	(contador@i+1)^0,7,c
  3847  0011C8  EFEF  F008         	goto	u2461
  3848  0011CC  501E               	movf	(contador@i+1)^0,w,c
  3849  0011CE  E109               	bnz	u2460
  3850  0011D0  0E78               	movlw	120
  3851  0011D2  5C1D               	subwf	contador@i^0,w,c
  3852  0011D4  A0D8               	btfss	status,0,c
  3853  0011D6  EFEF  F008         	goto	u2461
  3854  0011DA  EFF1  F008         	goto	u2460
  3855  0011DE                     u2461:
  3856  0011DE  EFCB  F008         	goto	l3239
  3857  0011E2                     u2460:
  3858  0011E2  0012               	return		;funcret
  3859  0011E4                     __end_of_contador:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _ssdUpdate *****************
  3863 ;; Defined at:
  3864 ;;		line 54 in file "ssd.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3878 ;;      Params:         0       0       0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0
  3880 ;;      Temps:          2       0       0       0       0       0       0
  3881 ;;      Totals:         2       0       0       0       0       0       0
  3882 ;;Total ram usage:        2 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 1
  3885 ;; This function calls:
  3886 ;;		_digitalWrite
  3887 ;; This function is called by:
  3888 ;;		_contador
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text24
  3893  0014DC                     __ptext24:
  3894                           	callstack 0
  3895  0014DC                     _ssdUpdate:
  3896                           	callstack 26
  3897  0014DC                     
  3898                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  3899  0014DC  0E00               	movlw	0
  3900  0014DE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3901  0014E0  0E02               	movlw	2
  3902  0014E2  6E01               	movwf	digitalWrite@pin^0,c
  3903  0014E4  0E00               	movlw	0
  3904  0014E6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3905  0014E8  0E00               	movlw	0
  3906  0014EA  6E03               	movwf	digitalWrite@value^0,c
  3907  0014EC  ECF6  F004         	call	_digitalWrite	;wreg free
  3908                           
  3909                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  3910  0014F0  0E00               	movlw	0
  3911  0014F2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3912  0014F4  0E03               	movlw	3
  3913  0014F6  6E01               	movwf	digitalWrite@pin^0,c
  3914  0014F8  0E00               	movlw	0
  3915  0014FA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3916  0014FC  0E00               	movlw	0
  3917  0014FE  6E03               	movwf	digitalWrite@value^0,c
  3918  001500  ECF6  F004         	call	_digitalWrite	;wreg free
  3919                           
  3920                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  3921  001504  0E00               	movlw	0
  3922  001506  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3923  001508  0E04               	movlw	4
  3924  00150A  6E01               	movwf	digitalWrite@pin^0,c
  3925  00150C  0E00               	movlw	0
  3926  00150E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3927  001510  0E00               	movlw	0
  3928  001512  6E03               	movwf	digitalWrite@value^0,c
  3929  001514  ECF6  F004         	call	_digitalWrite	;wreg free
  3930                           
  3931                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  3932  001518  0E00               	movlw	0
  3933  00151A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3934  00151C  0E05               	movlw	5
  3935  00151E  6E01               	movwf	digitalWrite@pin^0,c
  3936  001520  0E00               	movlw	0
  3937  001522  6E04               	movwf	(digitalWrite@value+1)^0,c
  3938  001524  0E00               	movlw	0
  3939  001526  6E03               	movwf	digitalWrite@value^0,c
  3940  001528  ECF6  F004         	call	_digitalWrite	;wreg free
  3941  00152C                     
  3942                           ;ssd.c: 66:     PORTD = 0x00;
  3943  00152C  0E00               	movlw	0
  3944  00152E  6E83               	movwf	131,c	;volatile
  3945                           
  3946                           ;ssd.c: 69:     switch (display)
  3947  001530  EFF6  F00A         	goto	l2843
  3948  001534                     l2815:
  3949                           
  3950                           ;ssd.c: 72:             PORTD = valor[v0];
  3951  001534  0E01               	movlw	low _valor@ssd$F459
  3952  001536  2448               	addwf	_v0^0,w,c
  3953  001538  6EF6               	movwf	tblptrl,c
  3954  00153A  6AF7               	clrf	tblptrh,c
  3955  00153C  0E06               	movlw	high _valor@ssd$F459
  3956  00153E  22F7               	addwfc	tblptrh,f,c
  3957  001540                     	if	0	;There are less than 3 active tblptr bytes
  3958  001540                     	endif
  3959  001540  0008               	tblrd		*
  3960  001542  CFF5 FF83          	movff	tablat,3971	;volatile
  3961  001546                     
  3962                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  3963  001546  0E00               	movlw	0
  3964  001548  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3965  00154A  0E02               	movlw	2
  3966  00154C  6E01               	movwf	digitalWrite@pin^0,c
  3967  00154E  0E00               	movlw	0
  3968  001550  6E04               	movwf	(digitalWrite@value+1)^0,c
  3969  001552  0E01               	movlw	1
  3970  001554  6E03               	movwf	digitalWrite@value^0,c
  3971  001556  ECF6  F004         	call	_digitalWrite	;wreg free
  3972  00155A                     
  3973                           ;ssd.c: 74:             display = 1;
  3974  00155A  0E01               	movlw	1
  3975  00155C  6E49               	movwf	_display@ssd$F460^0,c
  3976                           
  3977                           ;ssd.c: 75:             break;
  3978  00155E  EF13  F00B         	goto	l475
  3979  001562                     l2821:
  3980                           
  3981                           ;ssd.c: 78:             PORTD = valor[v1];
  3982  001562  0E01               	movlw	low _valor@ssd$F459
  3983  001564  2447               	addwf	_v1^0,w,c
  3984  001566  6EF6               	movwf	tblptrl,c
  3985  001568  6AF7               	clrf	tblptrh,c
  3986  00156A  0E06               	movlw	high _valor@ssd$F459
  3987  00156C  22F7               	addwfc	tblptrh,f,c
  3988  00156E                     	if	0	;There are less than 3 active tblptr bytes
  3989  00156E                     	endif
  3990  00156E  0008               	tblrd		*
  3991  001570  CFF5 FF83          	movff	tablat,3971	;volatile
  3992  001574                     
  3993                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  3994  001574  0E00               	movlw	0
  3995  001576  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3996  001578  0E03               	movlw	3
  3997  00157A  6E01               	movwf	digitalWrite@pin^0,c
  3998  00157C  0E00               	movlw	0
  3999  00157E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4000  001580  0E01               	movlw	1
  4001  001582  6E03               	movwf	digitalWrite@value^0,c
  4002  001584  ECF6  F004         	call	_digitalWrite	;wreg free
  4003  001588                     
  4004                           ;ssd.c: 80:             display = 2;
  4005  001588  0E02               	movlw	2
  4006  00158A  6E49               	movwf	_display@ssd$F460^0,c
  4007                           
  4008                           ;ssd.c: 81:             break;
  4009  00158C  EF13  F00B         	goto	l475
  4010  001590                     l2827:
  4011                           
  4012                           ;ssd.c: 84:             PORTD = valor[v2];
  4013  001590  0E01               	movlw	low _valor@ssd$F459
  4014  001592  2446               	addwf	_v2^0,w,c
  4015  001594  6EF6               	movwf	tblptrl,c
  4016  001596  6AF7               	clrf	tblptrh,c
  4017  001598  0E06               	movlw	high _valor@ssd$F459
  4018  00159A  22F7               	addwfc	tblptrh,f,c
  4019  00159C                     	if	0	;There are less than 3 active tblptr bytes
  4020  00159C                     	endif
  4021  00159C  0008               	tblrd		*
  4022  00159E  CFF5 FF83          	movff	tablat,3971	;volatile
  4023  0015A2                     
  4024                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  4025  0015A2  0E00               	movlw	0
  4026  0015A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4027  0015A6  0E04               	movlw	4
  4028  0015A8  6E01               	movwf	digitalWrite@pin^0,c
  4029  0015AA  0E00               	movlw	0
  4030  0015AC  6E04               	movwf	(digitalWrite@value+1)^0,c
  4031  0015AE  0E01               	movlw	1
  4032  0015B0  6E03               	movwf	digitalWrite@value^0,c
  4033  0015B2  ECF6  F004         	call	_digitalWrite	;wreg free
  4034  0015B6                     
  4035                           ;ssd.c: 86:             display = 3;
  4036  0015B6  0E03               	movlw	3
  4037  0015B8  6E49               	movwf	_display@ssd$F460^0,c
  4038                           
  4039                           ;ssd.c: 87:             break;
  4040  0015BA  EF13  F00B         	goto	l475
  4041  0015BE                     l2833:
  4042                           
  4043                           ;ssd.c: 90:             PORTD = valor[v3];
  4044  0015BE  0E01               	movlw	low _valor@ssd$F459
  4045  0015C0  2445               	addwf	_v3^0,w,c
  4046  0015C2  6EF6               	movwf	tblptrl,c
  4047  0015C4  6AF7               	clrf	tblptrh,c
  4048  0015C6  0E06               	movlw	high _valor@ssd$F459
  4049  0015C8  22F7               	addwfc	tblptrh,f,c
  4050  0015CA                     	if	0	;There are less than 3 active tblptr bytes
  4051  0015CA                     	endif
  4052  0015CA  0008               	tblrd		*
  4053  0015CC  CFF5 FF83          	movff	tablat,3971	;volatile
  4054  0015D0                     
  4055                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  4056  0015D0  0E00               	movlw	0
  4057  0015D2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4058  0015D4  0E05               	movlw	5
  4059  0015D6  6E01               	movwf	digitalWrite@pin^0,c
  4060  0015D8  0E00               	movlw	0
  4061  0015DA  6E04               	movwf	(digitalWrite@value+1)^0,c
  4062  0015DC  0E01               	movlw	1
  4063  0015DE  6E03               	movwf	digitalWrite@value^0,c
  4064  0015E0  ECF6  F004         	call	_digitalWrite	;wreg free
  4065  0015E4                     l2837:
  4066                           
  4067                           ;ssd.c: 92:             display = 0;
  4068  0015E4  0E00               	movlw	0
  4069  0015E6  6E49               	movwf	_display@ssd$F460^0,c
  4070                           
  4071                           ;ssd.c: 93:             break;
  4072  0015E8  EF13  F00B         	goto	l475
  4073  0015EC                     l2843:
  4074  0015EC  5049               	movf	_display@ssd$F460^0,w,c
  4075  0015EE  6E07               	movwf	??_ssdUpdate^0,c
  4076  0015F0  6A08               	clrf	(??_ssdUpdate+1)^0,c
  4077                           
  4078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4079                           ; Switch size 1, requested type "simple"
  4080                           ; Number of cases is 1, Range of values is 0 to 0
  4081                           ; switch strategies available:
  4082                           ; Name         Instructions Cycles
  4083                           ; simple_byte            4     3 (average)
  4084                           ;	Chosen strategy is simple_byte
  4085  0015F2  5008               	movf	(??_ssdUpdate+1)^0,w,c
  4086  0015F4  0A00               	xorlw	0	; case 0
  4087  0015F6  B4D8               	btfsc	status,2,c
  4088  0015F8  EF00  F00B         	goto	l3635
  4089  0015FC  EFF2  F00A         	goto	l2837
  4090  001600                     l3635:
  4091                           
  4092                           ; Switch size 1, requested type "simple"
  4093                           ; Number of cases is 4, Range of values is 0 to 3
  4094                           ; switch strategies available:
  4095                           ; Name         Instructions Cycles
  4096                           ; simple_byte           13     7 (average)
  4097                           ;	Chosen strategy is simple_byte
  4098  001600  5007               	movf	??_ssdUpdate^0,w,c
  4099  001602  0A00               	xorlw	0	; case 0
  4100  001604  B4D8               	btfsc	status,2,c
  4101  001606  EF9A  F00A         	goto	l2815
  4102  00160A  0A01               	xorlw	1	; case 1
  4103  00160C  B4D8               	btfsc	status,2,c
  4104  00160E  EFB1  F00A         	goto	l2821
  4105  001612  0A03               	xorlw	3	; case 2
  4106  001614  B4D8               	btfsc	status,2,c
  4107  001616  EFC8  F00A         	goto	l2827
  4108  00161A  0A01               	xorlw	1	; case 3
  4109  00161C  B4D8               	btfsc	status,2,c
  4110  00161E  EFDF  F00A         	goto	l2833
  4111  001622  EFF2  F00A         	goto	l2837
  4112  001626                     l475:
  4113  001626  0012               	return		;funcret
  4114  001628                     __end_of_ssdUpdate:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _digitalWrite *****************
  4118 ;; Defined at:
  4119 ;;		line 14 in file "io.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  pin             2    0[COMRAM] int 
  4122 ;;  value           2    2[COMRAM] int 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4134 ;;      Params:         4       0       0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0       0       0
  4136 ;;      Temps:          2       0       0       0       0       0       0
  4137 ;;      Totals:         6       0       0       0       0       0       0
  4138 ;;Total ram usage:        6 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_lcdCommand
  4144 ;;		_lcdData
  4145 ;;		_ssdUpdate
  4146 ;;		_clear_SCL
  4147 ;;		_clear_SDA
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text25
  4152  0009EC                     __ptext25:
  4153                           	callstack 0
  4154  0009EC                     _digitalWrite:
  4155                           	callstack 27
  4156  0009EC                     
  4157                           ;io.c: 16:     if(pin <8){
  4158  0009EC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4159  0009EE  EF04  F005         	goto	u1640
  4160  0009F2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4161  0009F4  E107               	bnz	u1641
  4162  0009F6  0E08               	movlw	8
  4163  0009F8  5C01               	subwf	digitalWrite@pin^0,w,c
  4164  0009FA  B0D8               	btfsc	status,0,c
  4165  0009FC  EF02  F005         	goto	u1641
  4166  000A00  EF04  F005         	goto	u1640
  4167  000A04                     u1641:
  4168  000A04  EF2E  F005         	goto	l2649
  4169  000A08                     u1640:
  4170  000A08                     
  4171                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4172  000A08  5003               	movf	digitalWrite@value^0,w,c
  4173  000A0A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4174  000A0C  B4D8               	btfsc	status,2,c
  4175  000A0E  EF0B  F005         	goto	u1651
  4176  000A12  EF0D  F005         	goto	u1650
  4177  000A16                     u1651:
  4178  000A16  EF1D  F005         	goto	l2647
  4179  000A1A                     u1650:
  4180  000A1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4181  000A1E  0E01               	movlw	1
  4182  000A20  6E06               	movwf	(??_digitalWrite+1)^0,c
  4183  000A22  2A05               	incf	??_digitalWrite^0,f,c
  4184  000A24  EF16  F005         	goto	u1664
  4185  000A28                     u1665:
  4186  000A28  90D8               	bcf	status,0,c
  4187  000A2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4188  000A2C                     u1664:
  4189  000A2C  2E05               	decfsz	??_digitalWrite^0,f,c
  4190  000A2E  EF14  F005         	goto	u1665
  4191  000A32  5006               	movf	(??_digitalWrite+1)^0,w,c
  4192  000A34  1280               	iorwf	128,f,c	;volatile
  4193  000A36  EF1C  F006         	goto	l102
  4194  000A3A                     l2647:
  4195  000A3A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4196  000A3E  0E01               	movlw	1
  4197  000A40  6E06               	movwf	(??_digitalWrite+1)^0,c
  4198  000A42  2A05               	incf	??_digitalWrite^0,f,c
  4199  000A44  EF26  F005         	goto	u1674
  4200  000A48                     u1675:
  4201  000A48  90D8               	bcf	status,0,c
  4202  000A4A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4203  000A4C                     u1674:
  4204  000A4C  2E05               	decfsz	??_digitalWrite^0,f,c
  4205  000A4E  EF24  F005         	goto	u1675
  4206  000A52  5006               	movf	(??_digitalWrite+1)^0,w,c
  4207  000A54  0AFF               	xorlw	255
  4208  000A56  1680               	andwf	128,f,c	;volatile
  4209  000A58  EF1C  F006         	goto	l102
  4210  000A5C                     l2649:
  4211  000A5C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4212  000A5E  EF3C  F005         	goto	u1680
  4213  000A62  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4214  000A64  E107               	bnz	u1681
  4215  000A66  0E10               	movlw	16
  4216  000A68  5C01               	subwf	digitalWrite@pin^0,w,c
  4217  000A6A  B0D8               	btfsc	status,0,c
  4218  000A6C  EF3A  F005         	goto	u1681
  4219  000A70  EF3C  F005         	goto	u1680
  4220  000A74                     u1681:
  4221  000A74  EF6A  F005         	goto	l2657
  4222  000A78                     u1680:
  4223  000A78                     
  4224                           ;io.c: 20:         pin -=8;
  4225  000A78  0EF8               	movlw	248
  4226  000A7A  2601               	addwf	digitalWrite@pin^0,f,c
  4227  000A7C  0EFF               	movlw	255
  4228  000A7E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4229                           
  4230                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4231  000A80  5003               	movf	digitalWrite@value^0,w,c
  4232  000A82  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4233  000A84  B4D8               	btfsc	status,2,c
  4234  000A86  EF47  F005         	goto	u1691
  4235  000A8A  EF49  F005         	goto	u1690
  4236  000A8E                     u1691:
  4237  000A8E  EF59  F005         	goto	l2655
  4238  000A92                     u1690:
  4239  000A92  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4240  000A96  0E01               	movlw	1
  4241  000A98  6E06               	movwf	(??_digitalWrite+1)^0,c
  4242  000A9A  2A05               	incf	??_digitalWrite^0,f,c
  4243  000A9C  EF52  F005         	goto	u1704
  4244  000AA0                     u1705:
  4245  000AA0  90D8               	bcf	status,0,c
  4246  000AA2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4247  000AA4                     u1704:
  4248  000AA4  2E05               	decfsz	??_digitalWrite^0,f,c
  4249  000AA6  EF50  F005         	goto	u1705
  4250  000AAA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4251  000AAC  1281               	iorwf	129,f,c	;volatile
  4252  000AAE  EF1C  F006         	goto	l102
  4253  000AB2                     l2655:
  4254  000AB2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4255  000AB6  0E01               	movlw	1
  4256  000AB8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4257  000ABA  2A05               	incf	??_digitalWrite^0,f,c
  4258  000ABC  EF62  F005         	goto	u1714
  4259  000AC0                     u1715:
  4260  000AC0  90D8               	bcf	status,0,c
  4261  000AC2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4262  000AC4                     u1714:
  4263  000AC4  2E05               	decfsz	??_digitalWrite^0,f,c
  4264  000AC6  EF60  F005         	goto	u1715
  4265  000ACA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4266  000ACC  0AFF               	xorlw	255
  4267  000ACE  1681               	andwf	129,f,c	;volatile
  4268  000AD0  EF1C  F006         	goto	l102
  4269  000AD4                     l2657:
  4270  000AD4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4271  000AD6  EF78  F005         	goto	u1720
  4272  000ADA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4273  000ADC  E107               	bnz	u1721
  4274  000ADE  0E18               	movlw	24
  4275  000AE0  5C01               	subwf	digitalWrite@pin^0,w,c
  4276  000AE2  B0D8               	btfsc	status,0,c
  4277  000AE4  EF76  F005         	goto	u1721
  4278  000AE8  EF78  F005         	goto	u1720
  4279  000AEC                     u1721:
  4280  000AEC  EFA6  F005         	goto	l2665
  4281  000AF0                     u1720:
  4282  000AF0                     
  4283                           ;io.c: 24:         pin -=16;
  4284  000AF0  0EF0               	movlw	240
  4285  000AF2  2601               	addwf	digitalWrite@pin^0,f,c
  4286  000AF4  0EFF               	movlw	255
  4287  000AF6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4288                           
  4289                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4290  000AF8  5003               	movf	digitalWrite@value^0,w,c
  4291  000AFA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4292  000AFC  B4D8               	btfsc	status,2,c
  4293  000AFE  EF83  F005         	goto	u1731
  4294  000B02  EF85  F005         	goto	u1730
  4295  000B06                     u1731:
  4296  000B06  EF95  F005         	goto	l2663
  4297  000B0A                     u1730:
  4298  000B0A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4299  000B0E  0E01               	movlw	1
  4300  000B10  6E06               	movwf	(??_digitalWrite+1)^0,c
  4301  000B12  2A05               	incf	??_digitalWrite^0,f,c
  4302  000B14  EF8E  F005         	goto	u1744
  4303  000B18                     u1745:
  4304  000B18  90D8               	bcf	status,0,c
  4305  000B1A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4306  000B1C                     u1744:
  4307  000B1C  2E05               	decfsz	??_digitalWrite^0,f,c
  4308  000B1E  EF8C  F005         	goto	u1745
  4309  000B22  5006               	movf	(??_digitalWrite+1)^0,w,c
  4310  000B24  1282               	iorwf	130,f,c	;volatile
  4311  000B26  EF1C  F006         	goto	l102
  4312  000B2A                     l2663:
  4313  000B2A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4314  000B2E  0E01               	movlw	1
  4315  000B30  6E06               	movwf	(??_digitalWrite+1)^0,c
  4316  000B32  2A05               	incf	??_digitalWrite^0,f,c
  4317  000B34  EF9E  F005         	goto	u1754
  4318  000B38                     u1755:
  4319  000B38  90D8               	bcf	status,0,c
  4320  000B3A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4321  000B3C                     u1754:
  4322  000B3C  2E05               	decfsz	??_digitalWrite^0,f,c
  4323  000B3E  EF9C  F005         	goto	u1755
  4324  000B42  5006               	movf	(??_digitalWrite+1)^0,w,c
  4325  000B44  0AFF               	xorlw	255
  4326  000B46  1682               	andwf	130,f,c	;volatile
  4327  000B48  EF1C  F006         	goto	l102
  4328  000B4C                     l2665:
  4329  000B4C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4330  000B4E  EFB4  F005         	goto	u1760
  4331  000B52  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4332  000B54  E107               	bnz	u1761
  4333  000B56  0E20               	movlw	32
  4334  000B58  5C01               	subwf	digitalWrite@pin^0,w,c
  4335  000B5A  B0D8               	btfsc	status,0,c
  4336  000B5C  EFB2  F005         	goto	u1761
  4337  000B60  EFB4  F005         	goto	u1760
  4338  000B64                     u1761:
  4339  000B64  EFE2  F005         	goto	l2673
  4340  000B68                     u1760:
  4341  000B68                     
  4342                           ;io.c: 28:         pin -=24;
  4343  000B68  0EE8               	movlw	232
  4344  000B6A  2601               	addwf	digitalWrite@pin^0,f,c
  4345  000B6C  0EFF               	movlw	255
  4346  000B6E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4347                           
  4348                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4349  000B70  5003               	movf	digitalWrite@value^0,w,c
  4350  000B72  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4351  000B74  B4D8               	btfsc	status,2,c
  4352  000B76  EFBF  F005         	goto	u1771
  4353  000B7A  EFC1  F005         	goto	u1770
  4354  000B7E                     u1771:
  4355  000B7E  EFD1  F005         	goto	l2671
  4356  000B82                     u1770:
  4357  000B82  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4358  000B86  0E01               	movlw	1
  4359  000B88  6E06               	movwf	(??_digitalWrite+1)^0,c
  4360  000B8A  2A05               	incf	??_digitalWrite^0,f,c
  4361  000B8C  EFCA  F005         	goto	u1784
  4362  000B90                     u1785:
  4363  000B90  90D8               	bcf	status,0,c
  4364  000B92  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4365  000B94                     u1784:
  4366  000B94  2E05               	decfsz	??_digitalWrite^0,f,c
  4367  000B96  EFC8  F005         	goto	u1785
  4368  000B9A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4369  000B9C  1283               	iorwf	131,f,c	;volatile
  4370  000B9E  EF1C  F006         	goto	l102
  4371  000BA2                     l2671:
  4372  000BA2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4373  000BA6  0E01               	movlw	1
  4374  000BA8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4375  000BAA  2A05               	incf	??_digitalWrite^0,f,c
  4376  000BAC  EFDA  F005         	goto	u1794
  4377  000BB0                     u1795:
  4378  000BB0  90D8               	bcf	status,0,c
  4379  000BB2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4380  000BB4                     u1794:
  4381  000BB4  2E05               	decfsz	??_digitalWrite^0,f,c
  4382  000BB6  EFD8  F005         	goto	u1795
  4383  000BBA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4384  000BBC  0AFF               	xorlw	255
  4385  000BBE  1683               	andwf	131,f,c	;volatile
  4386  000BC0  EF1C  F006         	goto	l102
  4387  000BC4                     l2673:
  4388  000BC4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4389  000BC6  EFF0  F005         	goto	u1800
  4390  000BCA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4391  000BCC  E107               	bnz	u1801
  4392  000BCE  0E28               	movlw	40
  4393  000BD0  5C01               	subwf	digitalWrite@pin^0,w,c
  4394  000BD2  B0D8               	btfsc	status,0,c
  4395  000BD4  EFEE  F005         	goto	u1801
  4396  000BD8  EFF0  F005         	goto	u1800
  4397  000BDC                     u1801:
  4398  000BDC  EF1C  F006         	goto	l102
  4399  000BE0                     u1800:
  4400  000BE0                     
  4401                           ;io.c: 32:         pin -=32;
  4402  000BE0  0EE0               	movlw	224
  4403  000BE2  2601               	addwf	digitalWrite@pin^0,f,c
  4404  000BE4  0EFF               	movlw	255
  4405  000BE6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4406                           
  4407                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4408  000BE8  5003               	movf	digitalWrite@value^0,w,c
  4409  000BEA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4410  000BEC  B4D8               	btfsc	status,2,c
  4411  000BEE  EFFB  F005         	goto	u1811
  4412  000BF2  EFFD  F005         	goto	u1810
  4413  000BF6                     u1811:
  4414  000BF6  EF0D  F006         	goto	l2679
  4415  000BFA                     u1810:
  4416  000BFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4417  000BFE  0E01               	movlw	1
  4418  000C00  6E06               	movwf	(??_digitalWrite+1)^0,c
  4419  000C02  2A05               	incf	??_digitalWrite^0,f,c
  4420  000C04  EF06  F006         	goto	u1824
  4421  000C08                     u1825:
  4422  000C08  90D8               	bcf	status,0,c
  4423  000C0A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4424  000C0C                     u1824:
  4425  000C0C  2E05               	decfsz	??_digitalWrite^0,f,c
  4426  000C0E  EF04  F006         	goto	u1825
  4427  000C12  5006               	movf	(??_digitalWrite+1)^0,w,c
  4428  000C14  1284               	iorwf	132,f,c	;volatile
  4429  000C16  EF1C  F006         	goto	l102
  4430  000C1A                     l2679:
  4431  000C1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4432  000C1E  0E01               	movlw	1
  4433  000C20  6E06               	movwf	(??_digitalWrite+1)^0,c
  4434  000C22  2A05               	incf	??_digitalWrite^0,f,c
  4435  000C24  EF16  F006         	goto	u1834
  4436  000C28                     u1835:
  4437  000C28  90D8               	bcf	status,0,c
  4438  000C2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4439  000C2C                     u1834:
  4440  000C2C  2E05               	decfsz	??_digitalWrite^0,f,c
  4441  000C2E  EF14  F006         	goto	u1835
  4442  000C32  5006               	movf	(??_digitalWrite+1)^0,w,c
  4443  000C34  0AFF               	xorlw	255
  4444  000C36  1684               	andwf	132,f,c	;volatile
  4445  000C38                     l102:
  4446  000C38  0012               	return		;funcret
  4447  000C3A                     __end_of_digitalWrite:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _ssdDigit *****************
  4451 ;; Defined at:
  4452 ;;		line 38 in file "ssd.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  val             1    wreg     unsigned char 
  4455 ;;  pos             1   22[COMRAM] unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  val             1   23[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4467 ;;      Params:         1       0       0       0       0       0       0
  4468 ;;      Locals:         1       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0
  4470 ;;      Totals:         2       0       0       0       0       0       0
  4471 ;;Total ram usage:        2 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_contador
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text26
  4481  001D34                     __ptext26:
  4482                           	callstack 0
  4483  001D34                     _ssdDigit:
  4484                           	callstack 27
  4485                           
  4486                           ;incstack = 0
  4487                           ;ssdDigit@val stored from wreg
  4488  001D34  6E18               	movwf	ssdDigit@val^0,c
  4489  001D36                     
  4490                           ;ssd.c: 39:     if (pos == 0) {
  4491  001D36  5017               	movf	ssdDigit@pos^0,w,c
  4492  001D38  A4D8               	btfss	status,2,c
  4493  001D3A  EFA1  F00E         	goto	u2061
  4494  001D3E  EFA3  F00E         	goto	u2060
  4495  001D42                     u2061:
  4496  001D42  EFA5  F00E         	goto	l2799
  4497  001D46                     u2060:
  4498  001D46                     
  4499                           ;ssd.c: 40:         v0 = val;
  4500  001D46  C018  F048         	movff	ssdDigit@val,_v0
  4501  001D4A                     l2799:
  4502                           
  4503                           ;ssd.c: 42:     if (pos == 1) {
  4504  001D4A  0417               	decf	ssdDigit@pos^0,w,c
  4505  001D4C  A4D8               	btfss	status,2,c
  4506  001D4E  EFAB  F00E         	goto	u2071
  4507  001D52  EFAD  F00E         	goto	u2070
  4508  001D56                     u2071:
  4509  001D56  EFAF  F00E         	goto	l2803
  4510  001D5A                     u2070:
  4511  001D5A                     
  4512                           ;ssd.c: 43:         v1 = val;
  4513  001D5A  C018  F047         	movff	ssdDigit@val,_v1
  4514  001D5E                     l2803:
  4515                           
  4516                           ;ssd.c: 45:     if (pos == 2) {
  4517  001D5E  0E02               	movlw	2
  4518  001D60  1817               	xorwf	ssdDigit@pos^0,w,c
  4519  001D62  A4D8               	btfss	status,2,c
  4520  001D64  EFB6  F00E         	goto	u2081
  4521  001D68  EFB8  F00E         	goto	u2080
  4522  001D6C                     u2081:
  4523  001D6C  EFBA  F00E         	goto	l2807
  4524  001D70                     u2080:
  4525  001D70                     
  4526                           ;ssd.c: 46:         v2 = val;
  4527  001D70  C018  F046         	movff	ssdDigit@val,_v2
  4528  001D74                     l2807:
  4529                           
  4530                           ;ssd.c: 48:     if (pos == 3) {
  4531  001D74  0E03               	movlw	3
  4532  001D76  1817               	xorwf	ssdDigit@pos^0,w,c
  4533  001D78  A4D8               	btfss	status,2,c
  4534  001D7A  EFC1  F00E         	goto	u2091
  4535  001D7E  EFC3  F00E         	goto	u2090
  4536  001D82                     u2091:
  4537  001D82  EFC5  F00E         	goto	l465
  4538  001D86                     u2090:
  4539  001D86                     
  4540                           ;ssd.c: 49:         v3 = val;
  4541  001D86  C018  F045         	movff	ssdDigit@val,_v3
  4542  001D8A                     l465:
  4543  001D8A  0012               	return		;funcret
  4544  001D8C                     __end_of_ssdDigit:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function ___llmod *****************
  4548 ;; Defined at:
  4549 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dividend        4   13[COMRAM] unsigned long 
  4552 ;;  divisor         4   17[COMRAM] unsigned long 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  counter         1   21[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  4   13[COMRAM] unsigned long 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4564 ;;      Params:         8       0       0       0       0       0       0
  4565 ;;      Locals:         1       0       0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0
  4567 ;;      Totals:         9       0       0       0       0       0       0
  4568 ;;Total ram usage:        9 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_contador
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text27
  4578  0019F4                     __ptext27:
  4579                           	callstack 0
  4580  0019F4                     ___llmod:
  4581                           	callstack 27
  4582  0019F4  5012               	movf	___llmod@divisor^0,w,c
  4583  0019F6  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  4584  0019F8  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  4585  0019FA  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  4586  0019FC  B4D8               	btfsc	status,2,c
  4587  0019FE  EF03  F00D         	goto	u2211
  4588  001A02  EF05  F00D         	goto	u2210
  4589  001A06                     u2211:
  4590  001A06  EF35  F00D         	goto	l1056
  4591  001A0A                     u2210:
  4592  001A0A  0E01               	movlw	1
  4593  001A0C  6E16               	movwf	___llmod@counter^0,c
  4594  001A0E  EF0F  F00D         	goto	l2965
  4595  001A12                     l2963:
  4596  001A12  90D8               	bcf	status,0,c
  4597  001A14  3612               	rlcf	___llmod@divisor^0,f,c
  4598  001A16  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  4599  001A18  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  4600  001A1A  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  4601  001A1C  2A16               	incf	___llmod@counter^0,f,c
  4602  001A1E                     l2965:
  4603  001A1E  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  4604  001A20  EF14  F00D         	goto	u2221
  4605  001A24  EF16  F00D         	goto	u2220
  4606  001A28                     u2221:
  4607  001A28  EF09  F00D         	goto	l2963
  4608  001A2C                     u2220:
  4609  001A2C                     l2967:
  4610  001A2C  5012               	movf	___llmod@divisor^0,w,c
  4611  001A2E  5C0E               	subwf	___llmod@dividend^0,w,c
  4612  001A30  5013               	movf	(___llmod@divisor+1)^0,w,c
  4613  001A32  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  4614  001A34  5014               	movf	(___llmod@divisor+2)^0,w,c
  4615  001A36  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  4616  001A38  5015               	movf	(___llmod@divisor+3)^0,w,c
  4617  001A3A  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  4618  001A3C  A0D8               	btfss	status,0,c
  4619  001A3E  EF23  F00D         	goto	u2231
  4620  001A42  EF25  F00D         	goto	u2230
  4621  001A46                     u2231:
  4622  001A46  EF2D  F00D         	goto	l2971
  4623  001A4A                     u2230:
  4624  001A4A  5012               	movf	___llmod@divisor^0,w,c
  4625  001A4C  5E0E               	subwf	___llmod@dividend^0,f,c
  4626  001A4E  5013               	movf	(___llmod@divisor+1)^0,w,c
  4627  001A50  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  4628  001A52  5014               	movf	(___llmod@divisor+2)^0,w,c
  4629  001A54  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  4630  001A56  5015               	movf	(___llmod@divisor+3)^0,w,c
  4631  001A58  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  4632  001A5A                     l2971:
  4633  001A5A  90D8               	bcf	status,0,c
  4634  001A5C  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  4635  001A5E  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  4636  001A60  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  4637  001A62  3212               	rrcf	___llmod@divisor^0,f,c
  4638  001A64  2E16               	decfsz	___llmod@counter^0,f,c
  4639  001A66  EF16  F00D         	goto	l2967
  4640  001A6A                     l1056:
  4641  001A6A  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4642  001A6E  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4643  001A72  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4644  001A76  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4645  001A7A  0012               	return		;funcret
  4646  001A7C                     __end_of___llmod:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function ___lldiv *****************
  4650 ;; Defined at:
  4651 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  dividend        4    0[COMRAM] unsigned long 
  4654 ;;  divisor         4    4[COMRAM] unsigned long 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  quotient        4    8[COMRAM] unsigned long 
  4657 ;;  counter         1   12[COMRAM] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  4    0[COMRAM] unsigned long 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4667 ;;      Params:         8       0       0       0       0       0       0
  4668 ;;      Locals:         5       0       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0
  4670 ;;      Totals:        13       0       0       0       0       0       0
  4671 ;;Total ram usage:       13 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_contador
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text28
  4681  001950                     __ptext28:
  4682                           	callstack 0
  4683  001950                     ___lldiv:
  4684                           	callstack 27
  4685  001950  0E00               	movlw	0
  4686  001952  6E09               	movwf	___lldiv@quotient^0,c
  4687  001954  0E00               	movlw	0
  4688  001956  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4689  001958  0E00               	movlw	0
  4690  00195A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4691  00195C  0E00               	movlw	0
  4692  00195E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4693  001960  5005               	movf	___lldiv@divisor^0,w,c
  4694  001962  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4695  001964  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4696  001966  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4697  001968  B4D8               	btfsc	status,2,c
  4698  00196A  EFB9  F00C         	goto	u2121
  4699  00196E  EFBB  F00C         	goto	u2120
  4700  001972                     u2121:
  4701  001972  EFF1  F00C         	goto	l663
  4702  001976                     u2120:
  4703  001976  0E01               	movlw	1
  4704  001978  6E0D               	movwf	___lldiv@counter^0,c
  4705  00197A  EFC5  F00C         	goto	l2901
  4706  00197E                     l2899:
  4707  00197E  90D8               	bcf	status,0,c
  4708  001980  3605               	rlcf	___lldiv@divisor^0,f,c
  4709  001982  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4710  001984  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4711  001986  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4712  001988  2A0D               	incf	___lldiv@counter^0,f,c
  4713  00198A                     l2901:
  4714  00198A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4715  00198C  EFCA  F00C         	goto	u2131
  4716  001990  EFCC  F00C         	goto	u2130
  4717  001994                     u2131:
  4718  001994  EFBF  F00C         	goto	l2899
  4719  001998                     u2130:
  4720  001998                     l2903:
  4721  001998  90D8               	bcf	status,0,c
  4722  00199A  3609               	rlcf	___lldiv@quotient^0,f,c
  4723  00199C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4724  00199E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4725  0019A0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4726  0019A2  5005               	movf	___lldiv@divisor^0,w,c
  4727  0019A4  5C01               	subwf	___lldiv@dividend^0,w,c
  4728  0019A6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4729  0019A8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4730  0019AA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4731  0019AC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4732  0019AE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4733  0019B0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4734  0019B2  A0D8               	btfss	status,0,c
  4735  0019B4  EFDE  F00C         	goto	u2141
  4736  0019B8  EFE0  F00C         	goto	u2140
  4737  0019BC                     u2141:
  4738  0019BC  EFE9  F00C         	goto	l2911
  4739  0019C0                     u2140:
  4740  0019C0  5005               	movf	___lldiv@divisor^0,w,c
  4741  0019C2  5E01               	subwf	___lldiv@dividend^0,f,c
  4742  0019C4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4743  0019C6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4744  0019C8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4745  0019CA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4746  0019CC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4747  0019CE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4748  0019D0  8009               	bsf	___lldiv@quotient^0,0,c
  4749  0019D2                     l2911:
  4750  0019D2  90D8               	bcf	status,0,c
  4751  0019D4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4752  0019D6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4753  0019D8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4754  0019DA  3205               	rrcf	___lldiv@divisor^0,f,c
  4755  0019DC  2E0D               	decfsz	___lldiv@counter^0,f,c
  4756  0019DE  EFCC  F00C         	goto	l2903
  4757  0019E2                     l663:
  4758  0019E2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4759  0019E6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4760  0019EA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4761  0019EE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4762  0019F2  0012               	return		;funcret
  4763  0019F4                     __end_of___lldiv:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _adcRead *****************
  4767 ;; Defined at:
  4768 ;;		line 40 in file "adc.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  channel         2    0[COMRAM] unsigned int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  ADvalor         2    2[COMRAM] unsigned int 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2    0[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         2       0       0       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0
  4785 ;;      Totals:         4       0       0       0       0       0       0
  4786 ;;Total ram usage:        4 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_livreVentilador
  4792 ;;		_autoVentilador
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text29
  4797  001E8A                     __ptext29:
  4798                           	callstack 0
  4799  001E8A                     _adcRead:
  4800                           	callstack 28
  4801  001E8A                     
  4802                           ;adc.c: 41:     unsigned int ADvalor;;adc.c: 42:     ADCON0 &= 0b11000011;
  4803  001E8A  0EC3               	movlw	195
  4804  001E8C  16C2               	andwf	194,f,c	;volatile
  4805                           
  4806                           ;adc.c: 43:     if (channel < 3) {
  4807  001E8E  5002               	movf	(adcRead@channel+1)^0,w,c
  4808  001E90  E107               	bnz	u2291
  4809  001E92  0E03               	movlw	3
  4810  001E94  5C01               	subwf	adcRead@channel^0,w,c
  4811  001E96  B0D8               	btfsc	status,0,c
  4812  001E98  EF50  F00F         	goto	u2291
  4813  001E9C  EF52  F00F         	goto	u2290
  4814  001EA0                     u2291:
  4815  001EA0  EF56  F00F         	goto	l3051
  4816  001EA4                     u2290:
  4817  001EA4                     
  4818                           ;adc.c: 44:         ADCON0 |= channel << 2;
  4819  001EA4  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  4820  001EA6  46E8               	rlncf	wreg,f,c
  4821  001EA8  0BFC               	andlw	252
  4822  001EAA  12C2               	iorwf	194,f,c	;volatile
  4823  001EAC                     l3051:
  4824                           
  4825                           ;adc.c: 47:     ADCON0 |= 0b00000010;
  4826  001EAC  82C2               	bsf	194,1,c	;volatile
  4827  001EAE                     l29:
  4828  001EAE  B2C2               	btfsc	194,1,c	;volatile
  4829  001EB0  EF5C  F00F         	goto	u2301
  4830  001EB4  EF5E  F00F         	goto	u2300
  4831  001EB8                     u2301:
  4832  001EB8  EF57  F00F         	goto	l29
  4833  001EBC                     u2300:
  4834  001EBC                     
  4835                           ;adc.c: 51:     ADvalor = ADRESH;
  4836  001EBC  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  4837  001EC0  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  4838  001EC2                     
  4839                           ;adc.c: 52:     ADvalor <<= 8;
  4840  001EC2  5003               	movf	adcRead@ADvalor^0,w,c
  4841  001EC4  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  4842  001EC6  6A03               	clrf	adcRead@ADvalor^0,c
  4843  001EC8                     
  4844                           ;adc.c: 53:     ADvalor += ADRESL;
  4845  001EC8  50C3               	movf	195,w,c	;volatile
  4846  001ECA  2603               	addwf	adcRead@ADvalor^0,f,c
  4847  001ECC  0E00               	movlw	0
  4848  001ECE  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  4849  001ED0                     
  4850                           ;adc.c: 54:     return ADvalor;
  4851  001ED0  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  4852  001ED4  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  4853  001ED8  0012               	return		;funcret
  4854  001EDA                     __end_of_adcRead:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _adcInit *****************
  4858 ;; Defined at:
  4859 ;;		line 25 in file "adc.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4873 ;;      Params:         0       0       0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 1
  4880 ;; This function calls:
  4881 ;;		_pinMode
  4882 ;; This function is called by:
  4883 ;;		_livreVentilador
  4884 ;;		_autoVentilador
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text30
  4889  001EDA                     __ptext30:
  4890                           	callstack 0
  4891  001EDA                     _adcInit:
  4892                           	callstack 27
  4893  001EDA                     
  4894                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4895  001EDA  0E00               	movlw	0
  4896  001EDC  6E02               	movwf	(pinMode@pin+1)^0,c
  4897  001EDE  0E00               	movlw	0
  4898  001EE0  6E01               	movwf	pinMode@pin^0,c
  4899  001EE2  0E00               	movlw	0
  4900  001EE4  6E04               	movwf	(pinMode@type+1)^0,c
  4901  001EE6  0E01               	movlw	1
  4902  001EE8  6E03               	movwf	pinMode@type^0,c
  4903  001EEA  EC1D  F006         	call	_pinMode	;wreg free
  4904                           
  4905                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4906  001EEE  0E00               	movlw	0
  4907  001EF0  6E02               	movwf	(pinMode@pin+1)^0,c
  4908  001EF2  0E01               	movlw	1
  4909  001EF4  6E01               	movwf	pinMode@pin^0,c
  4910  001EF6  0E00               	movlw	0
  4911  001EF8  6E04               	movwf	(pinMode@type+1)^0,c
  4912  001EFA  0E01               	movlw	1
  4913  001EFC  6E03               	movwf	pinMode@type^0,c
  4914  001EFE  EC1D  F006         	call	_pinMode	;wreg free
  4915  001F02                     
  4916                           ;adc.c: 33:     ((ADCON0) |= (1<<(0)));
  4917  001F02  80C2               	bsf	194,0,c	;volatile
  4918  001F04                     
  4919                           ;adc.c: 36:     ADCON2 = 0b10101010;
  4920  001F04  0EAA               	movlw	170
  4921  001F06  6EC0               	movwf	192,c	;volatile
  4922  001F08  0012               	return		;funcret
  4923  001F0A                     __end_of_adcInit:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _pinMode *****************
  4927 ;; Defined at:
  4928 ;;		line 54 in file "io.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  pin             2    0[COMRAM] int 
  4931 ;;  type            2    2[COMRAM] int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4943 ;;      Params:         4       0       0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0
  4945 ;;      Temps:          2       0       0       0       0       0       0
  4946 ;;      Totals:         6       0       0       0       0       0       0
  4947 ;;Total ram usage:        6 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_adcInit
  4953 ;;		_lcdInit
  4954 ;;		_ssdInit
  4955 ;;		_i2cInit
  4956 ;;		_read_SCL
  4957 ;;		_read_SDA
  4958 ;;		_clear_SCL
  4959 ;;		_clear_SDA
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text31
  4964  000C3A                     __ptext31:
  4965                           	callstack 0
  4966  000C3A                     _pinMode:
  4967                           	callstack 28
  4968  000C3A                     
  4969                           ;io.c: 56:     if(pin <8){
  4970  000C3A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4971  000C3C  EF2B  F006         	goto	u1840
  4972  000C40  5002               	movf	(pinMode@pin+1)^0,w,c
  4973  000C42  E107               	bnz	u1841
  4974  000C44  0E08               	movlw	8
  4975  000C46  5C01               	subwf	pinMode@pin^0,w,c
  4976  000C48  B0D8               	btfsc	status,0,c
  4977  000C4A  EF29  F006         	goto	u1841
  4978  000C4E  EF2B  F006         	goto	u1840
  4979  000C52                     u1841:
  4980  000C52  EF55  F006         	goto	l2689
  4981  000C56                     u1840:
  4982  000C56                     
  4983                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4984  000C56  5003               	movf	pinMode@type^0,w,c
  4985  000C58  1004               	iorwf	(pinMode@type+1)^0,w,c
  4986  000C5A  B4D8               	btfsc	status,2,c
  4987  000C5C  EF32  F006         	goto	u1851
  4988  000C60  EF34  F006         	goto	u1850
  4989  000C64                     u1851:
  4990  000C64  EF44  F006         	goto	l2687
  4991  000C68                     u1850:
  4992  000C68  C001  F005         	movff	pinMode@pin,??_pinMode
  4993  000C6C  0E01               	movlw	1
  4994  000C6E  6E06               	movwf	(??_pinMode+1)^0,c
  4995  000C70  2A05               	incf	??_pinMode^0,f,c
  4996  000C72  EF3D  F006         	goto	u1864
  4997  000C76                     u1865:
  4998  000C76  90D8               	bcf	status,0,c
  4999  000C78  3606               	rlcf	(??_pinMode+1)^0,f,c
  5000  000C7A                     u1864:
  5001  000C7A  2E05               	decfsz	??_pinMode^0,f,c
  5002  000C7C  EF3B  F006         	goto	u1865
  5003  000C80  5006               	movf	(??_pinMode+1)^0,w,c
  5004  000C82  1292               	iorwf	146,f,c	;volatile
  5005  000C84  EF43  F007         	goto	l136
  5006  000C88                     l2687:
  5007  000C88  C001  F005         	movff	pinMode@pin,??_pinMode
  5008  000C8C  0E01               	movlw	1
  5009  000C8E  6E06               	movwf	(??_pinMode+1)^0,c
  5010  000C90  2A05               	incf	??_pinMode^0,f,c
  5011  000C92  EF4D  F006         	goto	u1874
  5012  000C96                     u1875:
  5013  000C96  90D8               	bcf	status,0,c
  5014  000C98  3606               	rlcf	(??_pinMode+1)^0,f,c
  5015  000C9A                     u1874:
  5016  000C9A  2E05               	decfsz	??_pinMode^0,f,c
  5017  000C9C  EF4B  F006         	goto	u1875
  5018  000CA0  5006               	movf	(??_pinMode+1)^0,w,c
  5019  000CA2  0AFF               	xorlw	255
  5020  000CA4  1692               	andwf	146,f,c	;volatile
  5021  000CA6  EF43  F007         	goto	l136
  5022  000CAA                     l2689:
  5023  000CAA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5024  000CAC  EF63  F006         	goto	u1880
  5025  000CB0  5002               	movf	(pinMode@pin+1)^0,w,c
  5026  000CB2  E107               	bnz	u1881
  5027  000CB4  0E10               	movlw	16
  5028  000CB6  5C01               	subwf	pinMode@pin^0,w,c
  5029  000CB8  B0D8               	btfsc	status,0,c
  5030  000CBA  EF61  F006         	goto	u1881
  5031  000CBE  EF63  F006         	goto	u1880
  5032  000CC2                     u1881:
  5033  000CC2  EF91  F006         	goto	l2697
  5034  000CC6                     u1880:
  5035  000CC6                     
  5036                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5037  000CC6  5003               	movf	pinMode@type^0,w,c
  5038  000CC8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5039  000CCA  B4D8               	btfsc	status,2,c
  5040  000CCC  EF6A  F006         	goto	u1891
  5041  000CD0  EF6C  F006         	goto	u1890
  5042  000CD4                     u1891:
  5043  000CD4  EF7E  F006         	goto	l2695
  5044  000CD8                     u1890:
  5045  000CD8  C001  F005         	movff	pinMode@pin,??_pinMode
  5046  000CDC  0EF8               	movlw	-8
  5047  000CDE  2605               	addwf	??_pinMode^0,f,c
  5048  000CE0  0E01               	movlw	1
  5049  000CE2  6E06               	movwf	(??_pinMode+1)^0,c
  5050  000CE4  2A05               	incf	??_pinMode^0,f,c
  5051  000CE6  EF77  F006         	goto	u1904
  5052  000CEA                     u1905:
  5053  000CEA  90D8               	bcf	status,0,c
  5054  000CEC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5055  000CEE                     u1904:
  5056  000CEE  2E05               	decfsz	??_pinMode^0,f,c
  5057  000CF0  EF75  F006         	goto	u1905
  5058  000CF4  5006               	movf	(??_pinMode+1)^0,w,c
  5059  000CF6  1293               	iorwf	147,f,c	;volatile
  5060  000CF8  EF43  F007         	goto	l136
  5061  000CFC                     l2695:
  5062  000CFC  C001  F005         	movff	pinMode@pin,??_pinMode
  5063  000D00  0EF8               	movlw	-8
  5064  000D02  2605               	addwf	??_pinMode^0,f,c
  5065  000D04  0E01               	movlw	1
  5066  000D06  6E06               	movwf	(??_pinMode+1)^0,c
  5067  000D08  2A05               	incf	??_pinMode^0,f,c
  5068  000D0A  EF89  F006         	goto	u1914
  5069  000D0E                     u1915:
  5070  000D0E  90D8               	bcf	status,0,c
  5071  000D10  3606               	rlcf	(??_pinMode+1)^0,f,c
  5072  000D12                     u1914:
  5073  000D12  2E05               	decfsz	??_pinMode^0,f,c
  5074  000D14  EF87  F006         	goto	u1915
  5075  000D18  5006               	movf	(??_pinMode+1)^0,w,c
  5076  000D1A  0AFF               	xorlw	255
  5077  000D1C  1693               	andwf	147,f,c	;volatile
  5078  000D1E  EF43  F007         	goto	l136
  5079  000D22                     l2697:
  5080  000D22  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5081  000D24  EF9F  F006         	goto	u1920
  5082  000D28  5002               	movf	(pinMode@pin+1)^0,w,c
  5083  000D2A  E107               	bnz	u1921
  5084  000D2C  0E18               	movlw	24
  5085  000D2E  5C01               	subwf	pinMode@pin^0,w,c
  5086  000D30  B0D8               	btfsc	status,0,c
  5087  000D32  EF9D  F006         	goto	u1921
  5088  000D36  EF9F  F006         	goto	u1920
  5089  000D3A                     u1921:
  5090  000D3A  EFCD  F006         	goto	l2705
  5091  000D3E                     u1920:
  5092  000D3E                     
  5093                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5094  000D3E  5003               	movf	pinMode@type^0,w,c
  5095  000D40  1004               	iorwf	(pinMode@type+1)^0,w,c
  5096  000D42  B4D8               	btfsc	status,2,c
  5097  000D44  EFA6  F006         	goto	u1931
  5098  000D48  EFA8  F006         	goto	u1930
  5099  000D4C                     u1931:
  5100  000D4C  EFBA  F006         	goto	l2703
  5101  000D50                     u1930:
  5102  000D50  C001  F005         	movff	pinMode@pin,??_pinMode
  5103  000D54  0EF0               	movlw	-16
  5104  000D56  2605               	addwf	??_pinMode^0,f,c
  5105  000D58  0E01               	movlw	1
  5106  000D5A  6E06               	movwf	(??_pinMode+1)^0,c
  5107  000D5C  2A05               	incf	??_pinMode^0,f,c
  5108  000D5E  EFB3  F006         	goto	u1944
  5109  000D62                     u1945:
  5110  000D62  90D8               	bcf	status,0,c
  5111  000D64  3606               	rlcf	(??_pinMode+1)^0,f,c
  5112  000D66                     u1944:
  5113  000D66  2E05               	decfsz	??_pinMode^0,f,c
  5114  000D68  EFB1  F006         	goto	u1945
  5115  000D6C  5006               	movf	(??_pinMode+1)^0,w,c
  5116  000D6E  1294               	iorwf	148,f,c	;volatile
  5117  000D70  EF43  F007         	goto	l136
  5118  000D74                     l2703:
  5119  000D74  C001  F005         	movff	pinMode@pin,??_pinMode
  5120  000D78  0EF0               	movlw	-16
  5121  000D7A  2605               	addwf	??_pinMode^0,f,c
  5122  000D7C  0E01               	movlw	1
  5123  000D7E  6E06               	movwf	(??_pinMode+1)^0,c
  5124  000D80  2A05               	incf	??_pinMode^0,f,c
  5125  000D82  EFC5  F006         	goto	u1954
  5126  000D86                     u1955:
  5127  000D86  90D8               	bcf	status,0,c
  5128  000D88  3606               	rlcf	(??_pinMode+1)^0,f,c
  5129  000D8A                     u1954:
  5130  000D8A  2E05               	decfsz	??_pinMode^0,f,c
  5131  000D8C  EFC3  F006         	goto	u1955
  5132  000D90  5006               	movf	(??_pinMode+1)^0,w,c
  5133  000D92  0AFF               	xorlw	255
  5134  000D94  1694               	andwf	148,f,c	;volatile
  5135  000D96  EF43  F007         	goto	l136
  5136  000D9A                     l2705:
  5137  000D9A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5138  000D9C  EFDB  F006         	goto	u1960
  5139  000DA0  5002               	movf	(pinMode@pin+1)^0,w,c
  5140  000DA2  E107               	bnz	u1961
  5141  000DA4  0E20               	movlw	32
  5142  000DA6  5C01               	subwf	pinMode@pin^0,w,c
  5143  000DA8  B0D8               	btfsc	status,0,c
  5144  000DAA  EFD9  F006         	goto	u1961
  5145  000DAE  EFDB  F006         	goto	u1960
  5146  000DB2                     u1961:
  5147  000DB2  EF09  F007         	goto	l2713
  5148  000DB6                     u1960:
  5149  000DB6                     
  5150                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5151  000DB6  5003               	movf	pinMode@type^0,w,c
  5152  000DB8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5153  000DBA  B4D8               	btfsc	status,2,c
  5154  000DBC  EFE2  F006         	goto	u1971
  5155  000DC0  EFE4  F006         	goto	u1970
  5156  000DC4                     u1971:
  5157  000DC4  EFF6  F006         	goto	l2711
  5158  000DC8                     u1970:
  5159  000DC8  C001  F005         	movff	pinMode@pin,??_pinMode
  5160  000DCC  0EE8               	movlw	-24
  5161  000DCE  2605               	addwf	??_pinMode^0,f,c
  5162  000DD0  0E01               	movlw	1
  5163  000DD2  6E06               	movwf	(??_pinMode+1)^0,c
  5164  000DD4  2A05               	incf	??_pinMode^0,f,c
  5165  000DD6  EFEF  F006         	goto	u1984
  5166  000DDA                     u1985:
  5167  000DDA  90D8               	bcf	status,0,c
  5168  000DDC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5169  000DDE                     u1984:
  5170  000DDE  2E05               	decfsz	??_pinMode^0,f,c
  5171  000DE0  EFED  F006         	goto	u1985
  5172  000DE4  5006               	movf	(??_pinMode+1)^0,w,c
  5173  000DE6  1295               	iorwf	149,f,c	;volatile
  5174  000DE8  EF43  F007         	goto	l136
  5175  000DEC                     l2711:
  5176  000DEC  C001  F005         	movff	pinMode@pin,??_pinMode
  5177  000DF0  0EE8               	movlw	-24
  5178  000DF2  2605               	addwf	??_pinMode^0,f,c
  5179  000DF4  0E01               	movlw	1
  5180  000DF6  6E06               	movwf	(??_pinMode+1)^0,c
  5181  000DF8  2A05               	incf	??_pinMode^0,f,c
  5182  000DFA  EF01  F007         	goto	u1994
  5183  000DFE                     u1995:
  5184  000DFE  90D8               	bcf	status,0,c
  5185  000E00  3606               	rlcf	(??_pinMode+1)^0,f,c
  5186  000E02                     u1994:
  5187  000E02  2E05               	decfsz	??_pinMode^0,f,c
  5188  000E04  EFFF  F006         	goto	u1995
  5189  000E08  5006               	movf	(??_pinMode+1)^0,w,c
  5190  000E0A  0AFF               	xorlw	255
  5191  000E0C  1695               	andwf	149,f,c	;volatile
  5192  000E0E  EF43  F007         	goto	l136
  5193  000E12                     l2713:
  5194  000E12  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5195  000E14  EF17  F007         	goto	u2000
  5196  000E18  5002               	movf	(pinMode@pin+1)^0,w,c
  5197  000E1A  E107               	bnz	u2001
  5198  000E1C  0E28               	movlw	40
  5199  000E1E  5C01               	subwf	pinMode@pin^0,w,c
  5200  000E20  B0D8               	btfsc	status,0,c
  5201  000E22  EF15  F007         	goto	u2001
  5202  000E26  EF17  F007         	goto	u2000
  5203  000E2A                     u2001:
  5204  000E2A  EF43  F007         	goto	l136
  5205  000E2E                     u2000:
  5206  000E2E                     
  5207                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5208  000E2E  5003               	movf	pinMode@type^0,w,c
  5209  000E30  1004               	iorwf	(pinMode@type+1)^0,w,c
  5210  000E32  B4D8               	btfsc	status,2,c
  5211  000E34  EF1E  F007         	goto	u2011
  5212  000E38  EF20  F007         	goto	u2010
  5213  000E3C                     u2011:
  5214  000E3C  EF32  F007         	goto	l2719
  5215  000E40                     u2010:
  5216  000E40  C001  F005         	movff	pinMode@pin,??_pinMode
  5217  000E44  0EE0               	movlw	-32
  5218  000E46  2605               	addwf	??_pinMode^0,f,c
  5219  000E48  0E01               	movlw	1
  5220  000E4A  6E06               	movwf	(??_pinMode+1)^0,c
  5221  000E4C  2A05               	incf	??_pinMode^0,f,c
  5222  000E4E  EF2B  F007         	goto	u2024
  5223  000E52                     u2025:
  5224  000E52  90D8               	bcf	status,0,c
  5225  000E54  3606               	rlcf	(??_pinMode+1)^0,f,c
  5226  000E56                     u2024:
  5227  000E56  2E05               	decfsz	??_pinMode^0,f,c
  5228  000E58  EF29  F007         	goto	u2025
  5229  000E5C  5006               	movf	(??_pinMode+1)^0,w,c
  5230  000E5E  1296               	iorwf	150,f,c	;volatile
  5231  000E60  EF43  F007         	goto	l136
  5232  000E64                     l2719:
  5233  000E64  C001  F005         	movff	pinMode@pin,??_pinMode
  5234  000E68  0EE0               	movlw	-32
  5235  000E6A  2605               	addwf	??_pinMode^0,f,c
  5236  000E6C  0E01               	movlw	1
  5237  000E6E  6E06               	movwf	(??_pinMode+1)^0,c
  5238  000E70  2A05               	incf	??_pinMode^0,f,c
  5239  000E72  EF3D  F007         	goto	u2034
  5240  000E76                     u2035:
  5241  000E76  90D8               	bcf	status,0,c
  5242  000E78  3606               	rlcf	(??_pinMode+1)^0,f,c
  5243  000E7A                     u2034:
  5244  000E7A  2E05               	decfsz	??_pinMode^0,f,c
  5245  000E7C  EF3B  F007         	goto	u2035
  5246  000E80  5006               	movf	(??_pinMode+1)^0,w,c
  5247  000E82  0AFF               	xorlw	255
  5248  000E84  1696               	andwf	150,f,c	;volatile
  5249  000E86                     l136:
  5250  000E86  0012               	return		;funcret
  5251  000E88                     __end_of_pinMode:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function ___awmod *****************
  5255 ;; Defined at:
  5256 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  dividend        2    8[COMRAM] int 
  5259 ;;  divisor         2   10[COMRAM] int 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  sign            1   13[COMRAM] unsigned char 
  5262 ;;  counter         1   12[COMRAM] unsigned char 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  2    8[COMRAM] int 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5272 ;;      Params:         4       0       0       0       0       0       0
  5273 ;;      Locals:         2       0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0
  5275 ;;      Totals:         6       0       0       0       0       0       0
  5276 ;;Total ram usage:        6 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_livreVentilador
  5282 ;;		_autoVentilador
  5283 ;;		_dsdec2bcd
  5284 ;;		_rtcPutSeconds
  5285 ;;		_rtcPutMinutes
  5286 ;;		_rtcPutHours
  5287 ;;		_rtcPutDate
  5288 ;;		_rtcPutMonth
  5289 ;;		_rtcPutYear
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text32
  5294  0017F8                     __ptext32:
  5295                           	callstack 0
  5296  0017F8                     ___awmod:
  5297                           	callstack 28
  5298  0017F8  0E00               	movlw	0
  5299  0017FA  6E0E               	movwf	___awmod@sign^0,c
  5300  0017FC  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  5301  0017FE  EF05  F00C         	goto	u2530
  5302  001802  EF03  F00C         	goto	u2531
  5303  001806                     u2531:
  5304  001806  EF0B  F00C         	goto	l3307
  5305  00180A                     u2530:
  5306  00180A  6C09               	negf	___awmod@dividend^0,c
  5307  00180C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5308  00180E  B0D8               	btfsc	status,0,c
  5309  001810  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5310  001812  0E01               	movlw	1
  5311  001814  6E0E               	movwf	___awmod@sign^0,c
  5312  001816                     l3307:
  5313  001816  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5314  001818  EF12  F00C         	goto	u2540
  5315  00181C  EF10  F00C         	goto	u2541
  5316  001820                     u2541:
  5317  001820  EF16  F00C         	goto	l3311
  5318  001824                     u2540:
  5319  001824  6C0B               	negf	___awmod@divisor^0,c
  5320  001826  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5321  001828  B0D8               	btfsc	status,0,c
  5322  00182A  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5323  00182C                     l3311:
  5324  00182C  500B               	movf	___awmod@divisor^0,w,c
  5325  00182E  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5326  001830  B4D8               	btfsc	status,2,c
  5327  001832  EF1D  F00C         	goto	u2551
  5328  001836  EF1F  F00C         	goto	u2550
  5329  00183A                     u2551:
  5330  00183A  EF43  F00C         	goto	l3327
  5331  00183E                     u2550:
  5332  00183E  0E01               	movlw	1
  5333  001840  6E0D               	movwf	___awmod@counter^0,c
  5334  001842  EF27  F00C         	goto	l3317
  5335  001846                     l3315:
  5336  001846  90D8               	bcf	status,0,c
  5337  001848  360B               	rlcf	___awmod@divisor^0,f,c
  5338  00184A  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5339  00184C  2A0D               	incf	___awmod@counter^0,f,c
  5340  00184E                     l3317:
  5341  00184E  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5342  001850  EF2C  F00C         	goto	u2561
  5343  001854  EF2E  F00C         	goto	u2560
  5344  001858                     u2561:
  5345  001858  EF23  F00C         	goto	l3315
  5346  00185C                     u2560:
  5347  00185C                     l3319:
  5348  00185C  500B               	movf	___awmod@divisor^0,w,c
  5349  00185E  5C09               	subwf	___awmod@dividend^0,w,c
  5350  001860  500C               	movf	(___awmod@divisor+1)^0,w,c
  5351  001862  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5352  001864  A0D8               	btfss	status,0,c
  5353  001866  EF37  F00C         	goto	u2571
  5354  00186A  EF39  F00C         	goto	u2570
  5355  00186E                     u2571:
  5356  00186E  EF3D  F00C         	goto	l3323
  5357  001872                     u2570:
  5358  001872  500B               	movf	___awmod@divisor^0,w,c
  5359  001874  5E09               	subwf	___awmod@dividend^0,f,c
  5360  001876  500C               	movf	(___awmod@divisor+1)^0,w,c
  5361  001878  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5362  00187A                     l3323:
  5363  00187A  90D8               	bcf	status,0,c
  5364  00187C  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5365  00187E  320B               	rrcf	___awmod@divisor^0,f,c
  5366  001880  2E0D               	decfsz	___awmod@counter^0,f,c
  5367  001882  EF2E  F00C         	goto	l3319
  5368  001886                     l3327:
  5369  001886  500E               	movf	___awmod@sign^0,w,c
  5370  001888  B4D8               	btfsc	status,2,c
  5371  00188A  EF49  F00C         	goto	u2581
  5372  00188E  EF4B  F00C         	goto	u2580
  5373  001892                     u2581:
  5374  001892  EF4F  F00C         	goto	l3331
  5375  001896                     u2580:
  5376  001896  6C09               	negf	___awmod@dividend^0,c
  5377  001898  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5378  00189A  B0D8               	btfsc	status,0,c
  5379  00189C  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5380  00189E                     l3331:
  5381  00189E  C009  F009         	movff	___awmod@dividend,?___awmod
  5382  0018A2  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5383  0018A6  0012               	return		;funcret
  5384  0018A8                     __end_of___awmod:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function ___awdiv *****************
  5388 ;; Defined at:
  5389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  dividend        2    0[COMRAM] int 
  5392 ;;  divisor         2    2[COMRAM] int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  quotient        2    6[COMRAM] int 
  5395 ;;  sign            1    5[COMRAM] unsigned char 
  5396 ;;  counter         1    4[COMRAM] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    0[COMRAM] int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5406 ;;      Params:         4       0       0       0       0       0       0
  5407 ;;      Locals:         4       0       0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0
  5409 ;;      Totals:         8       0       0       0       0       0       0
  5410 ;;Total ram usage:        8 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_livreVentilador
  5416 ;;		_autoVentilador
  5417 ;;		_dsdec2bcd
  5418 ;;		_dsbcd2dec
  5419 ;;		_rtcPutSeconds
  5420 ;;		_rtcPutMinutes
  5421 ;;		_rtcPutHours
  5422 ;;		_rtcPutDate
  5423 ;;		_rtcPutMonth
  5424 ;;		_rtcPutYear
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text33
  5429  001734                     __ptext33:
  5430                           	callstack 0
  5431  001734                     ___awdiv:
  5432                           	callstack 28
  5433  001734  0E00               	movlw	0
  5434  001736  6E06               	movwf	___awdiv@sign^0,c
  5435  001738  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5436  00173A  EFA3  F00B         	goto	u2470
  5437  00173E  EFA1  F00B         	goto	u2471
  5438  001742                     u2471:
  5439  001742  EFA9  F00B         	goto	l3263
  5440  001746                     u2470:
  5441  001746  6C03               	negf	___awdiv@divisor^0,c
  5442  001748  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5443  00174A  B0D8               	btfsc	status,0,c
  5444  00174C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5445  00174E  0E01               	movlw	1
  5446  001750  6E06               	movwf	___awdiv@sign^0,c
  5447  001752                     l3263:
  5448  001752  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5449  001754  EFB0  F00B         	goto	u2480
  5450  001758  EFAE  F00B         	goto	u2481
  5451  00175C                     u2481:
  5452  00175C  EFB6  F00B         	goto	l3269
  5453  001760                     u2480:
  5454  001760  6C01               	negf	___awdiv@dividend^0,c
  5455  001762  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5456  001764  B0D8               	btfsc	status,0,c
  5457  001766  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5458  001768  0E01               	movlw	1
  5459  00176A  1A06               	xorwf	___awdiv@sign^0,f,c
  5460  00176C                     l3269:
  5461  00176C  0E00               	movlw	0
  5462  00176E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5463  001770  0E00               	movlw	0
  5464  001772  6E07               	movwf	___awdiv@quotient^0,c
  5465  001774  5003               	movf	___awdiv@divisor^0,w,c
  5466  001776  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5467  001778  B4D8               	btfsc	status,2,c
  5468  00177A  EFC1  F00B         	goto	u2491
  5469  00177E  EFC3  F00B         	goto	u2490
  5470  001782                     u2491:
  5471  001782  EFEB  F00B         	goto	l3291
  5472  001786                     u2490:
  5473  001786  0E01               	movlw	1
  5474  001788  6E05               	movwf	___awdiv@counter^0,c
  5475  00178A  EFCB  F00B         	goto	l3277
  5476  00178E                     l3275:
  5477  00178E  90D8               	bcf	status,0,c
  5478  001790  3603               	rlcf	___awdiv@divisor^0,f,c
  5479  001792  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5480  001794  2A05               	incf	___awdiv@counter^0,f,c
  5481  001796                     l3277:
  5482  001796  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5483  001798  EFD0  F00B         	goto	u2501
  5484  00179C  EFD2  F00B         	goto	u2500
  5485  0017A0                     u2501:
  5486  0017A0  EFC7  F00B         	goto	l3275
  5487  0017A4                     u2500:
  5488  0017A4                     l3279:
  5489  0017A4  90D8               	bcf	status,0,c
  5490  0017A6  3607               	rlcf	___awdiv@quotient^0,f,c
  5491  0017A8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5492  0017AA  5003               	movf	___awdiv@divisor^0,w,c
  5493  0017AC  5C01               	subwf	___awdiv@dividend^0,w,c
  5494  0017AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5495  0017B0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5496  0017B2  A0D8               	btfss	status,0,c
  5497  0017B4  EFDE  F00B         	goto	u2511
  5498  0017B8  EFE0  F00B         	goto	u2510
  5499  0017BC                     u2511:
  5500  0017BC  EFE5  F00B         	goto	l3287
  5501  0017C0                     u2510:
  5502  0017C0  5003               	movf	___awdiv@divisor^0,w,c
  5503  0017C2  5E01               	subwf	___awdiv@dividend^0,f,c
  5504  0017C4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5505  0017C6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5506  0017C8  8007               	bsf	___awdiv@quotient^0,0,c
  5507  0017CA                     l3287:
  5508  0017CA  90D8               	bcf	status,0,c
  5509  0017CC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5510  0017CE  3203               	rrcf	___awdiv@divisor^0,f,c
  5511  0017D0  2E05               	decfsz	___awdiv@counter^0,f,c
  5512  0017D2  EFD2  F00B         	goto	l3279
  5513  0017D6                     l3291:
  5514  0017D6  5006               	movf	___awdiv@sign^0,w,c
  5515  0017D8  B4D8               	btfsc	status,2,c
  5516  0017DA  EFF1  F00B         	goto	u2521
  5517  0017DE  EFF3  F00B         	goto	u2520
  5518  0017E2                     u2521:
  5519  0017E2  EFF7  F00B         	goto	l3295
  5520  0017E6                     u2520:
  5521  0017E6  6C07               	negf	___awdiv@quotient^0,c
  5522  0017E8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5523  0017EA  B0D8               	btfsc	status,0,c
  5524  0017EC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5525  0017EE                     l3295:
  5526  0017EE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5527  0017F2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5528  0017F6  0012               	return		;funcret
  5529  0017F8                     __end_of___awdiv:
  5530                           	callstack 0
  5531                           
  5532                           	psect	rparam
  5533  0000                     
  5534                           	psect	idloc
  5535                           
  5536                           ;Config register IDLOC0 @ 0x200000
  5537                           ;	unspecified, using default values
  5538  200000                     	org	2097152
  5539  200000  FF                 	db	255
  5540                           
  5541                           ;Config register IDLOC1 @ 0x200001
  5542                           ;	unspecified, using default values
  5543  200001                     	org	2097153
  5544  200001  FF                 	db	255
  5545                           
  5546                           ;Config register IDLOC2 @ 0x200002
  5547                           ;	unspecified, using default values
  5548  200002                     	org	2097154
  5549  200002  FF                 	db	255
  5550                           
  5551                           ;Config register IDLOC3 @ 0x200003
  5552                           ;	unspecified, using default values
  5553  200003                     	org	2097155
  5554  200003  FF                 	db	255
  5555                           
  5556                           ;Config register IDLOC4 @ 0x200004
  5557                           ;	unspecified, using default values
  5558  200004                     	org	2097156
  5559  200004  FF                 	db	255
  5560                           
  5561                           ;Config register IDLOC5 @ 0x200005
  5562                           ;	unspecified, using default values
  5563  200005                     	org	2097157
  5564  200005  FF                 	db	255
  5565                           
  5566                           ;Config register IDLOC6 @ 0x200006
  5567                           ;	unspecified, using default values
  5568  200006                     	org	2097158
  5569  200006  FF                 	db	255
  5570                           
  5571                           ;Config register IDLOC7 @ 0x200007
  5572                           ;	unspecified, using default values
  5573  200007                     	org	2097159
  5574  200007  FF                 	db	255
  5575                           
  5576                           	psect	config
  5577                           
  5578                           ; Padding undefined space
  5579  300000                     	org	3145728
  5580  300000  FF                 	db	255
  5581                           
  5582                           ;Config register CONFIG1H @ 0x300001
  5583                           ;	Oscillator Selection bits
  5584                           ;	OSC = HS, HS oscillator
  5585                           ;	Fail-Safe Clock Monitor Enable bit
  5586                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5587                           ;	Internal/External Oscillator Switchover bit
  5588                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5589  300001                     	org	3145729
  5590  300001  02                 	db	2
  5591                           
  5592                           ;Config register CONFIG2L @ 0x300002
  5593                           ;	Power-up Timer Enable bit
  5594                           ;	PWRT = OFF, PWRT disabled
  5595                           ;	Brown-out Reset Enable bits
  5596                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5597                           ;	Brown Out Reset Voltage bits
  5598                           ;	BORV = 0x2E, user specified literal
  5599  300002                     	org	3145730
  5600  300002  71                 	db	369
  5601                           
  5602                           ;Config register CONFIG2H @ 0x300003
  5603                           ;	Watchdog Timer Enable bit
  5604                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5605                           ;	Watchdog Timer Postscale Select bits
  5606                           ;	WDTPS = 1, 1:1
  5607  300003                     	org	3145731
  5608  300003  00                 	db	0
  5609                           
  5610                           ; Padding undefined space
  5611  300004                     	org	3145732
  5612  300004  FF                 	db	255
  5613                           
  5614                           ;Config register CONFIG3H @ 0x300005
  5615                           ;	CCP2 MUX bit
  5616                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5617                           ;	PORTB A/D Enable bit
  5618                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5619                           ;	Low-Power Timer1 Oscillator Enable bit
  5620                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5621                           ;	MCLR Pin Enable bit
  5622                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5623  300005                     	org	3145733
  5624  300005  83                 	db	131
  5625                           
  5626                           ;Config register CONFIG4L @ 0x300006
  5627                           ;	Stack Full/Underflow Reset Enable bit
  5628                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5629                           ;	Single-Supply ICSP Enable bit
  5630                           ;	LVP = OFF, Single-Supply ICSP disabled
  5631                           ;	Extended Instruction Set Enable bit
  5632                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5633                           ;	Background Debugger Enable bit
  5634                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5635  300006                     	org	3145734
  5636  300006  80                 	db	128
  5637                           
  5638                           ; Padding undefined space
  5639  300007                     	org	3145735
  5640  300007  FF                 	db	255
  5641                           
  5642                           ;Config register CONFIG5L @ 0x300008
  5643                           ;	Code Protection bit
  5644                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5645                           ;	Code Protection bit
  5646                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5647                           ;	Code Protection bit
  5648                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5649                           ;	Code Protection bit
  5650                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5651  300008                     	org	3145736
  5652  300008  0F                 	db	15
  5653                           
  5654                           ;Config register CONFIG5H @ 0x300009
  5655                           ;	Boot Block Code Protection bit
  5656                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5657                           ;	Data EEPROM Code Protection bit
  5658                           ;	CPD = OFF, Data EEPROM not code-protected
  5659  300009                     	org	3145737
  5660  300009  C0                 	db	192
  5661                           
  5662                           ;Config register CONFIG6L @ 0x30000A
  5663                           ;	Write Protection bit
  5664                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5665                           ;	Write Protection bit
  5666                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5667                           ;	Write Protection bit
  5668                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5669                           ;	Write Protection bit
  5670                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5671  30000A                     	org	3145738
  5672  30000A  0F                 	db	15
  5673                           
  5674                           ;Config register CONFIG6H @ 0x30000B
  5675                           ;	Configuration Register Write Protection bit
  5676                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5677                           ;	Boot Block Write Protection bit
  5678                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5679                           ;	Data EEPROM Write Protection bit
  5680                           ;	WRTD = OFF, Data EEPROM not write-protected
  5681  30000B                     	org	3145739
  5682  30000B  E0                 	db	224
  5683                           
  5684                           ;Config register CONFIG7L @ 0x30000C
  5685                           ;	Table Read Protection bit
  5686                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5687                           ;	Table Read Protection bit
  5688                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5689                           ;	Table Read Protection bit
  5690                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5691                           ;	Table Read Protection bit
  5692                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5693  30000C                     	org	3145740
  5694  30000C  0F                 	db	15
  5695                           
  5696                           ;Config register CONFIG7H @ 0x30000D
  5697                           ;	Boot Block Table Read Protection bit
  5698                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5699  30000D                     	org	3145741
  5700  30000D  40                 	db	64
  5701                           tosu	equ	0xFFF
  5702                           tosh	equ	0xFFE
  5703                           tosl	equ	0xFFD
  5704                           stkptr	equ	0xFFC
  5705                           pclatu	equ	0xFFB
  5706                           pclath	equ	0xFFA
  5707                           pcl	equ	0xFF9
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           prodh	equ	0xFF4
  5713                           prodl	equ	0xFF3
  5714                           indf0	equ	0xFEF
  5715                           postinc0	equ	0xFEE
  5716                           postdec0	equ	0xFED
  5717                           preinc0	equ	0xFEC
  5718                           plusw0	equ	0xFEB
  5719                           fsr0h	equ	0xFEA
  5720                           fsr0l	equ	0xFE9
  5721                           wreg	equ	0xFE8
  5722                           indf1	equ	0xFE7
  5723                           postinc1	equ	0xFE6
  5724                           postdec1	equ	0xFE5
  5725                           preinc1	equ	0xFE4
  5726                           plusw1	equ	0xFE3
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           bsr	equ	0xFE0
  5730                           indf2	equ	0xFDF
  5731                           postinc2	equ	0xFDE
  5732                           postdec2	equ	0xFDD
  5733                           preinc2	equ	0xFDC
  5734                           plusw2	equ	0xFDB
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8

Data Sizes:
    Strings     97
    Constant    16
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43      76
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_func
    _func->_autoVentilador
    _livreVentilador->_pwmFrequency
    _livreVentilador->_start
    _autoVentilador->_contador
    _temporizador->_printf
    _display->_lcdCommand
    _start->_printf
    _ssdInit->_pinMode
    _printf->_lcdCommand
    _printf->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _pwmSet1->___lwdiv
    _pwmFrequency->___aldiv
    _contador->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdDigit->___llmod
    ___llmod->___lldiv
    _adcInit->_pinMode
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  134732
                               _func
                              _start
 ---------------------------------------------------------------------------------
 (1) _func                                                 3     3      0  113786
                                             40 COMRAM     3     3      0
                     _autoVentilador
                         _kpDebounce
                             _kpRead
                    _livreVentilador
 ---------------------------------------------------------------------------------
 (2) _livreVentilador                                      6     6      0   44069
                                             16 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
                            _adcInit
                            _adcRead
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                             _printf
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                              _start
 ---------------------------------------------------------------------------------
 (2) _autoVentilador                                      10    10      0   69440
                                             32 COMRAM     8     8      0
                            ___awdiv
                            ___awmod
                            _adcInit
                            _adcRead
                           _contador
                         _lcdCommand
                            _lcdData
                             _printf
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                              _start
                       _temporizador
 ---------------------------------------------------------------------------------
 (3) _temporizador                                         6     6      0   20468
                                             14 COMRAM     6     6      0
                             ___wmul
                            _display
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                             _printf
                            _ssdInit
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (4) _display                                              4     2      2    3229
                                              8 COMRAM     4     2      2
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _start                                                2     2      0   20945
                                             14 COMRAM     2     2      0
                             _kpInit
                         _lcdCommand
                            _lcdData
                            _lcdInit
                             _printf
                            _pwmInit
                            _ssdInit
 ---------------------------------------------------------------------------------
 (2) _ssdInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    6596
                                              8 COMRAM     6     4      2
                         _lcdCommand
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdData                                              2     2      0    2951
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    5683
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    3055
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pwmSet1                                              5     5      0    2084
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) _contador                                             8     4      4    4997
                                             24 COMRAM     8     4      4
                            ___lldiv
                            ___llmod
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (4) _ssdUpdate                                            2     2      0    2876
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    2876
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _ssdDigit                                             2     1      1     480
                                             22 COMRAM     2     1      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _adcRead                                              4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2272
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _func
     _autoVentilador
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _adcInit
         _pinMode
       _adcRead
       _contador
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _ssdDigit
           ___lldiv (ARG)
           ___llmod (ARG)
         _ssdUpdate
           _digitalWrite
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdData
         _Delay40us
         _digitalWrite
       _printf
         _lcdCommand
         _lcdData
       _pwmFrequency
         ___aldiv
       _pwmInit
       _pwmSet1
         ___lwdiv
         ___wmul
       _start
         _kpInit
         _lcdCommand
         _lcdData
         _lcdInit
           _Delay2ms
           _lcdCommand
           _pinMode
         _printf
         _pwmInit
         _ssdInit
           _pinMode
       _temporizador
         ___wmul
         _display
           _lcdCommand
         _kpDebounce
         _kpInit
         _kpRead
         _lcdCommand
         _lcdData
         _printf
         _ssdInit
     _kpDebounce
     _kpRead
     _livreVentilador
       ___awdiv
       ___awmod
       _adcInit
       _adcRead
       _kpDebounce
       _kpInit
       _kpRead
       _lcdCommand
       _lcdData
       _printf
       _pwmFrequency
       _pwmInit
       _pwmSet1
       _start
   _start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2B      4C       1       59.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      15        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 01 15:20:06 2021

                      l31 1EBC                        l32 1ED8                        l25 1F08  
                      l29 1EAE                        u10 1F88                        u11 1F84  
           temporizador@i 0013              ___awdiv@sign 0006                        _v0 0048  
                      _v1 0047                        _v2 0046                        _v3 0045  
                      _de 004B                        _on 003C       ___wmul@multiplicand 0003  
 __size_of_autoVentilador 01D8                       l102 0C38                       l200 1E88  
                     l203 1BE8                       l220 1CC8                       l136 0E86  
                     l226 1F54                       l172 1FD6                       l229 1FB2  
                     l149 1FCC                       l190 1F70                       l167 14BA  
                     l168 14D2                       l185 1F88                       l169 14DA  
                     l197 1AF8                       l551 105E                       l560 1D32  
                     l465 1D8A                       l633 1E34                       l475 1626  
                     l715 1732                       l627 194E                       l539 1360  
                     l636 1F2E                       l572 08D2                       l670 19F2  
                     l478 1DE0                       l663 19E2                       l567 11E2  
                     l489 1B70                       l594 09EA                       l880 18A6  
                     l867 17F6                       u220 1F70                       u221 1F6C  
                     _PR2 000FCB                       u520 147E                       u504 1426  
                     u521 147A                       u505 1420                       u530 1490  
                     u514 1456                       u531 148C                       u515 1450  
                     u540 14A8                       u541 14A4                       u550 14CA  
                     u470 13D8                       u454 1384                       u551 14C6  
                     u471 13D4                       u455 1380                       u464 13A4  
                     u465 13A0                       u490 1408                       u491 1404  
                     u484 13EE                       u485 13EA                       _tmp 0038  
            ___awmod@sign 000E                       wreg 000FE8                      l1134 1C5C  
                    l1063 1A7A                      l1127 1C54                      l1056 1A6A  
                    l3001 18B0                      l1315 1F76                      l3003 18B4  
                    l1317 1F78                      l1309 1F72                      l3021 18F6  
                    l3005 18B8                      l1501 14CA                      l3101 0710  
                    l3031 190A                      l3023 18FC                      l3015 18D0  
                    l3007 18BC                      l1503 14D6                      l3111 0748  
                    l3103 072A                      l3041 1EDA                      l1505 1FCE  
                    l3033 190E                      l3017 18D6                      l3009 18C2  
                    l3201 08CA                      l3113 0762                      l3105 0730  
                    l3043 1F02                      l3051 1EAC                      l3035 192A  
                    l3019 18DA                      l1451 1362                      l3211 091C  
                    l3131 079A                      l3115 0768                      l3107 0734  
                    l3203 08D2                      l3301 17FC                      l3045 1F04  
                    l3053 1EC2                      l3061 1C60                      l1365 1F5A  
                    l1541 1FA0                      l3037 1930                      l3029 1904  
                    l1461 136E                      l1453 1366                      l3221 09D2  
                    l3213 0938                      l3205 08E8                      l3141 07D2  
                    l3133 07A0                      l3117 076C                      l3109 073A  
                    l3311 182C                      l3303 180A                      l3055 1EC8  
                    l3047 1E8A                      l3231 113C                      l3223 1060  
                    l3071 1F30                      l3063 1C7E                      l1367 1F5E  
                    l1359 1F56                      l1543 1FA4                      l3039 193C  
                    l1471 13BC                      l1463 13B0                      l1455 136A  
                    l3215 0954                      l3207 08F2                      l3143 07D8  
                    l3135 07A4                      l3127 0772                      l3321 1872  
                    l3313 183E                      l3305 1812                      l3057 1ED0  
                    l3049 1EA4                      l3241 119A                      l3233 118E  
                    l3225 106A                      l3065 1C9A                      l1369 1F60  
                    l1545 1FA8                      l1481 1408                      l1473 13D8  
                    l3217 09C6                      l3209 0912                      l3161 0810  
                    l3145 07DC                      l3129 0780                      l3137 07AA  
                    l3081 0694                      l3073 0674                      l3401 0E90  
                    l3331 189E                      l3323 187A                      l3315 1846  
                    l3307 1816                      l3251 11C2                      l3227 1098  
                    l3067 1CA2                      l1491 1480                      l1483 1438  
                    l3171 0848                      l3163 0814                      l3139 07B8  
                    l3155 07E2                      l3091 06C8                      l3083 069A  
                    l3075 067C                      l3411 0EB2                      l3403 0E98  
                    l3261 174E                      l3325 1880                      l3317 184E  
                    l3309 1824                      l2701 0D50                      l3253 11C6  
                    l3229 10EA                      l3069 1CBA                      l1493 1490  
                    l1485 146C                      l1469 13B8                      l3173 084C  
                    l3157 07F0                      l3165 081A                      l3093 06CC  
                    l3085 06A0                      l3077 0684                      l3421 0F04  
                    l3413 0EC6                      l3405 0E98                      l3271 1774  
                    l3263 1752                      l3255 1734                      l3319 185C  
                    l3327 1886                      l2711 0DEC                      l2703 0D74  
                    l3247 11A2                      l3239 1196                      l1495 14A8  
                    l1487 146E                      l1479 13DC                      l3191 0884  
                    l3167 0828                      l3183 0852                      l3159 080A  
                    l3095 06EE                      l3087 06AC                      l3079 068C  
                    l3431 0F16                      l3415 0ED0                      l3407 0E9C  
                    l3351 1202                      l3281 17AA                      l3273 1786  
                    l3265 1760                      l3257 1738                      l3329 1896  
                    l2713 0E12                      l2705 0D9A                      l2801 1D5A  
                    l2641 09EC                      l3249 11A6                      l2721 1A7E  
                    l1497 14AE                      l1489 147E                      l3185 0860  
                    l3193 088A                      l3169 0842                      l3097 06F6  
                    l3089 06B8                      l3441 0FCE                      l3433 0F32  
                    l3417 0ED6                      l3409 0EA8                      l3361 124E  
                    l3353 120E                      l3283 17C0                      l3275 178E  
                    l3291 17D6                      l3267 1768                      l3259 1746  
                    l2715 0E2E                      l2707 0DB6                      l2803 1D5E  
                    l2651 0A78                      l2643 0A08                      l2811 14DC  
                    l2731 1AB2                      l2723 1A82                      l1499 14B2  
                    l3195 0898                      l3187 087A                      l3099 0702  
                    l3451 1016                      l3443 0FD4                      l3435 0FC6  
                    l3427 0F0C                      l3419 0EEA                      l3371 126C  
                    l3363 1254                      l3355 1228                      l3347 11E4  
                    l3523 1FB4                      l3293 17E6                      l3285 17C8  
                    l3277 1796                      l3269 176C                      l2717 0E40  
                    l2709 0DC8                      l2901 198A                      l2805 1D70  
                    l2661 0B0A                      l2653 0A92                      l2645 0A1A  
                    l2821 1562                      l2813 152C                      l2741 1AF4  
                    l2733 1AC6                      l2725 1A86                      l3197 08AA  
                    l3189 0880                      l3461 105A                      l3453 101E  
                    l3445 0FD8                      l3429 0F12                      l3381 12F4  
                    l3373 1272                      l3365 125A                      l3357 1242  
                    l3349 11FC                      l3525 1FB4                      l3295 17EE  
                    l3287 17CA                      l3279 17A4                      l2719 0E64  
                    l2911 19D2                      l2903 1998                      l2807 1D74  
                    l2671 0BA2                      l2663 0B2A                      l2655 0AB2  
                    l2647 0A3A                      l2831 15B6                      l2823 1574  
                    l2815 1534                      l2735 1ACA                      l2727 1A9A  
                    l2751 1E58                      l2743 1E38                      l3199 08B0  
                    l3455 103A                      l3447 0FF4                      l3391 133C  
                    l3383 1300                      l3375 1278                      l3367 1260  
                    l3359 1248                      l3471 1E1E                      l3463 1DE2  
                    l3527 1FB8                      l3289 17D0                      l2681 0C3A  
                    l2913 19DC                      l2905 19A2                      l2809 1D86  
                    l2673 0BC4                      l2665 0B4C                      l2657 0AD4  
                    l2649 0A5C                      l2833 15BE                      l2825 1588  
                    l2817 1546                      l2921 164A                      l2737 1ADC  
                    l2729 1A9E                      l2761 1B72                      l2753 1E6C  
                    l2745 1E3C                      l3633 1D0C                      l3449 1000  
                    l3457 1042                      l3393 1342                      l3385 1304  
                    l3377 12A8                      l3369 1266                      l3473 1E22  
                    l3465 1DE6                      l3299 17F8                      l2691 0CC6  
                    l2683 0C56                      l2907 19C0                      l2675 0BE0  
                    l2667 0B68                      l2659 0AF0                      l3635 1600  
                    l2835 15D0                      l2827 1590                      l2819 155A  
                    l2843 15EC                      l2931 1680                      l2923 164E  
                    l2915 1628                      l2739 1AEC                      l2771 1BAA  
                    l2763 1B9A                      l2755 1E80                      l2747 1E40  
                    l2851 1DDC                      l3459 1054                      l3387 1326  
                    l3379 12D8                      l3395 134A                      l3475 1E30  
                    l3467 1E08                      l2693 0CD8                      l2685 0C68  
                    l2909 19D0                      l2677 0BFA                      l2669 0B82  
                    l2837 15E4                      l2829 15A2                      l2941 16C2  
                    l2933 1696                      l2925 165C                      l2917 162C  
                    l2781 1BC0                      l2773 1BAE                      l2765 1B9E  
                    l2757 1E84                      l2749 1E54                      l2861 1B2A  
                    l2853 1AFA                      l3397 135C                      l3389 132E  
                    l3469 1E10                      l2695 0CFC                      l2687 0C88  
                    l2679 0C1A                      l2943 16E0                      l2935 169E  
                    l2951 1702                      l2927 166C                      l2919 163A  
                    l2791 1BDC                      l2783 1BC6                      l2775 1BB2  
                    l2767 1BA2                      l2863 1B34                      l2871 1CCE  
                    l2759 1FC4                      l3399 0E88                      l2697 0D22  
                    l2689 0CAA                      l2961 1A0A                      l2953 1712  
                    l2945 16F0                      l2937 16AA                      l2929 1670  
                    l2793 1BE2                      l2785 1BCA                      l2777 1BB8  
                    l2769 1BA6                      l2865 1B50                      l2849 1D8C  
                    l2873 1CD8                      l2881 1CF6                      l2699 0D3E  
                    l2971 1A5A                      l2963 1A12                      l2795 1D36  
                    l2955 1722                      l2947 16F2                      l2939 16B8  
                    l2787 1BD0                      l2779 1BBC                      l2867 1B54  
                    l2859 1B02                      l2875 1CE2                      l2893 1950  
                    l2973 1A64                      l2965 1A1E                      l2797 1D46  
                    l2949 16FC                      l2981 1C0C                      l2789 1BD6  
                    l2877 1CEC                      l2869 1CCA                      l2895 1960  
                    l2967 1A2C                      l2959 19F4                      l2799 1D4A  
                    l2991 1C46                      l2983 1C14                      l2975 1BEA  
                    l2887 1F0A                      l2897 1976                      l2969 1A4A  
                    l2993 1C48                      l2985 1C22                      l2977 1BF2  
                    l2889 1F26                      l2899 197E                      l2995 1C4E  
                    l2987 1C28                      l2979 1C04                      l2989 1C3E  
                    l2997 18A8                      l2999 18AC                      STR_1 0663  
                    STR_2 0653                      STR_3 0611                      STR_4 0622  
                    STR_5 0633                      STR_6 0643                      u2000 0E2E  
                    u2001 0E2A                      u2010 0E40                      u2011 0E3C  
                    u2100 1B2A                      u2101 1B26                      u2110 1B70  
                    u2111 1B6C                      u2024 0E56                      u2120 1976  
                    u2200 1712                      u2040 1ADC                      u2025 0E52  
                    u2121 1972                      u2201 170E                      u2041 1AD8  
                    u2034 0E7A                      u2130 1998                      u2210 1A0A  
                    u2050 1AEC                      u2035 0E76                      u2131 1994  
                    u2211 1A06                      u2051 1AE8                      u2300 1EBC  
                    u2140 19C0                      u2220 1A2C                      u2060 1D46  
                    u2301 1EB8                      u2141 19BC                      u2221 1A28  
                    u2061 1D42                      u2230 1A4A                      u2070 1D5A  
                    u2150 163A                      u2310 06EE                      u2231 1A46  
                    u2071 1D56                      u2151 1636                      u2311 06EA  
                    u2080 1D70                      u2160 165C                      u2240 1C04  
                    u2400 08AA                      u2320 0710                      u2081 1D6C  
                    u2161 1658                      u2241 1C00                      u2401 08A6  
                    u2321 070C                      u2090 1D86                      u2170 1696  
                    u2250 1C22                      u2410 08E4                      u2330 0748  
                    u2091 1D82                      u2171 1692                      u2251 1C1E  
                    u2411 08E0                      u2331 0744                      u2500 17A4  
                    u2180 16B8                      u2260 1C3E                      u2420 090E  
                    u2340 0780                      u2501 17A0                      u2181 16B4  
                    u2261 1C3A                      u2421 090A                      u2341 077C  
                    u2510 17C0                      u2190 16E0                      u2270 18F6  
                    u2430 0938                      u2350 07B8                      u2511 17BC  
                    u2191 16DC                      u2271 18F2                      u2431 0934  
                    u2351 07B4                      u2520 17E6                      u1800 0BE0  
                    u1720 0AF0                      u1704 0AA4                      u1640 0A08  
                    u2280 192A                      u2440 0954                      u2360 07F0  
                    u2521 17E2                      u1801 0BDC                      u1721 0AEC  
                    u1705 0AA0                      u1641 0A04                      u2281 1926  
                    u2441 0950                      u2361 07EC                      u2530 180A  
                    u2290 1EA4                      u1810 0BFA                      u1730 0B0A  
                    u1714 0AC4                      u1650 0A1A                      u2450 11C2  
                    u2370 0828                      u2531 1806                      u2291 1EA0  
                    u1811 0BF6                      u1731 0B06                      u1715 0AC0  
                    u1651 0A16                      u2451 11BE                      u2371 0824  
                    u2540 1824                      u2460 11E2                      u2380 0860  
                    u2700 1054                      u2541 1820                      u2461 11DE  
                    u2381 085C                      u2701 1050                      u2470 1746  
                    u2550 183E                      u2390 0898                      u2630 1326  
                    u2710 1E08                      u2471 1742                      u2551 183A  
                    u2391 0894                      u2631 1322                      u2711 1E04  
                    u2480 1760                      u2560 185C                      u1920 0D3E  
                    u1904 0CEE                      u1840 0C56                      u1824 0C0C  
                    u1760 0B68                      u1744 0B1C                      u1680 0A78  
                    u1664 0A2C                      u2640 133C                      u2720 1E1E  
                    u2481 175C                      u2561 1858                      u1921 0D3A  
                    u1905 0CEA                      u1841 0C52                      u1825 0C08  
                    u1761 0B64                      u1745 0B18                      u1681 0A74  
                    u1665 0A28                      u2641 1338                      u2721 1E1A  
                    u2490 1786                      u2570 1872                      u1930 0D50  
                    u1914 0D12                      u1850 0C68                      u1834 0C2C  
                    u1770 0B82                      u1754 0B3C                      u1690 0A92  
                    u1674 0A4C                      u2650 135C                      u2730 1E30  
                    u2491 1782                      u2571 186E                      u1931 0D4C  
                    u1915 0D0E                      u1851 0C64                      u1835 0C28  
                    u1771 0B7E                      u1755 0B38                      u1691 0A8E  
                    u1675 0A48                      u2651 1358                      u2731 1E2C  
                    u2580 1896                      u2660 0F32                      u2581 1892  
                    u2661 0F2E                      u2670 0FF4                      u2671 0FF0  
                    u1960 0DB6                      u1944 0D66                      u1880 0CC6  
                    u1864 0C7A                      u1784 0B94                      u2680 1016  
                    u1961 0DB2                      u1945 0D62                      u1881 0CC2  
                    u1865 0C76                      u1785 0B90                      u2681 1012  
                    u1970 0DC8                      u1954 0D8A                      u1890 0CD8  
                    u1874 0C9A                      u1794 0BB4                      u2690 103A  
                    u1971 0DC4                      u1955 0D86                      u1891 0CD4  
                    u1875 0C96                      u1795 0BB0                      u2691 1036  
                    u1984 0DDE                      u1985 0DDA                      u1994 0E02  
                    u1995 0DFE                      _PIR1 000F9E           temporizador@aux 0011  
                    _cont 0034                      _main 1FB4                      _func 1DE2  
                    fsr2h 000FDA                      fsr2l 000FD9                      prodh 000FF4  
                    prodl 000FF3       autoVentilador@x_522 0025                      start 0000  
     autoVentilador@valor 0027              ___param_bank 000000           __end_of___aldiv 1734  
                   ?_main 0001                     ?_func 0001           __end_of_adcInit 1F0A  
         __end_of_adcRead 1EDA           __end_of___awdiv 17F8           __end_of___awmod 18A8  
         __end_of___lldiv 19F4           ___awdiv@divisor 0003           __end_of___llmod 1A7C  
                   _T2CON 000FCA           __end_of___lwdiv 1C5E           ___awdiv@counter 0005  
                   _RCREG 000FAE                     _RCSTA 000FAB                     _SPBRG 000FAF  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _PORTD 000F83                     _PORTE 000F84                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96                     _TXREG 000FAD                     _TXSTA 000FAC  
         __end_of_lcdData 1E8A           __end_of_lcdInit 1BEA           __end_of_display 1D34  
                   _tecla 0044           __end_of_pinMode 0E88                     _valor 0042  
                   _tempo 002C                     _start 18A8           _livreVentilador 11E4  
                   tablat 000FF5           __end_of_ssdInit 1DE2           __end_of_pwmSet1 1CCA  
         __end_of_pwmInit 1FB4                     status 000FD8          __end_of_Delay2ms 1F72  
    __end_of_digitalWrite 0C3A           __initialization 1F8A              __end_of_main 1FC4  
            __end_of_func 1E36        __size_of_Delay40us 0018              contador@cont 0019  
                  ??_main 002C                    ??_func 0029             __activetblptr 000002  
                  _ADCON0 000FC2                    _ADCON2 000FC0          ___llmod@dividend 000E  
                  _ADRESH 000FC4                    _ADRESL 000FC3                    _CCPR1L 000FBE  
                  _CCPR2L 000FBB          ___awdiv@dividend 0001                    ?_start 0001  
                  _SPBRGH 000FB0             display@coluna 0009         livreVentilador@on 0013  
        __end_of_contador 11E4                 ??___aldiv 0009                    ___wmul 1F0A  
               ??_adcInit 0007                 ??_adcRead 0003                 ??___awdiv 0005  
               ??___awmod 000D                 ??___lldiv 0009                 ??___llmod 0016  
               ??___lwdiv 0005                    _kpInit 1FCE                    _kpRead 1FC4  
                  clear_0 1F90          ___awdiv@quotient 0007            _autoVentilador 0E88  
         ___awmod@divisor 000B                 ??_lcdData 0007                    isa$std 000001  
               ??_lcdInit 0009           ___awmod@counter 000D                    _printf 1AFA  
               ??_display 000B          __end_of_ssdDigit 1D8C   __end_of_livreVentilador 1362  
               ??_pinMode 0005              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                 ??_ssdInit 0007  
               ??_pwmSet1 0008                 ??_pwmInit 0001                    start@i 000F  
       __end_of_Delay40us 1F8A                __accesstop 0080   __end_of__initialization 1F96  
           ___rparam_used 000001               pinMode@type 0003            __pcstackCOMRAM 0001  
  __end_of_autoVentilador 1060             __end_of_start 1950                 ?_Delay2ms 0001  
                 ??_start 000F     __size_of_digitalWrite 024E                _lcdCommand 1A7C  
                 ?___wmul 0001           ?_autoVentilador 0001                   ?_kpInit 0001  
                 ?_kpRead 0001                   _CCP1CON 000FBD                   _CCP2CON 000FBA  
                 _BAUDCON 000FB8                _kpDebounce 1362                   ?_printf 0009  
      __size_of_ssdUpdate 014C                   _INTCON2 000FF1                ??_Delay2ms 0002  
        ?_livreVentilador 0001              _digitalWrite 09EC                 ?_contador 0019  
                 __Hparam 0000                   __Lparam 0000                 ?_ssdDigit 0017  
         kpDebounce@old_D 0006           kpDebounce@tempo 004C                   ___aldiv 1628  
                 _adcInit 1EDA                   _adcRead 1E8A                   ___awdiv 1734  
                 ___awmod 17F8                   ___lldiv 1950           __size_of___wmul 0026  
                 ___llmod 19F4                   ___lwdiv 1BEA              __psmallconst 0600  
         __size_of_kpInit 000A           __size_of_kpRead 000A               ssdDigit@val 0018  
             ssdDigit@pos 0017                   __pcinit 1F8A                   _lcdData 1E36  
                 __ramtop 0600                   _lcdInit 1B72                   __ptext0 1FB4  
                 __ptext1 1DE2                   __ptext2 11E4                   __ptext3 0E88  
                 __ptext4 0674                   __ptext5 1FC4                   __ptext6 1362  
                 __ptext7 1CCA                   __ptext8 18A8                   __ptext9 1D8C  
         __size_of_printf 0078                   _display 1CCA                   _pinMode 0C3A  
        ___awmod@dividend 0009          ___aldiv@dividend 0001                   _ssdInit 1D8C  
                 _pwmSet1 1C5E                   _pwmInit 1FA0                 Delay2ms@i 0002  
                 _started 004A       kpDebounce@valorNovo 0040      end_of_initialization 1F96  
              ??_contador 001D             __Lmediumconst 0000             ?_pwmFrequency 000F  
         ___lldiv@divisor 0005         __end_of_ssdUpdate 1628           ___lldiv@counter 000D  
              ??_ssdDigit 0018             ?_temporizador 0001                   printf@c 0009  
                 printf@i 000D          ___aldiv@quotient 000B                   postdec2 000FDD  
             ?_lcdCommand 0001                   postinc0 000FEE                   postinc2 000FDE  
             ?_kpDebounce 0001            _valor@ssd$F459 0601            ??_pwmFrequency 0011  
               _Delay40us 1F72            ??_temporizador 000F            adcRead@ADvalor 0003  
          __end_of___wmul 1F30            __end_of_kpInit 1FD8            __end_of_kpRead 1FCE  
  __end_of_valor@ssd$F459 0611            __end_of_printf 1B72       start_initialization 1F8A  
       __size_of_Delay2ms 001C       __size_of_lcdCommand 007E       __size_of_kpDebounce 017A  
              ?_Delay40us 0001           ___llmod@divisor 0012           ___llmod@counter 0016  
        ??_autoVentilador 0021            adcRead@channel 0001                  ??___wmul 0005  
                ??_kpInit 0001                  ??_kpRead 0003                  ??_printf 000B  
    livreVentilador@valor 0015               __pbssCOMRAM 002C                pinMode@pin 0001  
       __size_of_contador 0184          ___lwdiv@dividend 0001                  ?___aldiv 0001  
                ?_adcInit 0001                  ?_adcRead 0001                  ?___awdiv 0001  
                ?___awmod 0009                  ?___lldiv 0001         __size_of_ssdDigit 0058  
                ?___llmod 000E                  ?___lwdiv 0001                  ?_lcdData 0001  
                ?_lcdInit 0001                  ?_display 0009      __end_of_pwmFrequency 1F56  
           lcdCommand@cmd 0008               __smallconst 0600                  ?_pinMode 0001  
    __end_of_temporizador 09EC                  ?_ssdInit 0001                  ?_pwmSet1 0001  
                ?_pwmInit 0001          ___lwdiv@quotient 0005            __size_of_start 00A8  
        pwmFrequency@freq 000F  __size_of_livreVentilador 017E           ___aldiv@divisor 0005  
         ___aldiv@counter 0009               ??_Delay40us 0001            ___wmul@product 0005  
        _display@ssd$F460 0049              ??_lcdCommand 0007                 _ssdUpdate 14DC  
              pwmSet1@val 000B              ??_kpDebounce 0001         ___wmul@multiplier 0001  
         lcdCommand@old_D 0007     kpDebounce@valorAntigo 003E                  _Delay2ms 1F56  
               contador@i 001D                 contador@j 001F        __end_of_lcdCommand 1AFA  
            lcdData@old_D 0008              lcdData@valor 0007                 func@tecla 002B  
      __end_of_kpDebounce 14DC                  __Hrparam 0000                  __Lrparam 0000  
              ?_ssdUpdate 0001          __size_of___aldiv 010C          __size_of_adcInit 0030  
        __size_of_adcRead 0050          __size_of___awdiv 00C4          __size_of___awmod 00B0  
        __size_of___lldiv 00A4          __size_of___llmod 0088          __size_of___lwdiv 0074  
         pwmSet1@porcento 000A          __size_of_lcdData 0054          __size_of_lcdInit 0078  
        __size_of_display 006A          __size_of_pinMode 024E           ___lwdiv@divisor 0003  
         ___lwdiv@counter 0007                  __ptext10 1FA0                  __ptext11 1AFA  
                __ptext20 1BEA                  __ptext12 1E36                  __ptext21 1F30  
                __ptext13 1B72                  __ptext30 1EDA                  __ptext22 1628  
                __ptext14 1A7C                  __ptext31 0C3A                  __ptext23 1060  
                __ptext15 1F56                  __ptext32 17F8                  __ptext24 14DC  
                __ptext16 1F72                  __ptext33 1734                  __ptext25 09EC  
                __ptext17 1FCE                  __ptext26 1D34                  __ptext18 1C5E  
                __ptext27 19F4                  __ptext19 1F0A                  __ptext28 1950  
                __ptext29 1E8A          __size_of_ssdInit 0056          __size_of_pwmSet1 006C  
        __size_of_pwmInit 0014                  _contador 1060             __size_of_main 0010  
           __size_of_func 0054                Delay40us@i 0001                  _ssdDigit 1D34  
       ??_livreVentilador 0011                  isa$xinst 000000     __size_of_pwmFrequency 0026  
        autoVentilador@on 0021     __size_of_temporizador 0378             ?_digitalWrite 0001  
       digitalWrite@value 0003          ___lldiv@dividend 0001              _pwmFrequency 1F30  
            _temporizador 0674               ??_ssdUpdate 0007           autoVentilador@x 0023  
        ___lldiv@quotient 0009               kpDebounce@i 000A               kpDebounce@j 0009  
             kpDebounce@k 0007            ??_digitalWrite 0005              ___aldiv@sign 000A  
         digitalWrite@pin 0001  
